/*
 * Copyright (c) 2013 Daniel Kirchner
 *
 * Copying and distribution of this file, with or without modification,
 * are permitted in any medium without royalty provided the copyright
 * notice and this notice are preserved.  This file is offered as-is,
 * without any warranty. 
 */
/* This file was generated by glcorew_gen.py.
 * Don't change it directoly, change glcorew_gen.py instead.*/
#include "glcorew.h"
#include <stdexcept>
#include <sstream>

PFNGLCULLFACEPROC glcorewCullFace =
    (PFNGLCULLFACEPROC) glcorewUnsupported;
PFNGLFRONTFACEPROC glcorewFrontFace =
    (PFNGLFRONTFACEPROC) glcorewUnsupported;
PFNGLHINTPROC glcorewHint =
    (PFNGLHINTPROC) glcorewUnsupported;
PFNGLLINEWIDTHPROC glcorewLineWidth =
    (PFNGLLINEWIDTHPROC) glcorewUnsupported;
PFNGLPOINTSIZEPROC glcorewPointSize =
    (PFNGLPOINTSIZEPROC) glcorewUnsupported;
PFNGLPOLYGONMODEPROC glcorewPolygonMode =
    (PFNGLPOLYGONMODEPROC) glcorewUnsupported;
PFNGLSCISSORPROC glcorewScissor =
    (PFNGLSCISSORPROC) glcorewUnsupported;
PFNGLTEXPARAMETERFPROC glcorewTexParameterf =
    (PFNGLTEXPARAMETERFPROC) glcorewUnsupported;
PFNGLTEXPARAMETERFVPROC glcorewTexParameterfv =
    (PFNGLTEXPARAMETERFVPROC) glcorewUnsupported;
PFNGLTEXPARAMETERIPROC glcorewTexParameteri =
    (PFNGLTEXPARAMETERIPROC) glcorewUnsupported;
PFNGLTEXPARAMETERIVPROC glcorewTexParameteriv =
    (PFNGLTEXPARAMETERIVPROC) glcorewUnsupported;
PFNGLTEXIMAGE1DPROC glcorewTexImage1D =
    (PFNGLTEXIMAGE1DPROC) glcorewUnsupported;
PFNGLTEXIMAGE2DPROC glcorewTexImage2D =
    (PFNGLTEXIMAGE2DPROC) glcorewUnsupported;
PFNGLDRAWBUFFERPROC glcorewDrawBuffer =
    (PFNGLDRAWBUFFERPROC) glcorewUnsupported;
PFNGLCLEARPROC glcorewClear =
    (PFNGLCLEARPROC) glcorewUnsupported;
PFNGLCLEARCOLORPROC glcorewClearColor =
    (PFNGLCLEARCOLORPROC) glcorewUnsupported;
PFNGLCLEARSTENCILPROC glcorewClearStencil =
    (PFNGLCLEARSTENCILPROC) glcorewUnsupported;
PFNGLCLEARDEPTHPROC glcorewClearDepth =
    (PFNGLCLEARDEPTHPROC) glcorewUnsupported;
PFNGLSTENCILMASKPROC glcorewStencilMask =
    (PFNGLSTENCILMASKPROC) glcorewUnsupported;
PFNGLCOLORMASKPROC glcorewColorMask =
    (PFNGLCOLORMASKPROC) glcorewUnsupported;
PFNGLDEPTHMASKPROC glcorewDepthMask =
    (PFNGLDEPTHMASKPROC) glcorewUnsupported;
PFNGLDISABLEPROC glcorewDisable =
    (PFNGLDISABLEPROC) glcorewUnsupported;
PFNGLENABLEPROC glcorewEnable =
    (PFNGLENABLEPROC) glcorewUnsupported;
PFNGLFINISHPROC glcorewFinish =
    (PFNGLFINISHPROC) glcorewUnsupported;
PFNGLFLUSHPROC glcorewFlush =
    (PFNGLFLUSHPROC) glcorewUnsupported;
PFNGLBLENDFUNCPROC glcorewBlendFunc =
    (PFNGLBLENDFUNCPROC) glcorewUnsupported;
PFNGLLOGICOPPROC glcorewLogicOp =
    (PFNGLLOGICOPPROC) glcorewUnsupported;
PFNGLSTENCILFUNCPROC glcorewStencilFunc =
    (PFNGLSTENCILFUNCPROC) glcorewUnsupported;
PFNGLSTENCILOPPROC glcorewStencilOp =
    (PFNGLSTENCILOPPROC) glcorewUnsupported;
PFNGLDEPTHFUNCPROC glcorewDepthFunc =
    (PFNGLDEPTHFUNCPROC) glcorewUnsupported;
PFNGLPIXELSTOREFPROC glcorewPixelStoref =
    (PFNGLPIXELSTOREFPROC) glcorewUnsupported;
PFNGLPIXELSTOREIPROC glcorewPixelStorei =
    (PFNGLPIXELSTOREIPROC) glcorewUnsupported;
PFNGLREADBUFFERPROC glcorewReadBuffer =
    (PFNGLREADBUFFERPROC) glcorewUnsupported;
PFNGLREADPIXELSPROC glcorewReadPixels =
    (PFNGLREADPIXELSPROC) glcorewUnsupported;
PFNGLGETBOOLEANVPROC glcorewGetBooleanv =
    (PFNGLGETBOOLEANVPROC) glcorewUnsupported;
PFNGLGETDOUBLEVPROC glcorewGetDoublev =
    (PFNGLGETDOUBLEVPROC) glcorewUnsupported;
PFNGLGETERRORPROC glcorewGetError =
    (PFNGLGETERRORPROC) glcorewUnsupported;
PFNGLGETFLOATVPROC glcorewGetFloatv =
    (PFNGLGETFLOATVPROC) glcorewUnsupported;
PFNGLGETINTEGERVPROC glcorewGetIntegerv =
    (PFNGLGETINTEGERVPROC) glcorewUnsupported;
PFNGLGETSTRINGPROC glcorewGetString =
    (PFNGLGETSTRINGPROC) glcorewUnsupported;
PFNGLGETTEXIMAGEPROC glcorewGetTexImage =
    (PFNGLGETTEXIMAGEPROC) glcorewUnsupported;
PFNGLGETTEXPARAMETERFVPROC glcorewGetTexParameterfv =
    (PFNGLGETTEXPARAMETERFVPROC) glcorewUnsupported;
PFNGLGETTEXPARAMETERIVPROC glcorewGetTexParameteriv =
    (PFNGLGETTEXPARAMETERIVPROC) glcorewUnsupported;
PFNGLGETTEXLEVELPARAMETERFVPROC glcorewGetTexLevelParameterfv =
    (PFNGLGETTEXLEVELPARAMETERFVPROC) glcorewUnsupported;
PFNGLGETTEXLEVELPARAMETERIVPROC glcorewGetTexLevelParameteriv =
    (PFNGLGETTEXLEVELPARAMETERIVPROC) glcorewUnsupported;
PFNGLISENABLEDPROC glcorewIsEnabled =
    (PFNGLISENABLEDPROC) glcorewUnsupported;
PFNGLDEPTHRANGEPROC glcorewDepthRange =
    (PFNGLDEPTHRANGEPROC) glcorewUnsupported;
PFNGLVIEWPORTPROC glcorewViewport =
    (PFNGLVIEWPORTPROC) glcorewUnsupported;
PFNGLDRAWARRAYSPROC glcorewDrawArrays =
    (PFNGLDRAWARRAYSPROC) glcorewUnsupported;
PFNGLDRAWELEMENTSPROC glcorewDrawElements =
    (PFNGLDRAWELEMENTSPROC) glcorewUnsupported;
PFNGLGETPOINTERVPROC glcorewGetPointerv =
    (PFNGLGETPOINTERVPROC) glcorewUnsupported;
PFNGLPOLYGONOFFSETPROC glcorewPolygonOffset =
    (PFNGLPOLYGONOFFSETPROC) glcorewUnsupported;
PFNGLCOPYTEXIMAGE1DPROC glcorewCopyTexImage1D =
    (PFNGLCOPYTEXIMAGE1DPROC) glcorewUnsupported;
PFNGLCOPYTEXIMAGE2DPROC glcorewCopyTexImage2D =
    (PFNGLCOPYTEXIMAGE2DPROC) glcorewUnsupported;
PFNGLCOPYTEXSUBIMAGE1DPROC glcorewCopyTexSubImage1D =
    (PFNGLCOPYTEXSUBIMAGE1DPROC) glcorewUnsupported;
PFNGLCOPYTEXSUBIMAGE2DPROC glcorewCopyTexSubImage2D =
    (PFNGLCOPYTEXSUBIMAGE2DPROC) glcorewUnsupported;
PFNGLTEXSUBIMAGE1DPROC glcorewTexSubImage1D =
    (PFNGLTEXSUBIMAGE1DPROC) glcorewUnsupported;
PFNGLTEXSUBIMAGE2DPROC glcorewTexSubImage2D =
    (PFNGLTEXSUBIMAGE2DPROC) glcorewUnsupported;
PFNGLBINDTEXTUREPROC glcorewBindTexture =
    (PFNGLBINDTEXTUREPROC) glcorewUnsupported;
PFNGLDELETETEXTURESPROC glcorewDeleteTextures =
    (PFNGLDELETETEXTURESPROC) glcorewUnsupported;
PFNGLGENTEXTURESPROC glcorewGenTextures =
    (PFNGLGENTEXTURESPROC) glcorewUnsupported;
PFNGLISTEXTUREPROC glcorewIsTexture =
    (PFNGLISTEXTUREPROC) glcorewUnsupported;
PFNGLDRAWRANGEELEMENTSPROC glcorewDrawRangeElements =
    (PFNGLDRAWRANGEELEMENTSPROC) glcorewUnsupported;
PFNGLTEXIMAGE3DPROC glcorewTexImage3D =
    (PFNGLTEXIMAGE3DPROC) glcorewUnsupported;
PFNGLTEXSUBIMAGE3DPROC glcorewTexSubImage3D =
    (PFNGLTEXSUBIMAGE3DPROC) glcorewUnsupported;
PFNGLCOPYTEXSUBIMAGE3DPROC glcorewCopyTexSubImage3D =
    (PFNGLCOPYTEXSUBIMAGE3DPROC) glcorewUnsupported;
PFNGLACTIVETEXTUREPROC glcorewActiveTexture =
    (PFNGLACTIVETEXTUREPROC) glcorewUnsupported;
PFNGLSAMPLECOVERAGEPROC glcorewSampleCoverage =
    (PFNGLSAMPLECOVERAGEPROC) glcorewUnsupported;
PFNGLCOMPRESSEDTEXIMAGE3DPROC glcorewCompressedTexImage3D =
    (PFNGLCOMPRESSEDTEXIMAGE3DPROC) glcorewUnsupported;
PFNGLCOMPRESSEDTEXIMAGE2DPROC glcorewCompressedTexImage2D =
    (PFNGLCOMPRESSEDTEXIMAGE2DPROC) glcorewUnsupported;
PFNGLCOMPRESSEDTEXIMAGE1DPROC glcorewCompressedTexImage1D =
    (PFNGLCOMPRESSEDTEXIMAGE1DPROC) glcorewUnsupported;
PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC glcorewCompressedTexSubImage3D =
    (PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC) glcorewUnsupported;
PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC glcorewCompressedTexSubImage2D =
    (PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC) glcorewUnsupported;
PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC glcorewCompressedTexSubImage1D =
    (PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC) glcorewUnsupported;
PFNGLGETCOMPRESSEDTEXIMAGEPROC glcorewGetCompressedTexImage =
    (PFNGLGETCOMPRESSEDTEXIMAGEPROC) glcorewUnsupported;
PFNGLBLENDFUNCSEPARATEPROC glcorewBlendFuncSeparate =
    (PFNGLBLENDFUNCSEPARATEPROC) glcorewUnsupported;
PFNGLMULTIDRAWARRAYSPROC glcorewMultiDrawArrays =
    (PFNGLMULTIDRAWARRAYSPROC) glcorewUnsupported;
PFNGLMULTIDRAWELEMENTSPROC glcorewMultiDrawElements =
    (PFNGLMULTIDRAWELEMENTSPROC) glcorewUnsupported;
PFNGLPOINTPARAMETERFPROC glcorewPointParameterf =
    (PFNGLPOINTPARAMETERFPROC) glcorewUnsupported;
PFNGLPOINTPARAMETERFVPROC glcorewPointParameterfv =
    (PFNGLPOINTPARAMETERFVPROC) glcorewUnsupported;
PFNGLPOINTPARAMETERIPROC glcorewPointParameteri =
    (PFNGLPOINTPARAMETERIPROC) glcorewUnsupported;
PFNGLPOINTPARAMETERIVPROC glcorewPointParameteriv =
    (PFNGLPOINTPARAMETERIVPROC) glcorewUnsupported;
PFNGLBLENDCOLORPROC glcorewBlendColor =
    (PFNGLBLENDCOLORPROC) glcorewUnsupported;
PFNGLBLENDEQUATIONPROC glcorewBlendEquation =
    (PFNGLBLENDEQUATIONPROC) glcorewUnsupported;
PFNGLGENQUERIESPROC glcorewGenQueries =
    (PFNGLGENQUERIESPROC) glcorewUnsupported;
PFNGLDELETEQUERIESPROC glcorewDeleteQueries =
    (PFNGLDELETEQUERIESPROC) glcorewUnsupported;
PFNGLISQUERYPROC glcorewIsQuery =
    (PFNGLISQUERYPROC) glcorewUnsupported;
PFNGLBEGINQUERYPROC glcorewBeginQuery =
    (PFNGLBEGINQUERYPROC) glcorewUnsupported;
PFNGLENDQUERYPROC glcorewEndQuery =
    (PFNGLENDQUERYPROC) glcorewUnsupported;
PFNGLGETQUERYIVPROC glcorewGetQueryiv =
    (PFNGLGETQUERYIVPROC) glcorewUnsupported;
PFNGLGETQUERYOBJECTIVPROC glcorewGetQueryObjectiv =
    (PFNGLGETQUERYOBJECTIVPROC) glcorewUnsupported;
PFNGLGETQUERYOBJECTUIVPROC glcorewGetQueryObjectuiv =
    (PFNGLGETQUERYOBJECTUIVPROC) glcorewUnsupported;
PFNGLBINDBUFFERPROC glcorewBindBuffer =
    (PFNGLBINDBUFFERPROC) glcorewUnsupported;
PFNGLDELETEBUFFERSPROC glcorewDeleteBuffers =
    (PFNGLDELETEBUFFERSPROC) glcorewUnsupported;
PFNGLGENBUFFERSPROC glcorewGenBuffers =
    (PFNGLGENBUFFERSPROC) glcorewUnsupported;
PFNGLISBUFFERPROC glcorewIsBuffer =
    (PFNGLISBUFFERPROC) glcorewUnsupported;
PFNGLBUFFERDATAPROC glcorewBufferData =
    (PFNGLBUFFERDATAPROC) glcorewUnsupported;
PFNGLBUFFERSUBDATAPROC glcorewBufferSubData =
    (PFNGLBUFFERSUBDATAPROC) glcorewUnsupported;
PFNGLGETBUFFERSUBDATAPROC glcorewGetBufferSubData =
    (PFNGLGETBUFFERSUBDATAPROC) glcorewUnsupported;
PFNGLMAPBUFFERPROC glcorewMapBuffer =
    (PFNGLMAPBUFFERPROC) glcorewUnsupported;
PFNGLUNMAPBUFFERPROC glcorewUnmapBuffer =
    (PFNGLUNMAPBUFFERPROC) glcorewUnsupported;
PFNGLGETBUFFERPARAMETERIVPROC glcorewGetBufferParameteriv =
    (PFNGLGETBUFFERPARAMETERIVPROC) glcorewUnsupported;
PFNGLGETBUFFERPOINTERVPROC glcorewGetBufferPointerv =
    (PFNGLGETBUFFERPOINTERVPROC) glcorewUnsupported;
PFNGLBLENDEQUATIONSEPARATEPROC glcorewBlendEquationSeparate =
    (PFNGLBLENDEQUATIONSEPARATEPROC) glcorewUnsupported;
PFNGLDRAWBUFFERSPROC glcorewDrawBuffers =
    (PFNGLDRAWBUFFERSPROC) glcorewUnsupported;
PFNGLSTENCILOPSEPARATEPROC glcorewStencilOpSeparate =
    (PFNGLSTENCILOPSEPARATEPROC) glcorewUnsupported;
PFNGLSTENCILFUNCSEPARATEPROC glcorewStencilFuncSeparate =
    (PFNGLSTENCILFUNCSEPARATEPROC) glcorewUnsupported;
PFNGLSTENCILMASKSEPARATEPROC glcorewStencilMaskSeparate =
    (PFNGLSTENCILMASKSEPARATEPROC) glcorewUnsupported;
PFNGLATTACHSHADERPROC glcorewAttachShader =
    (PFNGLATTACHSHADERPROC) glcorewUnsupported;
PFNGLBINDATTRIBLOCATIONPROC glcorewBindAttribLocation =
    (PFNGLBINDATTRIBLOCATIONPROC) glcorewUnsupported;
PFNGLCOMPILESHADERPROC glcorewCompileShader =
    (PFNGLCOMPILESHADERPROC) glcorewUnsupported;
PFNGLCREATEPROGRAMPROC glcorewCreateProgram =
    (PFNGLCREATEPROGRAMPROC) glcorewUnsupported;
PFNGLCREATESHADERPROC glcorewCreateShader =
    (PFNGLCREATESHADERPROC) glcorewUnsupported;
PFNGLDELETEPROGRAMPROC glcorewDeleteProgram =
    (PFNGLDELETEPROGRAMPROC) glcorewUnsupported;
PFNGLDELETESHADERPROC glcorewDeleteShader =
    (PFNGLDELETESHADERPROC) glcorewUnsupported;
PFNGLDETACHSHADERPROC glcorewDetachShader =
    (PFNGLDETACHSHADERPROC) glcorewUnsupported;
PFNGLDISABLEVERTEXATTRIBARRAYPROC glcorewDisableVertexAttribArray =
    (PFNGLDISABLEVERTEXATTRIBARRAYPROC) glcorewUnsupported;
PFNGLENABLEVERTEXATTRIBARRAYPROC glcorewEnableVertexAttribArray =
    (PFNGLENABLEVERTEXATTRIBARRAYPROC) glcorewUnsupported;
PFNGLGETACTIVEATTRIBPROC glcorewGetActiveAttrib =
    (PFNGLGETACTIVEATTRIBPROC) glcorewUnsupported;
PFNGLGETACTIVEUNIFORMPROC glcorewGetActiveUniform =
    (PFNGLGETACTIVEUNIFORMPROC) glcorewUnsupported;
PFNGLGETATTACHEDSHADERSPROC glcorewGetAttachedShaders =
    (PFNGLGETATTACHEDSHADERSPROC) glcorewUnsupported;
PFNGLGETATTRIBLOCATIONPROC glcorewGetAttribLocation =
    (PFNGLGETATTRIBLOCATIONPROC) glcorewUnsupported;
PFNGLGETPROGRAMIVPROC glcorewGetProgramiv =
    (PFNGLGETPROGRAMIVPROC) glcorewUnsupported;
PFNGLGETPROGRAMINFOLOGPROC glcorewGetProgramInfoLog =
    (PFNGLGETPROGRAMINFOLOGPROC) glcorewUnsupported;
PFNGLGETSHADERIVPROC glcorewGetShaderiv =
    (PFNGLGETSHADERIVPROC) glcorewUnsupported;
PFNGLGETSHADERINFOLOGPROC glcorewGetShaderInfoLog =
    (PFNGLGETSHADERINFOLOGPROC) glcorewUnsupported;
PFNGLGETSHADERSOURCEPROC glcorewGetShaderSource =
    (PFNGLGETSHADERSOURCEPROC) glcorewUnsupported;
PFNGLGETUNIFORMLOCATIONPROC glcorewGetUniformLocation =
    (PFNGLGETUNIFORMLOCATIONPROC) glcorewUnsupported;
PFNGLGETUNIFORMFVPROC glcorewGetUniformfv =
    (PFNGLGETUNIFORMFVPROC) glcorewUnsupported;
PFNGLGETUNIFORMIVPROC glcorewGetUniformiv =
    (PFNGLGETUNIFORMIVPROC) glcorewUnsupported;
PFNGLGETVERTEXATTRIBDVPROC glcorewGetVertexAttribdv =
    (PFNGLGETVERTEXATTRIBDVPROC) glcorewUnsupported;
PFNGLGETVERTEXATTRIBFVPROC glcorewGetVertexAttribfv =
    (PFNGLGETVERTEXATTRIBFVPROC) glcorewUnsupported;
PFNGLGETVERTEXATTRIBIVPROC glcorewGetVertexAttribiv =
    (PFNGLGETVERTEXATTRIBIVPROC) glcorewUnsupported;
PFNGLGETVERTEXATTRIBPOINTERVPROC glcorewGetVertexAttribPointerv =
    (PFNGLGETVERTEXATTRIBPOINTERVPROC) glcorewUnsupported;
PFNGLISPROGRAMPROC glcorewIsProgram =
    (PFNGLISPROGRAMPROC) glcorewUnsupported;
PFNGLISSHADERPROC glcorewIsShader =
    (PFNGLISSHADERPROC) glcorewUnsupported;
PFNGLLINKPROGRAMPROC glcorewLinkProgram =
    (PFNGLLINKPROGRAMPROC) glcorewUnsupported;
PFNGLSHADERSOURCEPROC glcorewShaderSource =
    (PFNGLSHADERSOURCEPROC) glcorewUnsupported;
PFNGLUSEPROGRAMPROC glcorewUseProgram =
    (PFNGLUSEPROGRAMPROC) glcorewUnsupported;
PFNGLUNIFORM1FPROC glcorewUniform1f =
    (PFNGLUNIFORM1FPROC) glcorewUnsupported;
PFNGLUNIFORM2FPROC glcorewUniform2f =
    (PFNGLUNIFORM2FPROC) glcorewUnsupported;
PFNGLUNIFORM3FPROC glcorewUniform3f =
    (PFNGLUNIFORM3FPROC) glcorewUnsupported;
PFNGLUNIFORM4FPROC glcorewUniform4f =
    (PFNGLUNIFORM4FPROC) glcorewUnsupported;
PFNGLUNIFORM1IPROC glcorewUniform1i =
    (PFNGLUNIFORM1IPROC) glcorewUnsupported;
PFNGLUNIFORM2IPROC glcorewUniform2i =
    (PFNGLUNIFORM2IPROC) glcorewUnsupported;
PFNGLUNIFORM3IPROC glcorewUniform3i =
    (PFNGLUNIFORM3IPROC) glcorewUnsupported;
PFNGLUNIFORM4IPROC glcorewUniform4i =
    (PFNGLUNIFORM4IPROC) glcorewUnsupported;
PFNGLUNIFORM1FVPROC glcorewUniform1fv =
    (PFNGLUNIFORM1FVPROC) glcorewUnsupported;
PFNGLUNIFORM2FVPROC glcorewUniform2fv =
    (PFNGLUNIFORM2FVPROC) glcorewUnsupported;
PFNGLUNIFORM3FVPROC glcorewUniform3fv =
    (PFNGLUNIFORM3FVPROC) glcorewUnsupported;
PFNGLUNIFORM4FVPROC glcorewUniform4fv =
    (PFNGLUNIFORM4FVPROC) glcorewUnsupported;
PFNGLUNIFORM1IVPROC glcorewUniform1iv =
    (PFNGLUNIFORM1IVPROC) glcorewUnsupported;
PFNGLUNIFORM2IVPROC glcorewUniform2iv =
    (PFNGLUNIFORM2IVPROC) glcorewUnsupported;
PFNGLUNIFORM3IVPROC glcorewUniform3iv =
    (PFNGLUNIFORM3IVPROC) glcorewUnsupported;
PFNGLUNIFORM4IVPROC glcorewUniform4iv =
    (PFNGLUNIFORM4IVPROC) glcorewUnsupported;
PFNGLUNIFORMMATRIX2FVPROC glcorewUniformMatrix2fv =
    (PFNGLUNIFORMMATRIX2FVPROC) glcorewUnsupported;
PFNGLUNIFORMMATRIX3FVPROC glcorewUniformMatrix3fv =
    (PFNGLUNIFORMMATRIX3FVPROC) glcorewUnsupported;
PFNGLUNIFORMMATRIX4FVPROC glcorewUniformMatrix4fv =
    (PFNGLUNIFORMMATRIX4FVPROC) glcorewUnsupported;
PFNGLVALIDATEPROGRAMPROC glcorewValidateProgram =
    (PFNGLVALIDATEPROGRAMPROC) glcorewUnsupported;
PFNGLVERTEXATTRIB1DPROC glcorewVertexAttrib1d =
    (PFNGLVERTEXATTRIB1DPROC) glcorewUnsupported;
PFNGLVERTEXATTRIB1DVPROC glcorewVertexAttrib1dv =
    (PFNGLVERTEXATTRIB1DVPROC) glcorewUnsupported;
PFNGLVERTEXATTRIB1FPROC glcorewVertexAttrib1f =
    (PFNGLVERTEXATTRIB1FPROC) glcorewUnsupported;
PFNGLVERTEXATTRIB1FVPROC glcorewVertexAttrib1fv =
    (PFNGLVERTEXATTRIB1FVPROC) glcorewUnsupported;
PFNGLVERTEXATTRIB1SPROC glcorewVertexAttrib1s =
    (PFNGLVERTEXATTRIB1SPROC) glcorewUnsupported;
PFNGLVERTEXATTRIB1SVPROC glcorewVertexAttrib1sv =
    (PFNGLVERTEXATTRIB1SVPROC) glcorewUnsupported;
PFNGLVERTEXATTRIB2DPROC glcorewVertexAttrib2d =
    (PFNGLVERTEXATTRIB2DPROC) glcorewUnsupported;
PFNGLVERTEXATTRIB2DVPROC glcorewVertexAttrib2dv =
    (PFNGLVERTEXATTRIB2DVPROC) glcorewUnsupported;
PFNGLVERTEXATTRIB2FPROC glcorewVertexAttrib2f =
    (PFNGLVERTEXATTRIB2FPROC) glcorewUnsupported;
PFNGLVERTEXATTRIB2FVPROC glcorewVertexAttrib2fv =
    (PFNGLVERTEXATTRIB2FVPROC) glcorewUnsupported;
PFNGLVERTEXATTRIB2SPROC glcorewVertexAttrib2s =
    (PFNGLVERTEXATTRIB2SPROC) glcorewUnsupported;
PFNGLVERTEXATTRIB2SVPROC glcorewVertexAttrib2sv =
    (PFNGLVERTEXATTRIB2SVPROC) glcorewUnsupported;
PFNGLVERTEXATTRIB3DPROC glcorewVertexAttrib3d =
    (PFNGLVERTEXATTRIB3DPROC) glcorewUnsupported;
PFNGLVERTEXATTRIB3DVPROC glcorewVertexAttrib3dv =
    (PFNGLVERTEXATTRIB3DVPROC) glcorewUnsupported;
PFNGLVERTEXATTRIB3FPROC glcorewVertexAttrib3f =
    (PFNGLVERTEXATTRIB3FPROC) glcorewUnsupported;
PFNGLVERTEXATTRIB3FVPROC glcorewVertexAttrib3fv =
    (PFNGLVERTEXATTRIB3FVPROC) glcorewUnsupported;
PFNGLVERTEXATTRIB3SPROC glcorewVertexAttrib3s =
    (PFNGLVERTEXATTRIB3SPROC) glcorewUnsupported;
PFNGLVERTEXATTRIB3SVPROC glcorewVertexAttrib3sv =
    (PFNGLVERTEXATTRIB3SVPROC) glcorewUnsupported;
PFNGLVERTEXATTRIB4NBVPROC glcorewVertexAttrib4Nbv =
    (PFNGLVERTEXATTRIB4NBVPROC) glcorewUnsupported;
PFNGLVERTEXATTRIB4NIVPROC glcorewVertexAttrib4Niv =
    (PFNGLVERTEXATTRIB4NIVPROC) glcorewUnsupported;
PFNGLVERTEXATTRIB4NSVPROC glcorewVertexAttrib4Nsv =
    (PFNGLVERTEXATTRIB4NSVPROC) glcorewUnsupported;
PFNGLVERTEXATTRIB4NUBPROC glcorewVertexAttrib4Nub =
    (PFNGLVERTEXATTRIB4NUBPROC) glcorewUnsupported;
PFNGLVERTEXATTRIB4NUBVPROC glcorewVertexAttrib4Nubv =
    (PFNGLVERTEXATTRIB4NUBVPROC) glcorewUnsupported;
PFNGLVERTEXATTRIB4NUIVPROC glcorewVertexAttrib4Nuiv =
    (PFNGLVERTEXATTRIB4NUIVPROC) glcorewUnsupported;
PFNGLVERTEXATTRIB4NUSVPROC glcorewVertexAttrib4Nusv =
    (PFNGLVERTEXATTRIB4NUSVPROC) glcorewUnsupported;
PFNGLVERTEXATTRIB4BVPROC glcorewVertexAttrib4bv =
    (PFNGLVERTEXATTRIB4BVPROC) glcorewUnsupported;
PFNGLVERTEXATTRIB4DPROC glcorewVertexAttrib4d =
    (PFNGLVERTEXATTRIB4DPROC) glcorewUnsupported;
PFNGLVERTEXATTRIB4DVPROC glcorewVertexAttrib4dv =
    (PFNGLVERTEXATTRIB4DVPROC) glcorewUnsupported;
PFNGLVERTEXATTRIB4FPROC glcorewVertexAttrib4f =
    (PFNGLVERTEXATTRIB4FPROC) glcorewUnsupported;
PFNGLVERTEXATTRIB4FVPROC glcorewVertexAttrib4fv =
    (PFNGLVERTEXATTRIB4FVPROC) glcorewUnsupported;
PFNGLVERTEXATTRIB4IVPROC glcorewVertexAttrib4iv =
    (PFNGLVERTEXATTRIB4IVPROC) glcorewUnsupported;
PFNGLVERTEXATTRIB4SPROC glcorewVertexAttrib4s =
    (PFNGLVERTEXATTRIB4SPROC) glcorewUnsupported;
PFNGLVERTEXATTRIB4SVPROC glcorewVertexAttrib4sv =
    (PFNGLVERTEXATTRIB4SVPROC) glcorewUnsupported;
PFNGLVERTEXATTRIB4UBVPROC glcorewVertexAttrib4ubv =
    (PFNGLVERTEXATTRIB4UBVPROC) glcorewUnsupported;
PFNGLVERTEXATTRIB4UIVPROC glcorewVertexAttrib4uiv =
    (PFNGLVERTEXATTRIB4UIVPROC) glcorewUnsupported;
PFNGLVERTEXATTRIB4USVPROC glcorewVertexAttrib4usv =
    (PFNGLVERTEXATTRIB4USVPROC) glcorewUnsupported;
PFNGLVERTEXATTRIBPOINTERPROC glcorewVertexAttribPointer =
    (PFNGLVERTEXATTRIBPOINTERPROC) glcorewUnsupported;
PFNGLUNIFORMMATRIX2X3FVPROC glcorewUniformMatrix2x3fv =
    (PFNGLUNIFORMMATRIX2X3FVPROC) glcorewUnsupported;
PFNGLUNIFORMMATRIX3X2FVPROC glcorewUniformMatrix3x2fv =
    (PFNGLUNIFORMMATRIX3X2FVPROC) glcorewUnsupported;
PFNGLUNIFORMMATRIX2X4FVPROC glcorewUniformMatrix2x4fv =
    (PFNGLUNIFORMMATRIX2X4FVPROC) glcorewUnsupported;
PFNGLUNIFORMMATRIX4X2FVPROC glcorewUniformMatrix4x2fv =
    (PFNGLUNIFORMMATRIX4X2FVPROC) glcorewUnsupported;
PFNGLUNIFORMMATRIX3X4FVPROC glcorewUniformMatrix3x4fv =
    (PFNGLUNIFORMMATRIX3X4FVPROC) glcorewUnsupported;
PFNGLUNIFORMMATRIX4X3FVPROC glcorewUniformMatrix4x3fv =
    (PFNGLUNIFORMMATRIX4X3FVPROC) glcorewUnsupported;
PFNGLCOLORMASKIPROC glcorewColorMaski =
    (PFNGLCOLORMASKIPROC) glcorewUnsupported;
PFNGLGETBOOLEANI_VPROC glcorewGetBooleani_v =
    (PFNGLGETBOOLEANI_VPROC) glcorewUnsupported;
PFNGLGETINTEGERI_VPROC glcorewGetIntegeri_v =
    (PFNGLGETINTEGERI_VPROC) glcorewUnsupported;
PFNGLENABLEIPROC glcorewEnablei =
    (PFNGLENABLEIPROC) glcorewUnsupported;
PFNGLDISABLEIPROC glcorewDisablei =
    (PFNGLDISABLEIPROC) glcorewUnsupported;
PFNGLISENABLEDIPROC glcorewIsEnabledi =
    (PFNGLISENABLEDIPROC) glcorewUnsupported;
PFNGLBEGINTRANSFORMFEEDBACKPROC glcorewBeginTransformFeedback =
    (PFNGLBEGINTRANSFORMFEEDBACKPROC) glcorewUnsupported;
PFNGLENDTRANSFORMFEEDBACKPROC glcorewEndTransformFeedback =
    (PFNGLENDTRANSFORMFEEDBACKPROC) glcorewUnsupported;
PFNGLBINDBUFFERRANGEPROC glcorewBindBufferRange =
    (PFNGLBINDBUFFERRANGEPROC) glcorewUnsupported;
PFNGLBINDBUFFERBASEPROC glcorewBindBufferBase =
    (PFNGLBINDBUFFERBASEPROC) glcorewUnsupported;
PFNGLTRANSFORMFEEDBACKVARYINGSPROC glcorewTransformFeedbackVaryings =
    (PFNGLTRANSFORMFEEDBACKVARYINGSPROC) glcorewUnsupported;
PFNGLGETTRANSFORMFEEDBACKVARYINGPROC glcorewGetTransformFeedbackVarying =
    (PFNGLGETTRANSFORMFEEDBACKVARYINGPROC) glcorewUnsupported;
PFNGLCLAMPCOLORPROC glcorewClampColor =
    (PFNGLCLAMPCOLORPROC) glcorewUnsupported;
PFNGLBEGINCONDITIONALRENDERPROC glcorewBeginConditionalRender =
    (PFNGLBEGINCONDITIONALRENDERPROC) glcorewUnsupported;
PFNGLENDCONDITIONALRENDERPROC glcorewEndConditionalRender =
    (PFNGLENDCONDITIONALRENDERPROC) glcorewUnsupported;
PFNGLVERTEXATTRIBIPOINTERPROC glcorewVertexAttribIPointer =
    (PFNGLVERTEXATTRIBIPOINTERPROC) glcorewUnsupported;
PFNGLGETVERTEXATTRIBIIVPROC glcorewGetVertexAttribIiv =
    (PFNGLGETVERTEXATTRIBIIVPROC) glcorewUnsupported;
PFNGLGETVERTEXATTRIBIUIVPROC glcorewGetVertexAttribIuiv =
    (PFNGLGETVERTEXATTRIBIUIVPROC) glcorewUnsupported;
PFNGLVERTEXATTRIBI1IPROC glcorewVertexAttribI1i =
    (PFNGLVERTEXATTRIBI1IPROC) glcorewUnsupported;
PFNGLVERTEXATTRIBI2IPROC glcorewVertexAttribI2i =
    (PFNGLVERTEXATTRIBI2IPROC) glcorewUnsupported;
PFNGLVERTEXATTRIBI3IPROC glcorewVertexAttribI3i =
    (PFNGLVERTEXATTRIBI3IPROC) glcorewUnsupported;
PFNGLVERTEXATTRIBI4IPROC glcorewVertexAttribI4i =
    (PFNGLVERTEXATTRIBI4IPROC) glcorewUnsupported;
PFNGLVERTEXATTRIBI1UIPROC glcorewVertexAttribI1ui =
    (PFNGLVERTEXATTRIBI1UIPROC) glcorewUnsupported;
PFNGLVERTEXATTRIBI2UIPROC glcorewVertexAttribI2ui =
    (PFNGLVERTEXATTRIBI2UIPROC) glcorewUnsupported;
PFNGLVERTEXATTRIBI3UIPROC glcorewVertexAttribI3ui =
    (PFNGLVERTEXATTRIBI3UIPROC) glcorewUnsupported;
PFNGLVERTEXATTRIBI4UIPROC glcorewVertexAttribI4ui =
    (PFNGLVERTEXATTRIBI4UIPROC) glcorewUnsupported;
PFNGLVERTEXATTRIBI1IVPROC glcorewVertexAttribI1iv =
    (PFNGLVERTEXATTRIBI1IVPROC) glcorewUnsupported;
PFNGLVERTEXATTRIBI2IVPROC glcorewVertexAttribI2iv =
    (PFNGLVERTEXATTRIBI2IVPROC) glcorewUnsupported;
PFNGLVERTEXATTRIBI3IVPROC glcorewVertexAttribI3iv =
    (PFNGLVERTEXATTRIBI3IVPROC) glcorewUnsupported;
PFNGLVERTEXATTRIBI4IVPROC glcorewVertexAttribI4iv =
    (PFNGLVERTEXATTRIBI4IVPROC) glcorewUnsupported;
PFNGLVERTEXATTRIBI1UIVPROC glcorewVertexAttribI1uiv =
    (PFNGLVERTEXATTRIBI1UIVPROC) glcorewUnsupported;
PFNGLVERTEXATTRIBI2UIVPROC glcorewVertexAttribI2uiv =
    (PFNGLVERTEXATTRIBI2UIVPROC) glcorewUnsupported;
PFNGLVERTEXATTRIBI3UIVPROC glcorewVertexAttribI3uiv =
    (PFNGLVERTEXATTRIBI3UIVPROC) glcorewUnsupported;
PFNGLVERTEXATTRIBI4UIVPROC glcorewVertexAttribI4uiv =
    (PFNGLVERTEXATTRIBI4UIVPROC) glcorewUnsupported;
PFNGLVERTEXATTRIBI4BVPROC glcorewVertexAttribI4bv =
    (PFNGLVERTEXATTRIBI4BVPROC) glcorewUnsupported;
PFNGLVERTEXATTRIBI4SVPROC glcorewVertexAttribI4sv =
    (PFNGLVERTEXATTRIBI4SVPROC) glcorewUnsupported;
PFNGLVERTEXATTRIBI4UBVPROC glcorewVertexAttribI4ubv =
    (PFNGLVERTEXATTRIBI4UBVPROC) glcorewUnsupported;
PFNGLVERTEXATTRIBI4USVPROC glcorewVertexAttribI4usv =
    (PFNGLVERTEXATTRIBI4USVPROC) glcorewUnsupported;
PFNGLGETUNIFORMUIVPROC glcorewGetUniformuiv =
    (PFNGLGETUNIFORMUIVPROC) glcorewUnsupported;
PFNGLBINDFRAGDATALOCATIONPROC glcorewBindFragDataLocation =
    (PFNGLBINDFRAGDATALOCATIONPROC) glcorewUnsupported;
PFNGLGETFRAGDATALOCATIONPROC glcorewGetFragDataLocation =
    (PFNGLGETFRAGDATALOCATIONPROC) glcorewUnsupported;
PFNGLUNIFORM1UIPROC glcorewUniform1ui =
    (PFNGLUNIFORM1UIPROC) glcorewUnsupported;
PFNGLUNIFORM2UIPROC glcorewUniform2ui =
    (PFNGLUNIFORM2UIPROC) glcorewUnsupported;
PFNGLUNIFORM3UIPROC glcorewUniform3ui =
    (PFNGLUNIFORM3UIPROC) glcorewUnsupported;
PFNGLUNIFORM4UIPROC glcorewUniform4ui =
    (PFNGLUNIFORM4UIPROC) glcorewUnsupported;
PFNGLUNIFORM1UIVPROC glcorewUniform1uiv =
    (PFNGLUNIFORM1UIVPROC) glcorewUnsupported;
PFNGLUNIFORM2UIVPROC glcorewUniform2uiv =
    (PFNGLUNIFORM2UIVPROC) glcorewUnsupported;
PFNGLUNIFORM3UIVPROC glcorewUniform3uiv =
    (PFNGLUNIFORM3UIVPROC) glcorewUnsupported;
PFNGLUNIFORM4UIVPROC glcorewUniform4uiv =
    (PFNGLUNIFORM4UIVPROC) glcorewUnsupported;
PFNGLTEXPARAMETERIIVPROC glcorewTexParameterIiv =
    (PFNGLTEXPARAMETERIIVPROC) glcorewUnsupported;
PFNGLTEXPARAMETERIUIVPROC glcorewTexParameterIuiv =
    (PFNGLTEXPARAMETERIUIVPROC) glcorewUnsupported;
PFNGLGETTEXPARAMETERIIVPROC glcorewGetTexParameterIiv =
    (PFNGLGETTEXPARAMETERIIVPROC) glcorewUnsupported;
PFNGLGETTEXPARAMETERIUIVPROC glcorewGetTexParameterIuiv =
    (PFNGLGETTEXPARAMETERIUIVPROC) glcorewUnsupported;
PFNGLCLEARBUFFERIVPROC glcorewClearBufferiv =
    (PFNGLCLEARBUFFERIVPROC) glcorewUnsupported;
PFNGLCLEARBUFFERUIVPROC glcorewClearBufferuiv =
    (PFNGLCLEARBUFFERUIVPROC) glcorewUnsupported;
PFNGLCLEARBUFFERFVPROC glcorewClearBufferfv =
    (PFNGLCLEARBUFFERFVPROC) glcorewUnsupported;
PFNGLCLEARBUFFERFIPROC glcorewClearBufferfi =
    (PFNGLCLEARBUFFERFIPROC) glcorewUnsupported;
PFNGLGETSTRINGIPROC glcorewGetStringi =
    (PFNGLGETSTRINGIPROC) glcorewUnsupported;
PFNGLISRENDERBUFFERPROC glcorewIsRenderbuffer =
    (PFNGLISRENDERBUFFERPROC) glcorewUnsupported;
PFNGLBINDRENDERBUFFERPROC glcorewBindRenderbuffer =
    (PFNGLBINDRENDERBUFFERPROC) glcorewUnsupported;
PFNGLDELETERENDERBUFFERSPROC glcorewDeleteRenderbuffers =
    (PFNGLDELETERENDERBUFFERSPROC) glcorewUnsupported;
PFNGLGENRENDERBUFFERSPROC glcorewGenRenderbuffers =
    (PFNGLGENRENDERBUFFERSPROC) glcorewUnsupported;
PFNGLRENDERBUFFERSTORAGEPROC glcorewRenderbufferStorage =
    (PFNGLRENDERBUFFERSTORAGEPROC) glcorewUnsupported;
PFNGLGETRENDERBUFFERPARAMETERIVPROC glcorewGetRenderbufferParameteriv =
    (PFNGLGETRENDERBUFFERPARAMETERIVPROC) glcorewUnsupported;
PFNGLISFRAMEBUFFERPROC glcorewIsFramebuffer =
    (PFNGLISFRAMEBUFFERPROC) glcorewUnsupported;
PFNGLBINDFRAMEBUFFERPROC glcorewBindFramebuffer =
    (PFNGLBINDFRAMEBUFFERPROC) glcorewUnsupported;
PFNGLDELETEFRAMEBUFFERSPROC glcorewDeleteFramebuffers =
    (PFNGLDELETEFRAMEBUFFERSPROC) glcorewUnsupported;
PFNGLGENFRAMEBUFFERSPROC glcorewGenFramebuffers =
    (PFNGLGENFRAMEBUFFERSPROC) glcorewUnsupported;
PFNGLCHECKFRAMEBUFFERSTATUSPROC glcorewCheckFramebufferStatus =
    (PFNGLCHECKFRAMEBUFFERSTATUSPROC) glcorewUnsupported;
PFNGLFRAMEBUFFERTEXTURE1DPROC glcorewFramebufferTexture1D =
    (PFNGLFRAMEBUFFERTEXTURE1DPROC) glcorewUnsupported;
PFNGLFRAMEBUFFERTEXTURE2DPROC glcorewFramebufferTexture2D =
    (PFNGLFRAMEBUFFERTEXTURE2DPROC) glcorewUnsupported;
PFNGLFRAMEBUFFERTEXTURE3DPROC glcorewFramebufferTexture3D =
    (PFNGLFRAMEBUFFERTEXTURE3DPROC) glcorewUnsupported;
PFNGLFRAMEBUFFERRENDERBUFFERPROC glcorewFramebufferRenderbuffer =
    (PFNGLFRAMEBUFFERRENDERBUFFERPROC) glcorewUnsupported;
PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC glcorewGetFramebufferAttachmentParameteriv =
    (PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC) glcorewUnsupported;
PFNGLGENERATEMIPMAPPROC glcorewGenerateMipmap =
    (PFNGLGENERATEMIPMAPPROC) glcorewUnsupported;
PFNGLBLITFRAMEBUFFERPROC glcorewBlitFramebuffer =
    (PFNGLBLITFRAMEBUFFERPROC) glcorewUnsupported;
PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC glcorewRenderbufferStorageMultisample =
    (PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC) glcorewUnsupported;
PFNGLFRAMEBUFFERTEXTURELAYERPROC glcorewFramebufferTextureLayer =
    (PFNGLFRAMEBUFFERTEXTURELAYERPROC) glcorewUnsupported;
PFNGLMAPBUFFERRANGEPROC glcorewMapBufferRange =
    (PFNGLMAPBUFFERRANGEPROC) glcorewUnsupported;
PFNGLFLUSHMAPPEDBUFFERRANGEPROC glcorewFlushMappedBufferRange =
    (PFNGLFLUSHMAPPEDBUFFERRANGEPROC) glcorewUnsupported;
PFNGLBINDVERTEXARRAYPROC glcorewBindVertexArray =
    (PFNGLBINDVERTEXARRAYPROC) glcorewUnsupported;
PFNGLDELETEVERTEXARRAYSPROC glcorewDeleteVertexArrays =
    (PFNGLDELETEVERTEXARRAYSPROC) glcorewUnsupported;
PFNGLGENVERTEXARRAYSPROC glcorewGenVertexArrays =
    (PFNGLGENVERTEXARRAYSPROC) glcorewUnsupported;
PFNGLISVERTEXARRAYPROC glcorewIsVertexArray =
    (PFNGLISVERTEXARRAYPROC) glcorewUnsupported;
PFNGLDRAWARRAYSINSTANCEDPROC glcorewDrawArraysInstanced =
    (PFNGLDRAWARRAYSINSTANCEDPROC) glcorewUnsupported;
PFNGLDRAWELEMENTSINSTANCEDPROC glcorewDrawElementsInstanced =
    (PFNGLDRAWELEMENTSINSTANCEDPROC) glcorewUnsupported;
PFNGLTEXBUFFERPROC glcorewTexBuffer =
    (PFNGLTEXBUFFERPROC) glcorewUnsupported;
PFNGLPRIMITIVERESTARTINDEXPROC glcorewPrimitiveRestartIndex =
    (PFNGLPRIMITIVERESTARTINDEXPROC) glcorewUnsupported;
PFNGLCOPYBUFFERSUBDATAPROC glcorewCopyBufferSubData =
    (PFNGLCOPYBUFFERSUBDATAPROC) glcorewUnsupported;
PFNGLGETUNIFORMINDICESPROC glcorewGetUniformIndices =
    (PFNGLGETUNIFORMINDICESPROC) glcorewUnsupported;
PFNGLGETACTIVEUNIFORMSIVPROC glcorewGetActiveUniformsiv =
    (PFNGLGETACTIVEUNIFORMSIVPROC) glcorewUnsupported;
PFNGLGETACTIVEUNIFORMNAMEPROC glcorewGetActiveUniformName =
    (PFNGLGETACTIVEUNIFORMNAMEPROC) glcorewUnsupported;
PFNGLGETUNIFORMBLOCKINDEXPROC glcorewGetUniformBlockIndex =
    (PFNGLGETUNIFORMBLOCKINDEXPROC) glcorewUnsupported;
PFNGLGETACTIVEUNIFORMBLOCKIVPROC glcorewGetActiveUniformBlockiv =
    (PFNGLGETACTIVEUNIFORMBLOCKIVPROC) glcorewUnsupported;
PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC glcorewGetActiveUniformBlockName =
    (PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC) glcorewUnsupported;
PFNGLUNIFORMBLOCKBINDINGPROC glcorewUniformBlockBinding =
    (PFNGLUNIFORMBLOCKBINDINGPROC) glcorewUnsupported;
PFNGLDRAWELEMENTSBASEVERTEXPROC glcorewDrawElementsBaseVertex =
    (PFNGLDRAWELEMENTSBASEVERTEXPROC) glcorewUnsupported;
PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC glcorewDrawRangeElementsBaseVertex =
    (PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC) glcorewUnsupported;
PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC glcorewDrawElementsInstancedBaseVertex =
    (PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC) glcorewUnsupported;
PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC glcorewMultiDrawElementsBaseVertex =
    (PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC) glcorewUnsupported;
PFNGLPROVOKINGVERTEXPROC glcorewProvokingVertex =
    (PFNGLPROVOKINGVERTEXPROC) glcorewUnsupported;
PFNGLFENCESYNCPROC glcorewFenceSync =
    (PFNGLFENCESYNCPROC) glcorewUnsupported;
PFNGLISSYNCPROC glcorewIsSync =
    (PFNGLISSYNCPROC) glcorewUnsupported;
PFNGLDELETESYNCPROC glcorewDeleteSync =
    (PFNGLDELETESYNCPROC) glcorewUnsupported;
PFNGLCLIENTWAITSYNCPROC glcorewClientWaitSync =
    (PFNGLCLIENTWAITSYNCPROC) glcorewUnsupported;
PFNGLWAITSYNCPROC glcorewWaitSync =
    (PFNGLWAITSYNCPROC) glcorewUnsupported;
PFNGLGETINTEGER64VPROC glcorewGetInteger64v =
    (PFNGLGETINTEGER64VPROC) glcorewUnsupported;
PFNGLGETSYNCIVPROC glcorewGetSynciv =
    (PFNGLGETSYNCIVPROC) glcorewUnsupported;
PFNGLGETINTEGER64I_VPROC glcorewGetInteger64i_v =
    (PFNGLGETINTEGER64I_VPROC) glcorewUnsupported;
PFNGLGETBUFFERPARAMETERI64VPROC glcorewGetBufferParameteri64v =
    (PFNGLGETBUFFERPARAMETERI64VPROC) glcorewUnsupported;
PFNGLFRAMEBUFFERTEXTUREPROC glcorewFramebufferTexture =
    (PFNGLFRAMEBUFFERTEXTUREPROC) glcorewUnsupported;
PFNGLTEXIMAGE2DMULTISAMPLEPROC glcorewTexImage2DMultisample =
    (PFNGLTEXIMAGE2DMULTISAMPLEPROC) glcorewUnsupported;
PFNGLTEXIMAGE3DMULTISAMPLEPROC glcorewTexImage3DMultisample =
    (PFNGLTEXIMAGE3DMULTISAMPLEPROC) glcorewUnsupported;
PFNGLGETMULTISAMPLEFVPROC glcorewGetMultisamplefv =
    (PFNGLGETMULTISAMPLEFVPROC) glcorewUnsupported;
PFNGLSAMPLEMASKIPROC glcorewSampleMaski =
    (PFNGLSAMPLEMASKIPROC) glcorewUnsupported;
PFNGLBINDFRAGDATALOCATIONINDEXEDPROC glcorewBindFragDataLocationIndexed =
    (PFNGLBINDFRAGDATALOCATIONINDEXEDPROC) glcorewUnsupported;
PFNGLGETFRAGDATAINDEXPROC glcorewGetFragDataIndex =
    (PFNGLGETFRAGDATAINDEXPROC) glcorewUnsupported;
PFNGLGENSAMPLERSPROC glcorewGenSamplers =
    (PFNGLGENSAMPLERSPROC) glcorewUnsupported;
PFNGLDELETESAMPLERSPROC glcorewDeleteSamplers =
    (PFNGLDELETESAMPLERSPROC) glcorewUnsupported;
PFNGLISSAMPLERPROC glcorewIsSampler =
    (PFNGLISSAMPLERPROC) glcorewUnsupported;
PFNGLBINDSAMPLERPROC glcorewBindSampler =
    (PFNGLBINDSAMPLERPROC) glcorewUnsupported;
PFNGLSAMPLERPARAMETERIPROC glcorewSamplerParameteri =
    (PFNGLSAMPLERPARAMETERIPROC) glcorewUnsupported;
PFNGLSAMPLERPARAMETERIVPROC glcorewSamplerParameteriv =
    (PFNGLSAMPLERPARAMETERIVPROC) glcorewUnsupported;
PFNGLSAMPLERPARAMETERFPROC glcorewSamplerParameterf =
    (PFNGLSAMPLERPARAMETERFPROC) glcorewUnsupported;
PFNGLSAMPLERPARAMETERFVPROC glcorewSamplerParameterfv =
    (PFNGLSAMPLERPARAMETERFVPROC) glcorewUnsupported;
PFNGLSAMPLERPARAMETERIIVPROC glcorewSamplerParameterIiv =
    (PFNGLSAMPLERPARAMETERIIVPROC) glcorewUnsupported;
PFNGLSAMPLERPARAMETERIUIVPROC glcorewSamplerParameterIuiv =
    (PFNGLSAMPLERPARAMETERIUIVPROC) glcorewUnsupported;
PFNGLGETSAMPLERPARAMETERIVPROC glcorewGetSamplerParameteriv =
    (PFNGLGETSAMPLERPARAMETERIVPROC) glcorewUnsupported;
PFNGLGETSAMPLERPARAMETERIIVPROC glcorewGetSamplerParameterIiv =
    (PFNGLGETSAMPLERPARAMETERIIVPROC) glcorewUnsupported;
PFNGLGETSAMPLERPARAMETERFVPROC glcorewGetSamplerParameterfv =
    (PFNGLGETSAMPLERPARAMETERFVPROC) glcorewUnsupported;
PFNGLGETSAMPLERPARAMETERIUIVPROC glcorewGetSamplerParameterIuiv =
    (PFNGLGETSAMPLERPARAMETERIUIVPROC) glcorewUnsupported;
PFNGLQUERYCOUNTERPROC glcorewQueryCounter =
    (PFNGLQUERYCOUNTERPROC) glcorewUnsupported;
PFNGLGETQUERYOBJECTI64VPROC glcorewGetQueryObjecti64v =
    (PFNGLGETQUERYOBJECTI64VPROC) glcorewUnsupported;
PFNGLGETQUERYOBJECTUI64VPROC glcorewGetQueryObjectui64v =
    (PFNGLGETQUERYOBJECTUI64VPROC) glcorewUnsupported;
PFNGLVERTEXATTRIBDIVISORPROC glcorewVertexAttribDivisor =
    (PFNGLVERTEXATTRIBDIVISORPROC) glcorewUnsupported;
PFNGLVERTEXATTRIBP1UIPROC glcorewVertexAttribP1ui =
    (PFNGLVERTEXATTRIBP1UIPROC) glcorewUnsupported;
PFNGLVERTEXATTRIBP1UIVPROC glcorewVertexAttribP1uiv =
    (PFNGLVERTEXATTRIBP1UIVPROC) glcorewUnsupported;
PFNGLVERTEXATTRIBP2UIPROC glcorewVertexAttribP2ui =
    (PFNGLVERTEXATTRIBP2UIPROC) glcorewUnsupported;
PFNGLVERTEXATTRIBP2UIVPROC glcorewVertexAttribP2uiv =
    (PFNGLVERTEXATTRIBP2UIVPROC) glcorewUnsupported;
PFNGLVERTEXATTRIBP3UIPROC glcorewVertexAttribP3ui =
    (PFNGLVERTEXATTRIBP3UIPROC) glcorewUnsupported;
PFNGLVERTEXATTRIBP3UIVPROC glcorewVertexAttribP3uiv =
    (PFNGLVERTEXATTRIBP3UIVPROC) glcorewUnsupported;
PFNGLVERTEXATTRIBP4UIPROC glcorewVertexAttribP4ui =
    (PFNGLVERTEXATTRIBP4UIPROC) glcorewUnsupported;
PFNGLVERTEXATTRIBP4UIVPROC glcorewVertexAttribP4uiv =
    (PFNGLVERTEXATTRIBP4UIVPROC) glcorewUnsupported;
PFNGLMINSAMPLESHADINGPROC glcorewMinSampleShading =
    (PFNGLMINSAMPLESHADINGPROC) glcorewUnsupported;
PFNGLBLENDEQUATIONIPROC glcorewBlendEquationi =
    (PFNGLBLENDEQUATIONIPROC) glcorewUnsupported;
PFNGLBLENDEQUATIONSEPARATEIPROC glcorewBlendEquationSeparatei =
    (PFNGLBLENDEQUATIONSEPARATEIPROC) glcorewUnsupported;
PFNGLBLENDFUNCIPROC glcorewBlendFunci =
    (PFNGLBLENDFUNCIPROC) glcorewUnsupported;
PFNGLBLENDFUNCSEPARATEIPROC glcorewBlendFuncSeparatei =
    (PFNGLBLENDFUNCSEPARATEIPROC) glcorewUnsupported;
PFNGLDRAWARRAYSINDIRECTPROC glcorewDrawArraysIndirect =
    (PFNGLDRAWARRAYSINDIRECTPROC) glcorewUnsupported;
PFNGLDRAWELEMENTSINDIRECTPROC glcorewDrawElementsIndirect =
    (PFNGLDRAWELEMENTSINDIRECTPROC) glcorewUnsupported;
PFNGLUNIFORM1DPROC glcorewUniform1d =
    (PFNGLUNIFORM1DPROC) glcorewUnsupported;
PFNGLUNIFORM2DPROC glcorewUniform2d =
    (PFNGLUNIFORM2DPROC) glcorewUnsupported;
PFNGLUNIFORM3DPROC glcorewUniform3d =
    (PFNGLUNIFORM3DPROC) glcorewUnsupported;
PFNGLUNIFORM4DPROC glcorewUniform4d =
    (PFNGLUNIFORM4DPROC) glcorewUnsupported;
PFNGLUNIFORM1DVPROC glcorewUniform1dv =
    (PFNGLUNIFORM1DVPROC) glcorewUnsupported;
PFNGLUNIFORM2DVPROC glcorewUniform2dv =
    (PFNGLUNIFORM2DVPROC) glcorewUnsupported;
PFNGLUNIFORM3DVPROC glcorewUniform3dv =
    (PFNGLUNIFORM3DVPROC) glcorewUnsupported;
PFNGLUNIFORM4DVPROC glcorewUniform4dv =
    (PFNGLUNIFORM4DVPROC) glcorewUnsupported;
PFNGLUNIFORMMATRIX2DVPROC glcorewUniformMatrix2dv =
    (PFNGLUNIFORMMATRIX2DVPROC) glcorewUnsupported;
PFNGLUNIFORMMATRIX3DVPROC glcorewUniformMatrix3dv =
    (PFNGLUNIFORMMATRIX3DVPROC) glcorewUnsupported;
PFNGLUNIFORMMATRIX4DVPROC glcorewUniformMatrix4dv =
    (PFNGLUNIFORMMATRIX4DVPROC) glcorewUnsupported;
PFNGLUNIFORMMATRIX2X3DVPROC glcorewUniformMatrix2x3dv =
    (PFNGLUNIFORMMATRIX2X3DVPROC) glcorewUnsupported;
PFNGLUNIFORMMATRIX2X4DVPROC glcorewUniformMatrix2x4dv =
    (PFNGLUNIFORMMATRIX2X4DVPROC) glcorewUnsupported;
PFNGLUNIFORMMATRIX3X2DVPROC glcorewUniformMatrix3x2dv =
    (PFNGLUNIFORMMATRIX3X2DVPROC) glcorewUnsupported;
PFNGLUNIFORMMATRIX3X4DVPROC glcorewUniformMatrix3x4dv =
    (PFNGLUNIFORMMATRIX3X4DVPROC) glcorewUnsupported;
PFNGLUNIFORMMATRIX4X2DVPROC glcorewUniformMatrix4x2dv =
    (PFNGLUNIFORMMATRIX4X2DVPROC) glcorewUnsupported;
PFNGLUNIFORMMATRIX4X3DVPROC glcorewUniformMatrix4x3dv =
    (PFNGLUNIFORMMATRIX4X3DVPROC) glcorewUnsupported;
PFNGLGETUNIFORMDVPROC glcorewGetUniformdv =
    (PFNGLGETUNIFORMDVPROC) glcorewUnsupported;
PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC glcorewGetSubroutineUniformLocation =
    (PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC) glcorewUnsupported;
PFNGLGETSUBROUTINEINDEXPROC glcorewGetSubroutineIndex =
    (PFNGLGETSUBROUTINEINDEXPROC) glcorewUnsupported;
PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC glcorewGetActiveSubroutineUniformiv =
    (PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC) glcorewUnsupported;
PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC glcorewGetActiveSubroutineUniformName =
    (PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC) glcorewUnsupported;
PFNGLGETACTIVESUBROUTINENAMEPROC glcorewGetActiveSubroutineName =
    (PFNGLGETACTIVESUBROUTINENAMEPROC) glcorewUnsupported;
PFNGLUNIFORMSUBROUTINESUIVPROC glcorewUniformSubroutinesuiv =
    (PFNGLUNIFORMSUBROUTINESUIVPROC) glcorewUnsupported;
PFNGLGETUNIFORMSUBROUTINEUIVPROC glcorewGetUniformSubroutineuiv =
    (PFNGLGETUNIFORMSUBROUTINEUIVPROC) glcorewUnsupported;
PFNGLGETPROGRAMSTAGEIVPROC glcorewGetProgramStageiv =
    (PFNGLGETPROGRAMSTAGEIVPROC) glcorewUnsupported;
PFNGLPATCHPARAMETERIPROC glcorewPatchParameteri =
    (PFNGLPATCHPARAMETERIPROC) glcorewUnsupported;
PFNGLPATCHPARAMETERFVPROC glcorewPatchParameterfv =
    (PFNGLPATCHPARAMETERFVPROC) glcorewUnsupported;
PFNGLBINDTRANSFORMFEEDBACKPROC glcorewBindTransformFeedback =
    (PFNGLBINDTRANSFORMFEEDBACKPROC) glcorewUnsupported;
PFNGLDELETETRANSFORMFEEDBACKSPROC glcorewDeleteTransformFeedbacks =
    (PFNGLDELETETRANSFORMFEEDBACKSPROC) glcorewUnsupported;
PFNGLGENTRANSFORMFEEDBACKSPROC glcorewGenTransformFeedbacks =
    (PFNGLGENTRANSFORMFEEDBACKSPROC) glcorewUnsupported;
PFNGLISTRANSFORMFEEDBACKPROC glcorewIsTransformFeedback =
    (PFNGLISTRANSFORMFEEDBACKPROC) glcorewUnsupported;
PFNGLPAUSETRANSFORMFEEDBACKPROC glcorewPauseTransformFeedback =
    (PFNGLPAUSETRANSFORMFEEDBACKPROC) glcorewUnsupported;
PFNGLRESUMETRANSFORMFEEDBACKPROC glcorewResumeTransformFeedback =
    (PFNGLRESUMETRANSFORMFEEDBACKPROC) glcorewUnsupported;
PFNGLDRAWTRANSFORMFEEDBACKPROC glcorewDrawTransformFeedback =
    (PFNGLDRAWTRANSFORMFEEDBACKPROC) glcorewUnsupported;
PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC glcorewDrawTransformFeedbackStream =
    (PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC) glcorewUnsupported;
PFNGLBEGINQUERYINDEXEDPROC glcorewBeginQueryIndexed =
    (PFNGLBEGINQUERYINDEXEDPROC) glcorewUnsupported;
PFNGLENDQUERYINDEXEDPROC glcorewEndQueryIndexed =
    (PFNGLENDQUERYINDEXEDPROC) glcorewUnsupported;
PFNGLGETQUERYINDEXEDIVPROC glcorewGetQueryIndexediv =
    (PFNGLGETQUERYINDEXEDIVPROC) glcorewUnsupported;
PFNGLRELEASESHADERCOMPILERPROC glcorewReleaseShaderCompiler =
    (PFNGLRELEASESHADERCOMPILERPROC) glcorewUnsupported;
PFNGLSHADERBINARYPROC glcorewShaderBinary =
    (PFNGLSHADERBINARYPROC) glcorewUnsupported;
PFNGLGETSHADERPRECISIONFORMATPROC glcorewGetShaderPrecisionFormat =
    (PFNGLGETSHADERPRECISIONFORMATPROC) glcorewUnsupported;
PFNGLDEPTHRANGEFPROC glcorewDepthRangef =
    (PFNGLDEPTHRANGEFPROC) glcorewUnsupported;
PFNGLCLEARDEPTHFPROC glcorewClearDepthf =
    (PFNGLCLEARDEPTHFPROC) glcorewUnsupported;
PFNGLGETPROGRAMBINARYPROC glcorewGetProgramBinary =
    (PFNGLGETPROGRAMBINARYPROC) glcorewUnsupported;
PFNGLPROGRAMBINARYPROC glcorewProgramBinary =
    (PFNGLPROGRAMBINARYPROC) glcorewUnsupported;
PFNGLPROGRAMPARAMETERIPROC glcorewProgramParameteri =
    (PFNGLPROGRAMPARAMETERIPROC) glcorewUnsupported;
PFNGLUSEPROGRAMSTAGESPROC glcorewUseProgramStages =
    (PFNGLUSEPROGRAMSTAGESPROC) glcorewUnsupported;
PFNGLACTIVESHADERPROGRAMPROC glcorewActiveShaderProgram =
    (PFNGLACTIVESHADERPROGRAMPROC) glcorewUnsupported;
PFNGLCREATESHADERPROGRAMVPROC glcorewCreateShaderProgramv =
    (PFNGLCREATESHADERPROGRAMVPROC) glcorewUnsupported;
PFNGLBINDPROGRAMPIPELINEPROC glcorewBindProgramPipeline =
    (PFNGLBINDPROGRAMPIPELINEPROC) glcorewUnsupported;
PFNGLDELETEPROGRAMPIPELINESPROC glcorewDeleteProgramPipelines =
    (PFNGLDELETEPROGRAMPIPELINESPROC) glcorewUnsupported;
PFNGLGENPROGRAMPIPELINESPROC glcorewGenProgramPipelines =
    (PFNGLGENPROGRAMPIPELINESPROC) glcorewUnsupported;
PFNGLISPROGRAMPIPELINEPROC glcorewIsProgramPipeline =
    (PFNGLISPROGRAMPIPELINEPROC) glcorewUnsupported;
PFNGLGETPROGRAMPIPELINEIVPROC glcorewGetProgramPipelineiv =
    (PFNGLGETPROGRAMPIPELINEIVPROC) glcorewUnsupported;
PFNGLPROGRAMUNIFORM1IPROC glcorewProgramUniform1i =
    (PFNGLPROGRAMUNIFORM1IPROC) glcorewUnsupported;
PFNGLPROGRAMUNIFORM1IVPROC glcorewProgramUniform1iv =
    (PFNGLPROGRAMUNIFORM1IVPROC) glcorewUnsupported;
PFNGLPROGRAMUNIFORM1FPROC glcorewProgramUniform1f =
    (PFNGLPROGRAMUNIFORM1FPROC) glcorewUnsupported;
PFNGLPROGRAMUNIFORM1FVPROC glcorewProgramUniform1fv =
    (PFNGLPROGRAMUNIFORM1FVPROC) glcorewUnsupported;
PFNGLPROGRAMUNIFORM1DPROC glcorewProgramUniform1d =
    (PFNGLPROGRAMUNIFORM1DPROC) glcorewUnsupported;
PFNGLPROGRAMUNIFORM1DVPROC glcorewProgramUniform1dv =
    (PFNGLPROGRAMUNIFORM1DVPROC) glcorewUnsupported;
PFNGLPROGRAMUNIFORM1UIPROC glcorewProgramUniform1ui =
    (PFNGLPROGRAMUNIFORM1UIPROC) glcorewUnsupported;
PFNGLPROGRAMUNIFORM1UIVPROC glcorewProgramUniform1uiv =
    (PFNGLPROGRAMUNIFORM1UIVPROC) glcorewUnsupported;
PFNGLPROGRAMUNIFORM2IPROC glcorewProgramUniform2i =
    (PFNGLPROGRAMUNIFORM2IPROC) glcorewUnsupported;
PFNGLPROGRAMUNIFORM2IVPROC glcorewProgramUniform2iv =
    (PFNGLPROGRAMUNIFORM2IVPROC) glcorewUnsupported;
PFNGLPROGRAMUNIFORM2FPROC glcorewProgramUniform2f =
    (PFNGLPROGRAMUNIFORM2FPROC) glcorewUnsupported;
PFNGLPROGRAMUNIFORM2FVPROC glcorewProgramUniform2fv =
    (PFNGLPROGRAMUNIFORM2FVPROC) glcorewUnsupported;
PFNGLPROGRAMUNIFORM2DPROC glcorewProgramUniform2d =
    (PFNGLPROGRAMUNIFORM2DPROC) glcorewUnsupported;
PFNGLPROGRAMUNIFORM2DVPROC glcorewProgramUniform2dv =
    (PFNGLPROGRAMUNIFORM2DVPROC) glcorewUnsupported;
PFNGLPROGRAMUNIFORM2UIPROC glcorewProgramUniform2ui =
    (PFNGLPROGRAMUNIFORM2UIPROC) glcorewUnsupported;
PFNGLPROGRAMUNIFORM2UIVPROC glcorewProgramUniform2uiv =
    (PFNGLPROGRAMUNIFORM2UIVPROC) glcorewUnsupported;
PFNGLPROGRAMUNIFORM3IPROC glcorewProgramUniform3i =
    (PFNGLPROGRAMUNIFORM3IPROC) glcorewUnsupported;
PFNGLPROGRAMUNIFORM3IVPROC glcorewProgramUniform3iv =
    (PFNGLPROGRAMUNIFORM3IVPROC) glcorewUnsupported;
PFNGLPROGRAMUNIFORM3FPROC glcorewProgramUniform3f =
    (PFNGLPROGRAMUNIFORM3FPROC) glcorewUnsupported;
PFNGLPROGRAMUNIFORM3FVPROC glcorewProgramUniform3fv =
    (PFNGLPROGRAMUNIFORM3FVPROC) glcorewUnsupported;
PFNGLPROGRAMUNIFORM3DPROC glcorewProgramUniform3d =
    (PFNGLPROGRAMUNIFORM3DPROC) glcorewUnsupported;
PFNGLPROGRAMUNIFORM3DVPROC glcorewProgramUniform3dv =
    (PFNGLPROGRAMUNIFORM3DVPROC) glcorewUnsupported;
PFNGLPROGRAMUNIFORM3UIPROC glcorewProgramUniform3ui =
    (PFNGLPROGRAMUNIFORM3UIPROC) glcorewUnsupported;
PFNGLPROGRAMUNIFORM3UIVPROC glcorewProgramUniform3uiv =
    (PFNGLPROGRAMUNIFORM3UIVPROC) glcorewUnsupported;
PFNGLPROGRAMUNIFORM4IPROC glcorewProgramUniform4i =
    (PFNGLPROGRAMUNIFORM4IPROC) glcorewUnsupported;
PFNGLPROGRAMUNIFORM4IVPROC glcorewProgramUniform4iv =
    (PFNGLPROGRAMUNIFORM4IVPROC) glcorewUnsupported;
PFNGLPROGRAMUNIFORM4FPROC glcorewProgramUniform4f =
    (PFNGLPROGRAMUNIFORM4FPROC) glcorewUnsupported;
PFNGLPROGRAMUNIFORM4FVPROC glcorewProgramUniform4fv =
    (PFNGLPROGRAMUNIFORM4FVPROC) glcorewUnsupported;
PFNGLPROGRAMUNIFORM4DPROC glcorewProgramUniform4d =
    (PFNGLPROGRAMUNIFORM4DPROC) glcorewUnsupported;
PFNGLPROGRAMUNIFORM4DVPROC glcorewProgramUniform4dv =
    (PFNGLPROGRAMUNIFORM4DVPROC) glcorewUnsupported;
PFNGLPROGRAMUNIFORM4UIPROC glcorewProgramUniform4ui =
    (PFNGLPROGRAMUNIFORM4UIPROC) glcorewUnsupported;
PFNGLPROGRAMUNIFORM4UIVPROC glcorewProgramUniform4uiv =
    (PFNGLPROGRAMUNIFORM4UIVPROC) glcorewUnsupported;
PFNGLPROGRAMUNIFORMMATRIX2FVPROC glcorewProgramUniformMatrix2fv =
    (PFNGLPROGRAMUNIFORMMATRIX2FVPROC) glcorewUnsupported;
PFNGLPROGRAMUNIFORMMATRIX3FVPROC glcorewProgramUniformMatrix3fv =
    (PFNGLPROGRAMUNIFORMMATRIX3FVPROC) glcorewUnsupported;
PFNGLPROGRAMUNIFORMMATRIX4FVPROC glcorewProgramUniformMatrix4fv =
    (PFNGLPROGRAMUNIFORMMATRIX4FVPROC) glcorewUnsupported;
PFNGLPROGRAMUNIFORMMATRIX2DVPROC glcorewProgramUniformMatrix2dv =
    (PFNGLPROGRAMUNIFORMMATRIX2DVPROC) glcorewUnsupported;
PFNGLPROGRAMUNIFORMMATRIX3DVPROC glcorewProgramUniformMatrix3dv =
    (PFNGLPROGRAMUNIFORMMATRIX3DVPROC) glcorewUnsupported;
PFNGLPROGRAMUNIFORMMATRIX4DVPROC glcorewProgramUniformMatrix4dv =
    (PFNGLPROGRAMUNIFORMMATRIX4DVPROC) glcorewUnsupported;
PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC glcorewProgramUniformMatrix2x3fv =
    (PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC) glcorewUnsupported;
PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC glcorewProgramUniformMatrix3x2fv =
    (PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC) glcorewUnsupported;
PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC glcorewProgramUniformMatrix2x4fv =
    (PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC) glcorewUnsupported;
PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC glcorewProgramUniformMatrix4x2fv =
    (PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC) glcorewUnsupported;
PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC glcorewProgramUniformMatrix3x4fv =
    (PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC) glcorewUnsupported;
PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC glcorewProgramUniformMatrix4x3fv =
    (PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC) glcorewUnsupported;
PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC glcorewProgramUniformMatrix2x3dv =
    (PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC) glcorewUnsupported;
PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC glcorewProgramUniformMatrix3x2dv =
    (PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC) glcorewUnsupported;
PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC glcorewProgramUniformMatrix2x4dv =
    (PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC) glcorewUnsupported;
PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC glcorewProgramUniformMatrix4x2dv =
    (PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC) glcorewUnsupported;
PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC glcorewProgramUniformMatrix3x4dv =
    (PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC) glcorewUnsupported;
PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC glcorewProgramUniformMatrix4x3dv =
    (PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC) glcorewUnsupported;
PFNGLVALIDATEPROGRAMPIPELINEPROC glcorewValidateProgramPipeline =
    (PFNGLVALIDATEPROGRAMPIPELINEPROC) glcorewUnsupported;
PFNGLGETPROGRAMPIPELINEINFOLOGPROC glcorewGetProgramPipelineInfoLog =
    (PFNGLGETPROGRAMPIPELINEINFOLOGPROC) glcorewUnsupported;
PFNGLVERTEXATTRIBL1DPROC glcorewVertexAttribL1d =
    (PFNGLVERTEXATTRIBL1DPROC) glcorewUnsupported;
PFNGLVERTEXATTRIBL2DPROC glcorewVertexAttribL2d =
    (PFNGLVERTEXATTRIBL2DPROC) glcorewUnsupported;
PFNGLVERTEXATTRIBL3DPROC glcorewVertexAttribL3d =
    (PFNGLVERTEXATTRIBL3DPROC) glcorewUnsupported;
PFNGLVERTEXATTRIBL4DPROC glcorewVertexAttribL4d =
    (PFNGLVERTEXATTRIBL4DPROC) glcorewUnsupported;
PFNGLVERTEXATTRIBL1DVPROC glcorewVertexAttribL1dv =
    (PFNGLVERTEXATTRIBL1DVPROC) glcorewUnsupported;
PFNGLVERTEXATTRIBL2DVPROC glcorewVertexAttribL2dv =
    (PFNGLVERTEXATTRIBL2DVPROC) glcorewUnsupported;
PFNGLVERTEXATTRIBL3DVPROC glcorewVertexAttribL3dv =
    (PFNGLVERTEXATTRIBL3DVPROC) glcorewUnsupported;
PFNGLVERTEXATTRIBL4DVPROC glcorewVertexAttribL4dv =
    (PFNGLVERTEXATTRIBL4DVPROC) glcorewUnsupported;
PFNGLVERTEXATTRIBLPOINTERPROC glcorewVertexAttribLPointer =
    (PFNGLVERTEXATTRIBLPOINTERPROC) glcorewUnsupported;
PFNGLGETVERTEXATTRIBLDVPROC glcorewGetVertexAttribLdv =
    (PFNGLGETVERTEXATTRIBLDVPROC) glcorewUnsupported;
PFNGLVIEWPORTARRAYVPROC glcorewViewportArrayv =
    (PFNGLVIEWPORTARRAYVPROC) glcorewUnsupported;
PFNGLVIEWPORTINDEXEDFPROC glcorewViewportIndexedf =
    (PFNGLVIEWPORTINDEXEDFPROC) glcorewUnsupported;
PFNGLVIEWPORTINDEXEDFVPROC glcorewViewportIndexedfv =
    (PFNGLVIEWPORTINDEXEDFVPROC) glcorewUnsupported;
PFNGLSCISSORARRAYVPROC glcorewScissorArrayv =
    (PFNGLSCISSORARRAYVPROC) glcorewUnsupported;
PFNGLSCISSORINDEXEDPROC glcorewScissorIndexed =
    (PFNGLSCISSORINDEXEDPROC) glcorewUnsupported;
PFNGLSCISSORINDEXEDVPROC glcorewScissorIndexedv =
    (PFNGLSCISSORINDEXEDVPROC) glcorewUnsupported;
PFNGLDEPTHRANGEARRAYVPROC glcorewDepthRangeArrayv =
    (PFNGLDEPTHRANGEARRAYVPROC) glcorewUnsupported;
PFNGLDEPTHRANGEINDEXEDPROC glcorewDepthRangeIndexed =
    (PFNGLDEPTHRANGEINDEXEDPROC) glcorewUnsupported;
PFNGLGETFLOATI_VPROC glcorewGetFloati_v =
    (PFNGLGETFLOATI_VPROC) glcorewUnsupported;
PFNGLGETDOUBLEI_VPROC glcorewGetDoublei_v =
    (PFNGLGETDOUBLEI_VPROC) glcorewUnsupported;
PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC glcorewDrawArraysInstancedBaseInstance =
    (PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC) glcorewUnsupported;
PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC glcorewDrawElementsInstancedBaseInstance =
    (PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC) glcorewUnsupported;
PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC glcorewDrawElementsInstancedBaseVertexBaseInstance =
    (PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC) glcorewUnsupported;
PFNGLGETINTERNALFORMATIVPROC glcorewGetInternalformativ =
    (PFNGLGETINTERNALFORMATIVPROC) glcorewUnsupported;
PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC glcorewGetActiveAtomicCounterBufferiv =
    (PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC) glcorewUnsupported;
PFNGLBINDIMAGETEXTUREPROC glcorewBindImageTexture =
    (PFNGLBINDIMAGETEXTUREPROC) glcorewUnsupported;
PFNGLMEMORYBARRIERPROC glcorewMemoryBarrier =
    (PFNGLMEMORYBARRIERPROC) glcorewUnsupported;
PFNGLTEXSTORAGE1DPROC glcorewTexStorage1D =
    (PFNGLTEXSTORAGE1DPROC) glcorewUnsupported;
PFNGLTEXSTORAGE2DPROC glcorewTexStorage2D =
    (PFNGLTEXSTORAGE2DPROC) glcorewUnsupported;
PFNGLTEXSTORAGE3DPROC glcorewTexStorage3D =
    (PFNGLTEXSTORAGE3DPROC) glcorewUnsupported;
PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC glcorewDrawTransformFeedbackInstanced =
    (PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC) glcorewUnsupported;
PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC glcorewDrawTransformFeedbackStreamInstanced =
    (PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC) glcorewUnsupported;
PFNGLCLEARBUFFERDATAPROC glcorewClearBufferData =
    (PFNGLCLEARBUFFERDATAPROC) glcorewUnsupported;
PFNGLCLEARBUFFERSUBDATAPROC glcorewClearBufferSubData =
    (PFNGLCLEARBUFFERSUBDATAPROC) glcorewUnsupported;
PFNGLDISPATCHCOMPUTEPROC glcorewDispatchCompute =
    (PFNGLDISPATCHCOMPUTEPROC) glcorewUnsupported;
PFNGLDISPATCHCOMPUTEINDIRECTPROC glcorewDispatchComputeIndirect =
    (PFNGLDISPATCHCOMPUTEINDIRECTPROC) glcorewUnsupported;
PFNGLCOPYIMAGESUBDATAPROC glcorewCopyImageSubData =
    (PFNGLCOPYIMAGESUBDATAPROC) glcorewUnsupported;
PFNGLFRAMEBUFFERPARAMETERIPROC glcorewFramebufferParameteri =
    (PFNGLFRAMEBUFFERPARAMETERIPROC) glcorewUnsupported;
PFNGLGETFRAMEBUFFERPARAMETERIVPROC glcorewGetFramebufferParameteriv =
    (PFNGLGETFRAMEBUFFERPARAMETERIVPROC) glcorewUnsupported;
PFNGLGETINTERNALFORMATI64VPROC glcorewGetInternalformati64v =
    (PFNGLGETINTERNALFORMATI64VPROC) glcorewUnsupported;
PFNGLINVALIDATETEXSUBIMAGEPROC glcorewInvalidateTexSubImage =
    (PFNGLINVALIDATETEXSUBIMAGEPROC) glcorewUnsupported;
PFNGLINVALIDATETEXIMAGEPROC glcorewInvalidateTexImage =
    (PFNGLINVALIDATETEXIMAGEPROC) glcorewUnsupported;
PFNGLINVALIDATEBUFFERSUBDATAPROC glcorewInvalidateBufferSubData =
    (PFNGLINVALIDATEBUFFERSUBDATAPROC) glcorewUnsupported;
PFNGLINVALIDATEBUFFERDATAPROC glcorewInvalidateBufferData =
    (PFNGLINVALIDATEBUFFERDATAPROC) glcorewUnsupported;
PFNGLINVALIDATEFRAMEBUFFERPROC glcorewInvalidateFramebuffer =
    (PFNGLINVALIDATEFRAMEBUFFERPROC) glcorewUnsupported;
PFNGLINVALIDATESUBFRAMEBUFFERPROC glcorewInvalidateSubFramebuffer =
    (PFNGLINVALIDATESUBFRAMEBUFFERPROC) glcorewUnsupported;
PFNGLMULTIDRAWARRAYSINDIRECTPROC glcorewMultiDrawArraysIndirect =
    (PFNGLMULTIDRAWARRAYSINDIRECTPROC) glcorewUnsupported;
PFNGLMULTIDRAWELEMENTSINDIRECTPROC glcorewMultiDrawElementsIndirect =
    (PFNGLMULTIDRAWELEMENTSINDIRECTPROC) glcorewUnsupported;
PFNGLGETPROGRAMINTERFACEIVPROC glcorewGetProgramInterfaceiv =
    (PFNGLGETPROGRAMINTERFACEIVPROC) glcorewUnsupported;
PFNGLGETPROGRAMRESOURCEINDEXPROC glcorewGetProgramResourceIndex =
    (PFNGLGETPROGRAMRESOURCEINDEXPROC) glcorewUnsupported;
PFNGLGETPROGRAMRESOURCENAMEPROC glcorewGetProgramResourceName =
    (PFNGLGETPROGRAMRESOURCENAMEPROC) glcorewUnsupported;
PFNGLGETPROGRAMRESOURCEIVPROC glcorewGetProgramResourceiv =
    (PFNGLGETPROGRAMRESOURCEIVPROC) glcorewUnsupported;
PFNGLGETPROGRAMRESOURCELOCATIONPROC glcorewGetProgramResourceLocation =
    (PFNGLGETPROGRAMRESOURCELOCATIONPROC) glcorewUnsupported;
PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC glcorewGetProgramResourceLocationIndex =
    (PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC) glcorewUnsupported;
PFNGLSHADERSTORAGEBLOCKBINDINGPROC glcorewShaderStorageBlockBinding =
    (PFNGLSHADERSTORAGEBLOCKBINDINGPROC) glcorewUnsupported;
PFNGLTEXBUFFERRANGEPROC glcorewTexBufferRange =
    (PFNGLTEXBUFFERRANGEPROC) glcorewUnsupported;
PFNGLTEXSTORAGE2DMULTISAMPLEPROC glcorewTexStorage2DMultisample =
    (PFNGLTEXSTORAGE2DMULTISAMPLEPROC) glcorewUnsupported;
PFNGLTEXSTORAGE3DMULTISAMPLEPROC glcorewTexStorage3DMultisample =
    (PFNGLTEXSTORAGE3DMULTISAMPLEPROC) glcorewUnsupported;
PFNGLTEXTUREVIEWPROC glcorewTextureView =
    (PFNGLTEXTUREVIEWPROC) glcorewUnsupported;
PFNGLBINDVERTEXBUFFERPROC glcorewBindVertexBuffer =
    (PFNGLBINDVERTEXBUFFERPROC) glcorewUnsupported;
PFNGLVERTEXATTRIBFORMATPROC glcorewVertexAttribFormat =
    (PFNGLVERTEXATTRIBFORMATPROC) glcorewUnsupported;
PFNGLVERTEXATTRIBIFORMATPROC glcorewVertexAttribIFormat =
    (PFNGLVERTEXATTRIBIFORMATPROC) glcorewUnsupported;
PFNGLVERTEXATTRIBLFORMATPROC glcorewVertexAttribLFormat =
    (PFNGLVERTEXATTRIBLFORMATPROC) glcorewUnsupported;
PFNGLVERTEXATTRIBBINDINGPROC glcorewVertexAttribBinding =
    (PFNGLVERTEXATTRIBBINDINGPROC) glcorewUnsupported;
PFNGLVERTEXBINDINGDIVISORPROC glcorewVertexBindingDivisor =
    (PFNGLVERTEXBINDINGDIVISORPROC) glcorewUnsupported;
PFNGLDEBUGMESSAGECONTROLPROC glcorewDebugMessageControl =
    (PFNGLDEBUGMESSAGECONTROLPROC) glcorewUnsupported;
PFNGLDEBUGMESSAGEINSERTPROC glcorewDebugMessageInsert =
    (PFNGLDEBUGMESSAGEINSERTPROC) glcorewUnsupported;
PFNGLDEBUGMESSAGECALLBACKPROC glcorewDebugMessageCallback =
    (PFNGLDEBUGMESSAGECALLBACKPROC) glcorewUnsupported;
PFNGLGETDEBUGMESSAGELOGPROC glcorewGetDebugMessageLog =
    (PFNGLGETDEBUGMESSAGELOGPROC) glcorewUnsupported;
PFNGLPUSHDEBUGGROUPPROC glcorewPushDebugGroup =
    (PFNGLPUSHDEBUGGROUPPROC) glcorewUnsupported;
PFNGLPOPDEBUGGROUPPROC glcorewPopDebugGroup =
    (PFNGLPOPDEBUGGROUPPROC) glcorewUnsupported;
PFNGLOBJECTLABELPROC glcorewObjectLabel =
    (PFNGLOBJECTLABELPROC) glcorewUnsupported;
PFNGLGETOBJECTLABELPROC glcorewGetObjectLabel =
    (PFNGLGETOBJECTLABELPROC) glcorewUnsupported;
PFNGLOBJECTPTRLABELPROC glcorewObjectPtrLabel =
    (PFNGLOBJECTPTRLABELPROC) glcorewUnsupported;
PFNGLGETOBJECTPTRLABELPROC glcorewGetObjectPtrLabel =
    (PFNGLGETOBJECTPTRLABELPROC) glcorewUnsupported;
PFNGLBUFFERSTORAGEPROC glcorewBufferStorage =
    (PFNGLBUFFERSTORAGEPROC) glcorewUnsupported;
PFNGLCLEARTEXIMAGEPROC glcorewClearTexImage =
    (PFNGLCLEARTEXIMAGEPROC) glcorewUnsupported;
PFNGLCLEARTEXSUBIMAGEPROC glcorewClearTexSubImage =
    (PFNGLCLEARTEXSUBIMAGEPROC) glcorewUnsupported;
PFNGLBINDBUFFERSBASEPROC glcorewBindBuffersBase =
    (PFNGLBINDBUFFERSBASEPROC) glcorewUnsupported;
PFNGLBINDBUFFERSRANGEPROC glcorewBindBuffersRange =
    (PFNGLBINDBUFFERSRANGEPROC) glcorewUnsupported;
PFNGLBINDTEXTURESPROC glcorewBindTextures =
    (PFNGLBINDTEXTURESPROC) glcorewUnsupported;
PFNGLBINDSAMPLERSPROC glcorewBindSamplers =
    (PFNGLBINDSAMPLERSPROC) glcorewUnsupported;
PFNGLBINDIMAGETEXTURESPROC glcorewBindImageTextures =
    (PFNGLBINDIMAGETEXTURESPROC) glcorewUnsupported;
PFNGLBINDVERTEXBUFFERSPROC glcorewBindVertexBuffers =
    (PFNGLBINDVERTEXBUFFERSPROC) glcorewUnsupported;
PFNGLGETTEXTUREHANDLEARBPROC glcorewGetTextureHandleARB =
    (PFNGLGETTEXTUREHANDLEARBPROC) glcorewUnsupported;
PFNGLGETTEXTURESAMPLERHANDLEARBPROC glcorewGetTextureSamplerHandleARB =
    (PFNGLGETTEXTURESAMPLERHANDLEARBPROC) glcorewUnsupported;
PFNGLMAKETEXTUREHANDLERESIDENTARBPROC glcorewMakeTextureHandleResidentARB =
    (PFNGLMAKETEXTUREHANDLERESIDENTARBPROC) glcorewUnsupported;
PFNGLMAKETEXTUREHANDLENONRESIDENTARBPROC glcorewMakeTextureHandleNonResidentARB =
    (PFNGLMAKETEXTUREHANDLENONRESIDENTARBPROC) glcorewUnsupported;
PFNGLGETIMAGEHANDLEARBPROC glcorewGetImageHandleARB =
    (PFNGLGETIMAGEHANDLEARBPROC) glcorewUnsupported;
PFNGLMAKEIMAGEHANDLERESIDENTARBPROC glcorewMakeImageHandleResidentARB =
    (PFNGLMAKEIMAGEHANDLERESIDENTARBPROC) glcorewUnsupported;
PFNGLMAKEIMAGEHANDLENONRESIDENTARBPROC glcorewMakeImageHandleNonResidentARB =
    (PFNGLMAKEIMAGEHANDLENONRESIDENTARBPROC) glcorewUnsupported;
PFNGLUNIFORMHANDLEUI64ARBPROC glcorewUniformHandleui64ARB =
    (PFNGLUNIFORMHANDLEUI64ARBPROC) glcorewUnsupported;
PFNGLUNIFORMHANDLEUI64VARBPROC glcorewUniformHandleui64vARB =
    (PFNGLUNIFORMHANDLEUI64VARBPROC) glcorewUnsupported;
PFNGLPROGRAMUNIFORMHANDLEUI64ARBPROC glcorewProgramUniformHandleui64ARB =
    (PFNGLPROGRAMUNIFORMHANDLEUI64ARBPROC) glcorewUnsupported;
PFNGLPROGRAMUNIFORMHANDLEUI64VARBPROC glcorewProgramUniformHandleui64vARB =
    (PFNGLPROGRAMUNIFORMHANDLEUI64VARBPROC) glcorewUnsupported;
PFNGLISTEXTUREHANDLERESIDENTARBPROC glcorewIsTextureHandleResidentARB =
    (PFNGLISTEXTUREHANDLERESIDENTARBPROC) glcorewUnsupported;
PFNGLISIMAGEHANDLERESIDENTARBPROC glcorewIsImageHandleResidentARB =
    (PFNGLISIMAGEHANDLERESIDENTARBPROC) glcorewUnsupported;
PFNGLVERTEXATTRIBL1UI64ARBPROC glcorewVertexAttribL1ui64ARB =
    (PFNGLVERTEXATTRIBL1UI64ARBPROC) glcorewUnsupported;
PFNGLVERTEXATTRIBL1UI64VARBPROC glcorewVertexAttribL1ui64vARB =
    (PFNGLVERTEXATTRIBL1UI64VARBPROC) glcorewUnsupported;
PFNGLGETVERTEXATTRIBLUI64VARBPROC glcorewGetVertexAttribLui64vARB =
    (PFNGLGETVERTEXATTRIBLUI64VARBPROC) glcorewUnsupported;
PFNGLCREATESYNCFROMCLEVENTARBPROC glcorewCreateSyncFromCLeventARB =
    (PFNGLCREATESYNCFROMCLEVENTARBPROC) glcorewUnsupported;
PFNGLDISPATCHCOMPUTEGROUPSIZEARBPROC glcorewDispatchComputeGroupSizeARB =
    (PFNGLDISPATCHCOMPUTEGROUPSIZEARBPROC) glcorewUnsupported;
PFNGLDEBUGMESSAGECONTROLARBPROC glcorewDebugMessageControlARB =
    (PFNGLDEBUGMESSAGECONTROLARBPROC) glcorewUnsupported;
PFNGLDEBUGMESSAGEINSERTARBPROC glcorewDebugMessageInsertARB =
    (PFNGLDEBUGMESSAGEINSERTARBPROC) glcorewUnsupported;
PFNGLDEBUGMESSAGECALLBACKARBPROC glcorewDebugMessageCallbackARB =
    (PFNGLDEBUGMESSAGECALLBACKARBPROC) glcorewUnsupported;
PFNGLGETDEBUGMESSAGELOGARBPROC glcorewGetDebugMessageLogARB =
    (PFNGLGETDEBUGMESSAGELOGARBPROC) glcorewUnsupported;
PFNGLBLENDEQUATIONIARBPROC glcorewBlendEquationiARB =
    (PFNGLBLENDEQUATIONIARBPROC) glcorewUnsupported;
PFNGLBLENDEQUATIONSEPARATEIARBPROC glcorewBlendEquationSeparateiARB =
    (PFNGLBLENDEQUATIONSEPARATEIARBPROC) glcorewUnsupported;
PFNGLBLENDFUNCIARBPROC glcorewBlendFunciARB =
    (PFNGLBLENDFUNCIARBPROC) glcorewUnsupported;
PFNGLBLENDFUNCSEPARATEIARBPROC glcorewBlendFuncSeparateiARB =
    (PFNGLBLENDFUNCSEPARATEIARBPROC) glcorewUnsupported;
PFNGLMULTIDRAWARRAYSINDIRECTCOUNTARBPROC glcorewMultiDrawArraysIndirectCountARB =
    (PFNGLMULTIDRAWARRAYSINDIRECTCOUNTARBPROC) glcorewUnsupported;
PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTARBPROC glcorewMultiDrawElementsIndirectCountARB =
    (PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTARBPROC) glcorewUnsupported;
PFNGLGETGRAPHICSRESETSTATUSARBPROC glcorewGetGraphicsResetStatusARB =
    (PFNGLGETGRAPHICSRESETSTATUSARBPROC) glcorewUnsupported;
PFNGLGETNTEXIMAGEARBPROC glcorewGetnTexImageARB =
    (PFNGLGETNTEXIMAGEARBPROC) glcorewUnsupported;
PFNGLREADNPIXELSARBPROC glcorewReadnPixelsARB =
    (PFNGLREADNPIXELSARBPROC) glcorewUnsupported;
PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC glcorewGetnCompressedTexImageARB =
    (PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC) glcorewUnsupported;
PFNGLGETNUNIFORMFVARBPROC glcorewGetnUniformfvARB =
    (PFNGLGETNUNIFORMFVARBPROC) glcorewUnsupported;
PFNGLGETNUNIFORMIVARBPROC glcorewGetnUniformivARB =
    (PFNGLGETNUNIFORMIVARBPROC) glcorewUnsupported;
PFNGLGETNUNIFORMUIVARBPROC glcorewGetnUniformuivARB =
    (PFNGLGETNUNIFORMUIVARBPROC) glcorewUnsupported;
PFNGLGETNUNIFORMDVARBPROC glcorewGetnUniformdvARB =
    (PFNGLGETNUNIFORMDVARBPROC) glcorewUnsupported;
PFNGLMINSAMPLESHADINGARBPROC glcorewMinSampleShadingARB =
    (PFNGLMINSAMPLESHADINGARBPROC) glcorewUnsupported;
PFNGLNAMEDSTRINGARBPROC glcorewNamedStringARB =
    (PFNGLNAMEDSTRINGARBPROC) glcorewUnsupported;
PFNGLDELETENAMEDSTRINGARBPROC glcorewDeleteNamedStringARB =
    (PFNGLDELETENAMEDSTRINGARBPROC) glcorewUnsupported;
PFNGLCOMPILESHADERINCLUDEARBPROC glcorewCompileShaderIncludeARB =
    (PFNGLCOMPILESHADERINCLUDEARBPROC) glcorewUnsupported;
PFNGLISNAMEDSTRINGARBPROC glcorewIsNamedStringARB =
    (PFNGLISNAMEDSTRINGARBPROC) glcorewUnsupported;
PFNGLGETNAMEDSTRINGARBPROC glcorewGetNamedStringARB =
    (PFNGLGETNAMEDSTRINGARBPROC) glcorewUnsupported;
PFNGLGETNAMEDSTRINGIVARBPROC glcorewGetNamedStringivARB =
    (PFNGLGETNAMEDSTRINGIVARBPROC) glcorewUnsupported;
PFNGLTEXPAGECOMMITMENTARBPROC glcorewTexPageCommitmentARB =
    (PFNGLTEXPAGECOMMITMENTARBPROC) glcorewUnsupported;


GLAPI int APIENTRY glcorewUnsupported (...)
{
    throw std::runtime_error ("An unsupported OpenGL entry point was called.");
}

void _glcorewInit (glcorewGetProcAddressCallback getprocaddress)
{
    void *ptr;

    ptr = getprocaddress ("glCullFace");
    if (ptr) glcorewCullFace = (PFNGLCULLFACEPROC) ptr;
    ptr = getprocaddress ("glFrontFace");
    if (ptr) glcorewFrontFace = (PFNGLFRONTFACEPROC) ptr;
    ptr = getprocaddress ("glHint");
    if (ptr) glcorewHint = (PFNGLHINTPROC) ptr;
    ptr = getprocaddress ("glLineWidth");
    if (ptr) glcorewLineWidth = (PFNGLLINEWIDTHPROC) ptr;
    ptr = getprocaddress ("glPointSize");
    if (ptr) glcorewPointSize = (PFNGLPOINTSIZEPROC) ptr;
    ptr = getprocaddress ("glPolygonMode");
    if (ptr) glcorewPolygonMode = (PFNGLPOLYGONMODEPROC) ptr;
    ptr = getprocaddress ("glScissor");
    if (ptr) glcorewScissor = (PFNGLSCISSORPROC) ptr;
    ptr = getprocaddress ("glTexParameterf");
    if (ptr) glcorewTexParameterf = (PFNGLTEXPARAMETERFPROC) ptr;
    ptr = getprocaddress ("glTexParameterfv");
    if (ptr) glcorewTexParameterfv = (PFNGLTEXPARAMETERFVPROC) ptr;
    ptr = getprocaddress ("glTexParameteri");
    if (ptr) glcorewTexParameteri = (PFNGLTEXPARAMETERIPROC) ptr;
    ptr = getprocaddress ("glTexParameteriv");
    if (ptr) glcorewTexParameteriv = (PFNGLTEXPARAMETERIVPROC) ptr;
    ptr = getprocaddress ("glTexImage1D");
    if (ptr) glcorewTexImage1D = (PFNGLTEXIMAGE1DPROC) ptr;
    ptr = getprocaddress ("glTexImage2D");
    if (ptr) glcorewTexImage2D = (PFNGLTEXIMAGE2DPROC) ptr;
    ptr = getprocaddress ("glDrawBuffer");
    if (ptr) glcorewDrawBuffer = (PFNGLDRAWBUFFERPROC) ptr;
    ptr = getprocaddress ("glClear");
    if (ptr) glcorewClear = (PFNGLCLEARPROC) ptr;
    ptr = getprocaddress ("glClearColor");
    if (ptr) glcorewClearColor = (PFNGLCLEARCOLORPROC) ptr;
    ptr = getprocaddress ("glClearStencil");
    if (ptr) glcorewClearStencil = (PFNGLCLEARSTENCILPROC) ptr;
    ptr = getprocaddress ("glClearDepth");
    if (ptr) glcorewClearDepth = (PFNGLCLEARDEPTHPROC) ptr;
    ptr = getprocaddress ("glStencilMask");
    if (ptr) glcorewStencilMask = (PFNGLSTENCILMASKPROC) ptr;
    ptr = getprocaddress ("glColorMask");
    if (ptr) glcorewColorMask = (PFNGLCOLORMASKPROC) ptr;
    ptr = getprocaddress ("glDepthMask");
    if (ptr) glcorewDepthMask = (PFNGLDEPTHMASKPROC) ptr;
    ptr = getprocaddress ("glDisable");
    if (ptr) glcorewDisable = (PFNGLDISABLEPROC) ptr;
    ptr = getprocaddress ("glEnable");
    if (ptr) glcorewEnable = (PFNGLENABLEPROC) ptr;
    ptr = getprocaddress ("glFinish");
    if (ptr) glcorewFinish = (PFNGLFINISHPROC) ptr;
    ptr = getprocaddress ("glFlush");
    if (ptr) glcorewFlush = (PFNGLFLUSHPROC) ptr;
    ptr = getprocaddress ("glBlendFunc");
    if (ptr) glcorewBlendFunc = (PFNGLBLENDFUNCPROC) ptr;
    ptr = getprocaddress ("glLogicOp");
    if (ptr) glcorewLogicOp = (PFNGLLOGICOPPROC) ptr;
    ptr = getprocaddress ("glStencilFunc");
    if (ptr) glcorewStencilFunc = (PFNGLSTENCILFUNCPROC) ptr;
    ptr = getprocaddress ("glStencilOp");
    if (ptr) glcorewStencilOp = (PFNGLSTENCILOPPROC) ptr;
    ptr = getprocaddress ("glDepthFunc");
    if (ptr) glcorewDepthFunc = (PFNGLDEPTHFUNCPROC) ptr;
    ptr = getprocaddress ("glPixelStoref");
    if (ptr) glcorewPixelStoref = (PFNGLPIXELSTOREFPROC) ptr;
    ptr = getprocaddress ("glPixelStorei");
    if (ptr) glcorewPixelStorei = (PFNGLPIXELSTOREIPROC) ptr;
    ptr = getprocaddress ("glReadBuffer");
    if (ptr) glcorewReadBuffer = (PFNGLREADBUFFERPROC) ptr;
    ptr = getprocaddress ("glReadPixels");
    if (ptr) glcorewReadPixels = (PFNGLREADPIXELSPROC) ptr;
    ptr = getprocaddress ("glGetBooleanv");
    if (ptr) glcorewGetBooleanv = (PFNGLGETBOOLEANVPROC) ptr;
    ptr = getprocaddress ("glGetDoublev");
    if (ptr) glcorewGetDoublev = (PFNGLGETDOUBLEVPROC) ptr;
    ptr = getprocaddress ("glGetError");
    if (ptr) glcorewGetError = (PFNGLGETERRORPROC) ptr;
    ptr = getprocaddress ("glGetFloatv");
    if (ptr) glcorewGetFloatv = (PFNGLGETFLOATVPROC) ptr;
    ptr = getprocaddress ("glGetIntegerv");
    if (ptr) glcorewGetIntegerv = (PFNGLGETINTEGERVPROC) ptr;
    ptr = getprocaddress ("glGetString");
    if (ptr) glcorewGetString = (PFNGLGETSTRINGPROC) ptr;
    ptr = getprocaddress ("glGetTexImage");
    if (ptr) glcorewGetTexImage = (PFNGLGETTEXIMAGEPROC) ptr;
    ptr = getprocaddress ("glGetTexParameterfv");
    if (ptr) glcorewGetTexParameterfv = (PFNGLGETTEXPARAMETERFVPROC) ptr;
    ptr = getprocaddress ("glGetTexParameteriv");
    if (ptr) glcorewGetTexParameteriv = (PFNGLGETTEXPARAMETERIVPROC) ptr;
    ptr = getprocaddress ("glGetTexLevelParameterfv");
    if (ptr) glcorewGetTexLevelParameterfv = (PFNGLGETTEXLEVELPARAMETERFVPROC) ptr;
    ptr = getprocaddress ("glGetTexLevelParameteriv");
    if (ptr) glcorewGetTexLevelParameteriv = (PFNGLGETTEXLEVELPARAMETERIVPROC) ptr;
    ptr = getprocaddress ("glIsEnabled");
    if (ptr) glcorewIsEnabled = (PFNGLISENABLEDPROC) ptr;
    ptr = getprocaddress ("glDepthRange");
    if (ptr) glcorewDepthRange = (PFNGLDEPTHRANGEPROC) ptr;
    ptr = getprocaddress ("glViewport");
    if (ptr) glcorewViewport = (PFNGLVIEWPORTPROC) ptr;
    ptr = getprocaddress ("glDrawArrays");
    if (ptr) glcorewDrawArrays = (PFNGLDRAWARRAYSPROC) ptr;
    ptr = getprocaddress ("glDrawElements");
    if (ptr) glcorewDrawElements = (PFNGLDRAWELEMENTSPROC) ptr;
    ptr = getprocaddress ("glGetPointerv");
    if (ptr) glcorewGetPointerv = (PFNGLGETPOINTERVPROC) ptr;
    ptr = getprocaddress ("glPolygonOffset");
    if (ptr) glcorewPolygonOffset = (PFNGLPOLYGONOFFSETPROC) ptr;
    ptr = getprocaddress ("glCopyTexImage1D");
    if (ptr) glcorewCopyTexImage1D = (PFNGLCOPYTEXIMAGE1DPROC) ptr;
    ptr = getprocaddress ("glCopyTexImage2D");
    if (ptr) glcorewCopyTexImage2D = (PFNGLCOPYTEXIMAGE2DPROC) ptr;
    ptr = getprocaddress ("glCopyTexSubImage1D");
    if (ptr) glcorewCopyTexSubImage1D = (PFNGLCOPYTEXSUBIMAGE1DPROC) ptr;
    ptr = getprocaddress ("glCopyTexSubImage2D");
    if (ptr) glcorewCopyTexSubImage2D = (PFNGLCOPYTEXSUBIMAGE2DPROC) ptr;
    ptr = getprocaddress ("glTexSubImage1D");
    if (ptr) glcorewTexSubImage1D = (PFNGLTEXSUBIMAGE1DPROC) ptr;
    ptr = getprocaddress ("glTexSubImage2D");
    if (ptr) glcorewTexSubImage2D = (PFNGLTEXSUBIMAGE2DPROC) ptr;
    ptr = getprocaddress ("glBindTexture");
    if (ptr) glcorewBindTexture = (PFNGLBINDTEXTUREPROC) ptr;
    ptr = getprocaddress ("glDeleteTextures");
    if (ptr) glcorewDeleteTextures = (PFNGLDELETETEXTURESPROC) ptr;
    ptr = getprocaddress ("glGenTextures");
    if (ptr) glcorewGenTextures = (PFNGLGENTEXTURESPROC) ptr;
    ptr = getprocaddress ("glIsTexture");
    if (ptr) glcorewIsTexture = (PFNGLISTEXTUREPROC) ptr;
    ptr = getprocaddress ("glDrawRangeElements");
    if (ptr) glcorewDrawRangeElements = (PFNGLDRAWRANGEELEMENTSPROC) ptr;
    ptr = getprocaddress ("glTexImage3D");
    if (ptr) glcorewTexImage3D = (PFNGLTEXIMAGE3DPROC) ptr;
    ptr = getprocaddress ("glTexSubImage3D");
    if (ptr) glcorewTexSubImage3D = (PFNGLTEXSUBIMAGE3DPROC) ptr;
    ptr = getprocaddress ("glCopyTexSubImage3D");
    if (ptr) glcorewCopyTexSubImage3D = (PFNGLCOPYTEXSUBIMAGE3DPROC) ptr;
    ptr = getprocaddress ("glActiveTexture");
    if (ptr) glcorewActiveTexture = (PFNGLACTIVETEXTUREPROC) ptr;
    ptr = getprocaddress ("glSampleCoverage");
    if (ptr) glcorewSampleCoverage = (PFNGLSAMPLECOVERAGEPROC) ptr;
    ptr = getprocaddress ("glCompressedTexImage3D");
    if (ptr) glcorewCompressedTexImage3D = (PFNGLCOMPRESSEDTEXIMAGE3DPROC) ptr;
    ptr = getprocaddress ("glCompressedTexImage2D");
    if (ptr) glcorewCompressedTexImage2D = (PFNGLCOMPRESSEDTEXIMAGE2DPROC) ptr;
    ptr = getprocaddress ("glCompressedTexImage1D");
    if (ptr) glcorewCompressedTexImage1D = (PFNGLCOMPRESSEDTEXIMAGE1DPROC) ptr;
    ptr = getprocaddress ("glCompressedTexSubImage3D");
    if (ptr) glcorewCompressedTexSubImage3D = (PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC) ptr;
    ptr = getprocaddress ("glCompressedTexSubImage2D");
    if (ptr) glcorewCompressedTexSubImage2D = (PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC) ptr;
    ptr = getprocaddress ("glCompressedTexSubImage1D");
    if (ptr) glcorewCompressedTexSubImage1D = (PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC) ptr;
    ptr = getprocaddress ("glGetCompressedTexImage");
    if (ptr) glcorewGetCompressedTexImage = (PFNGLGETCOMPRESSEDTEXIMAGEPROC) ptr;
    ptr = getprocaddress ("glBlendFuncSeparate");
    if (ptr) glcorewBlendFuncSeparate = (PFNGLBLENDFUNCSEPARATEPROC) ptr;
    ptr = getprocaddress ("glMultiDrawArrays");
    if (ptr) glcorewMultiDrawArrays = (PFNGLMULTIDRAWARRAYSPROC) ptr;
    ptr = getprocaddress ("glMultiDrawElements");
    if (ptr) glcorewMultiDrawElements = (PFNGLMULTIDRAWELEMENTSPROC) ptr;
    ptr = getprocaddress ("glPointParameterf");
    if (ptr) glcorewPointParameterf = (PFNGLPOINTPARAMETERFPROC) ptr;
    ptr = getprocaddress ("glPointParameterfv");
    if (ptr) glcorewPointParameterfv = (PFNGLPOINTPARAMETERFVPROC) ptr;
    ptr = getprocaddress ("glPointParameteri");
    if (ptr) glcorewPointParameteri = (PFNGLPOINTPARAMETERIPROC) ptr;
    ptr = getprocaddress ("glPointParameteriv");
    if (ptr) glcorewPointParameteriv = (PFNGLPOINTPARAMETERIVPROC) ptr;
    ptr = getprocaddress ("glBlendColor");
    if (ptr) glcorewBlendColor = (PFNGLBLENDCOLORPROC) ptr;
    ptr = getprocaddress ("glBlendEquation");
    if (ptr) glcorewBlendEquation = (PFNGLBLENDEQUATIONPROC) ptr;
    ptr = getprocaddress ("glGenQueries");
    if (ptr) glcorewGenQueries = (PFNGLGENQUERIESPROC) ptr;
    ptr = getprocaddress ("glDeleteQueries");
    if (ptr) glcorewDeleteQueries = (PFNGLDELETEQUERIESPROC) ptr;
    ptr = getprocaddress ("glIsQuery");
    if (ptr) glcorewIsQuery = (PFNGLISQUERYPROC) ptr;
    ptr = getprocaddress ("glBeginQuery");
    if (ptr) glcorewBeginQuery = (PFNGLBEGINQUERYPROC) ptr;
    ptr = getprocaddress ("glEndQuery");
    if (ptr) glcorewEndQuery = (PFNGLENDQUERYPROC) ptr;
    ptr = getprocaddress ("glGetQueryiv");
    if (ptr) glcorewGetQueryiv = (PFNGLGETQUERYIVPROC) ptr;
    ptr = getprocaddress ("glGetQueryObjectiv");
    if (ptr) glcorewGetQueryObjectiv = (PFNGLGETQUERYOBJECTIVPROC) ptr;
    ptr = getprocaddress ("glGetQueryObjectuiv");
    if (ptr) glcorewGetQueryObjectuiv = (PFNGLGETQUERYOBJECTUIVPROC) ptr;
    ptr = getprocaddress ("glBindBuffer");
    if (ptr) glcorewBindBuffer = (PFNGLBINDBUFFERPROC) ptr;
    ptr = getprocaddress ("glDeleteBuffers");
    if (ptr) glcorewDeleteBuffers = (PFNGLDELETEBUFFERSPROC) ptr;
    ptr = getprocaddress ("glGenBuffers");
    if (ptr) glcorewGenBuffers = (PFNGLGENBUFFERSPROC) ptr;
    ptr = getprocaddress ("glIsBuffer");
    if (ptr) glcorewIsBuffer = (PFNGLISBUFFERPROC) ptr;
    ptr = getprocaddress ("glBufferData");
    if (ptr) glcorewBufferData = (PFNGLBUFFERDATAPROC) ptr;
    ptr = getprocaddress ("glBufferSubData");
    if (ptr) glcorewBufferSubData = (PFNGLBUFFERSUBDATAPROC) ptr;
    ptr = getprocaddress ("glGetBufferSubData");
    if (ptr) glcorewGetBufferSubData = (PFNGLGETBUFFERSUBDATAPROC) ptr;
    ptr = getprocaddress ("glMapBuffer");
    if (ptr) glcorewMapBuffer = (PFNGLMAPBUFFERPROC) ptr;
    ptr = getprocaddress ("glUnmapBuffer");
    if (ptr) glcorewUnmapBuffer = (PFNGLUNMAPBUFFERPROC) ptr;
    ptr = getprocaddress ("glGetBufferParameteriv");
    if (ptr) glcorewGetBufferParameteriv = (PFNGLGETBUFFERPARAMETERIVPROC) ptr;
    ptr = getprocaddress ("glGetBufferPointerv");
    if (ptr) glcorewGetBufferPointerv = (PFNGLGETBUFFERPOINTERVPROC) ptr;
    ptr = getprocaddress ("glBlendEquationSeparate");
    if (ptr) glcorewBlendEquationSeparate = (PFNGLBLENDEQUATIONSEPARATEPROC) ptr;
    ptr = getprocaddress ("glDrawBuffers");
    if (ptr) glcorewDrawBuffers = (PFNGLDRAWBUFFERSPROC) ptr;
    ptr = getprocaddress ("glStencilOpSeparate");
    if (ptr) glcorewStencilOpSeparate = (PFNGLSTENCILOPSEPARATEPROC) ptr;
    ptr = getprocaddress ("glStencilFuncSeparate");
    if (ptr) glcorewStencilFuncSeparate = (PFNGLSTENCILFUNCSEPARATEPROC) ptr;
    ptr = getprocaddress ("glStencilMaskSeparate");
    if (ptr) glcorewStencilMaskSeparate = (PFNGLSTENCILMASKSEPARATEPROC) ptr;
    ptr = getprocaddress ("glAttachShader");
    if (ptr) glcorewAttachShader = (PFNGLATTACHSHADERPROC) ptr;
    ptr = getprocaddress ("glBindAttribLocation");
    if (ptr) glcorewBindAttribLocation = (PFNGLBINDATTRIBLOCATIONPROC) ptr;
    ptr = getprocaddress ("glCompileShader");
    if (ptr) glcorewCompileShader = (PFNGLCOMPILESHADERPROC) ptr;
    ptr = getprocaddress ("glCreateProgram");
    if (ptr) glcorewCreateProgram = (PFNGLCREATEPROGRAMPROC) ptr;
    ptr = getprocaddress ("glCreateShader");
    if (ptr) glcorewCreateShader = (PFNGLCREATESHADERPROC) ptr;
    ptr = getprocaddress ("glDeleteProgram");
    if (ptr) glcorewDeleteProgram = (PFNGLDELETEPROGRAMPROC) ptr;
    ptr = getprocaddress ("glDeleteShader");
    if (ptr) glcorewDeleteShader = (PFNGLDELETESHADERPROC) ptr;
    ptr = getprocaddress ("glDetachShader");
    if (ptr) glcorewDetachShader = (PFNGLDETACHSHADERPROC) ptr;
    ptr = getprocaddress ("glDisableVertexAttribArray");
    if (ptr) glcorewDisableVertexAttribArray = (PFNGLDISABLEVERTEXATTRIBARRAYPROC) ptr;
    ptr = getprocaddress ("glEnableVertexAttribArray");
    if (ptr) glcorewEnableVertexAttribArray = (PFNGLENABLEVERTEXATTRIBARRAYPROC) ptr;
    ptr = getprocaddress ("glGetActiveAttrib");
    if (ptr) glcorewGetActiveAttrib = (PFNGLGETACTIVEATTRIBPROC) ptr;
    ptr = getprocaddress ("glGetActiveUniform");
    if (ptr) glcorewGetActiveUniform = (PFNGLGETACTIVEUNIFORMPROC) ptr;
    ptr = getprocaddress ("glGetAttachedShaders");
    if (ptr) glcorewGetAttachedShaders = (PFNGLGETATTACHEDSHADERSPROC) ptr;
    ptr = getprocaddress ("glGetAttribLocation");
    if (ptr) glcorewGetAttribLocation = (PFNGLGETATTRIBLOCATIONPROC) ptr;
    ptr = getprocaddress ("glGetProgramiv");
    if (ptr) glcorewGetProgramiv = (PFNGLGETPROGRAMIVPROC) ptr;
    ptr = getprocaddress ("glGetProgramInfoLog");
    if (ptr) glcorewGetProgramInfoLog = (PFNGLGETPROGRAMINFOLOGPROC) ptr;
    ptr = getprocaddress ("glGetShaderiv");
    if (ptr) glcorewGetShaderiv = (PFNGLGETSHADERIVPROC) ptr;
    ptr = getprocaddress ("glGetShaderInfoLog");
    if (ptr) glcorewGetShaderInfoLog = (PFNGLGETSHADERINFOLOGPROC) ptr;
    ptr = getprocaddress ("glGetShaderSource");
    if (ptr) glcorewGetShaderSource = (PFNGLGETSHADERSOURCEPROC) ptr;
    ptr = getprocaddress ("glGetUniformLocation");
    if (ptr) glcorewGetUniformLocation = (PFNGLGETUNIFORMLOCATIONPROC) ptr;
    ptr = getprocaddress ("glGetUniformfv");
    if (ptr) glcorewGetUniformfv = (PFNGLGETUNIFORMFVPROC) ptr;
    ptr = getprocaddress ("glGetUniformiv");
    if (ptr) glcorewGetUniformiv = (PFNGLGETUNIFORMIVPROC) ptr;
    ptr = getprocaddress ("glGetVertexAttribdv");
    if (ptr) glcorewGetVertexAttribdv = (PFNGLGETVERTEXATTRIBDVPROC) ptr;
    ptr = getprocaddress ("glGetVertexAttribfv");
    if (ptr) glcorewGetVertexAttribfv = (PFNGLGETVERTEXATTRIBFVPROC) ptr;
    ptr = getprocaddress ("glGetVertexAttribiv");
    if (ptr) glcorewGetVertexAttribiv = (PFNGLGETVERTEXATTRIBIVPROC) ptr;
    ptr = getprocaddress ("glGetVertexAttribPointerv");
    if (ptr) glcorewGetVertexAttribPointerv = (PFNGLGETVERTEXATTRIBPOINTERVPROC) ptr;
    ptr = getprocaddress ("glIsProgram");
    if (ptr) glcorewIsProgram = (PFNGLISPROGRAMPROC) ptr;
    ptr = getprocaddress ("glIsShader");
    if (ptr) glcorewIsShader = (PFNGLISSHADERPROC) ptr;
    ptr = getprocaddress ("glLinkProgram");
    if (ptr) glcorewLinkProgram = (PFNGLLINKPROGRAMPROC) ptr;
    ptr = getprocaddress ("glShaderSource");
    if (ptr) glcorewShaderSource = (PFNGLSHADERSOURCEPROC) ptr;
    ptr = getprocaddress ("glUseProgram");
    if (ptr) glcorewUseProgram = (PFNGLUSEPROGRAMPROC) ptr;
    ptr = getprocaddress ("glUniform1f");
    if (ptr) glcorewUniform1f = (PFNGLUNIFORM1FPROC) ptr;
    ptr = getprocaddress ("glUniform2f");
    if (ptr) glcorewUniform2f = (PFNGLUNIFORM2FPROC) ptr;
    ptr = getprocaddress ("glUniform3f");
    if (ptr) glcorewUniform3f = (PFNGLUNIFORM3FPROC) ptr;
    ptr = getprocaddress ("glUniform4f");
    if (ptr) glcorewUniform4f = (PFNGLUNIFORM4FPROC) ptr;
    ptr = getprocaddress ("glUniform1i");
    if (ptr) glcorewUniform1i = (PFNGLUNIFORM1IPROC) ptr;
    ptr = getprocaddress ("glUniform2i");
    if (ptr) glcorewUniform2i = (PFNGLUNIFORM2IPROC) ptr;
    ptr = getprocaddress ("glUniform3i");
    if (ptr) glcorewUniform3i = (PFNGLUNIFORM3IPROC) ptr;
    ptr = getprocaddress ("glUniform4i");
    if (ptr) glcorewUniform4i = (PFNGLUNIFORM4IPROC) ptr;
    ptr = getprocaddress ("glUniform1fv");
    if (ptr) glcorewUniform1fv = (PFNGLUNIFORM1FVPROC) ptr;
    ptr = getprocaddress ("glUniform2fv");
    if (ptr) glcorewUniform2fv = (PFNGLUNIFORM2FVPROC) ptr;
    ptr = getprocaddress ("glUniform3fv");
    if (ptr) glcorewUniform3fv = (PFNGLUNIFORM3FVPROC) ptr;
    ptr = getprocaddress ("glUniform4fv");
    if (ptr) glcorewUniform4fv = (PFNGLUNIFORM4FVPROC) ptr;
    ptr = getprocaddress ("glUniform1iv");
    if (ptr) glcorewUniform1iv = (PFNGLUNIFORM1IVPROC) ptr;
    ptr = getprocaddress ("glUniform2iv");
    if (ptr) glcorewUniform2iv = (PFNGLUNIFORM2IVPROC) ptr;
    ptr = getprocaddress ("glUniform3iv");
    if (ptr) glcorewUniform3iv = (PFNGLUNIFORM3IVPROC) ptr;
    ptr = getprocaddress ("glUniform4iv");
    if (ptr) glcorewUniform4iv = (PFNGLUNIFORM4IVPROC) ptr;
    ptr = getprocaddress ("glUniformMatrix2fv");
    if (ptr) glcorewUniformMatrix2fv = (PFNGLUNIFORMMATRIX2FVPROC) ptr;
    ptr = getprocaddress ("glUniformMatrix3fv");
    if (ptr) glcorewUniformMatrix3fv = (PFNGLUNIFORMMATRIX3FVPROC) ptr;
    ptr = getprocaddress ("glUniformMatrix4fv");
    if (ptr) glcorewUniformMatrix4fv = (PFNGLUNIFORMMATRIX4FVPROC) ptr;
    ptr = getprocaddress ("glValidateProgram");
    if (ptr) glcorewValidateProgram = (PFNGLVALIDATEPROGRAMPROC) ptr;
    ptr = getprocaddress ("glVertexAttrib1d");
    if (ptr) glcorewVertexAttrib1d = (PFNGLVERTEXATTRIB1DPROC) ptr;
    ptr = getprocaddress ("glVertexAttrib1dv");
    if (ptr) glcorewVertexAttrib1dv = (PFNGLVERTEXATTRIB1DVPROC) ptr;
    ptr = getprocaddress ("glVertexAttrib1f");
    if (ptr) glcorewVertexAttrib1f = (PFNGLVERTEXATTRIB1FPROC) ptr;
    ptr = getprocaddress ("glVertexAttrib1fv");
    if (ptr) glcorewVertexAttrib1fv = (PFNGLVERTEXATTRIB1FVPROC) ptr;
    ptr = getprocaddress ("glVertexAttrib1s");
    if (ptr) glcorewVertexAttrib1s = (PFNGLVERTEXATTRIB1SPROC) ptr;
    ptr = getprocaddress ("glVertexAttrib1sv");
    if (ptr) glcorewVertexAttrib1sv = (PFNGLVERTEXATTRIB1SVPROC) ptr;
    ptr = getprocaddress ("glVertexAttrib2d");
    if (ptr) glcorewVertexAttrib2d = (PFNGLVERTEXATTRIB2DPROC) ptr;
    ptr = getprocaddress ("glVertexAttrib2dv");
    if (ptr) glcorewVertexAttrib2dv = (PFNGLVERTEXATTRIB2DVPROC) ptr;
    ptr = getprocaddress ("glVertexAttrib2f");
    if (ptr) glcorewVertexAttrib2f = (PFNGLVERTEXATTRIB2FPROC) ptr;
    ptr = getprocaddress ("glVertexAttrib2fv");
    if (ptr) glcorewVertexAttrib2fv = (PFNGLVERTEXATTRIB2FVPROC) ptr;
    ptr = getprocaddress ("glVertexAttrib2s");
    if (ptr) glcorewVertexAttrib2s = (PFNGLVERTEXATTRIB2SPROC) ptr;
    ptr = getprocaddress ("glVertexAttrib2sv");
    if (ptr) glcorewVertexAttrib2sv = (PFNGLVERTEXATTRIB2SVPROC) ptr;
    ptr = getprocaddress ("glVertexAttrib3d");
    if (ptr) glcorewVertexAttrib3d = (PFNGLVERTEXATTRIB3DPROC) ptr;
    ptr = getprocaddress ("glVertexAttrib3dv");
    if (ptr) glcorewVertexAttrib3dv = (PFNGLVERTEXATTRIB3DVPROC) ptr;
    ptr = getprocaddress ("glVertexAttrib3f");
    if (ptr) glcorewVertexAttrib3f = (PFNGLVERTEXATTRIB3FPROC) ptr;
    ptr = getprocaddress ("glVertexAttrib3fv");
    if (ptr) glcorewVertexAttrib3fv = (PFNGLVERTEXATTRIB3FVPROC) ptr;
    ptr = getprocaddress ("glVertexAttrib3s");
    if (ptr) glcorewVertexAttrib3s = (PFNGLVERTEXATTRIB3SPROC) ptr;
    ptr = getprocaddress ("glVertexAttrib3sv");
    if (ptr) glcorewVertexAttrib3sv = (PFNGLVERTEXATTRIB3SVPROC) ptr;
    ptr = getprocaddress ("glVertexAttrib4Nbv");
    if (ptr) glcorewVertexAttrib4Nbv = (PFNGLVERTEXATTRIB4NBVPROC) ptr;
    ptr = getprocaddress ("glVertexAttrib4Niv");
    if (ptr) glcorewVertexAttrib4Niv = (PFNGLVERTEXATTRIB4NIVPROC) ptr;
    ptr = getprocaddress ("glVertexAttrib4Nsv");
    if (ptr) glcorewVertexAttrib4Nsv = (PFNGLVERTEXATTRIB4NSVPROC) ptr;
    ptr = getprocaddress ("glVertexAttrib4Nub");
    if (ptr) glcorewVertexAttrib4Nub = (PFNGLVERTEXATTRIB4NUBPROC) ptr;
    ptr = getprocaddress ("glVertexAttrib4Nubv");
    if (ptr) glcorewVertexAttrib4Nubv = (PFNGLVERTEXATTRIB4NUBVPROC) ptr;
    ptr = getprocaddress ("glVertexAttrib4Nuiv");
    if (ptr) glcorewVertexAttrib4Nuiv = (PFNGLVERTEXATTRIB4NUIVPROC) ptr;
    ptr = getprocaddress ("glVertexAttrib4Nusv");
    if (ptr) glcorewVertexAttrib4Nusv = (PFNGLVERTEXATTRIB4NUSVPROC) ptr;
    ptr = getprocaddress ("glVertexAttrib4bv");
    if (ptr) glcorewVertexAttrib4bv = (PFNGLVERTEXATTRIB4BVPROC) ptr;
    ptr = getprocaddress ("glVertexAttrib4d");
    if (ptr) glcorewVertexAttrib4d = (PFNGLVERTEXATTRIB4DPROC) ptr;
    ptr = getprocaddress ("glVertexAttrib4dv");
    if (ptr) glcorewVertexAttrib4dv = (PFNGLVERTEXATTRIB4DVPROC) ptr;
    ptr = getprocaddress ("glVertexAttrib4f");
    if (ptr) glcorewVertexAttrib4f = (PFNGLVERTEXATTRIB4FPROC) ptr;
    ptr = getprocaddress ("glVertexAttrib4fv");
    if (ptr) glcorewVertexAttrib4fv = (PFNGLVERTEXATTRIB4FVPROC) ptr;
    ptr = getprocaddress ("glVertexAttrib4iv");
    if (ptr) glcorewVertexAttrib4iv = (PFNGLVERTEXATTRIB4IVPROC) ptr;
    ptr = getprocaddress ("glVertexAttrib4s");
    if (ptr) glcorewVertexAttrib4s = (PFNGLVERTEXATTRIB4SPROC) ptr;
    ptr = getprocaddress ("glVertexAttrib4sv");
    if (ptr) glcorewVertexAttrib4sv = (PFNGLVERTEXATTRIB4SVPROC) ptr;
    ptr = getprocaddress ("glVertexAttrib4ubv");
    if (ptr) glcorewVertexAttrib4ubv = (PFNGLVERTEXATTRIB4UBVPROC) ptr;
    ptr = getprocaddress ("glVertexAttrib4uiv");
    if (ptr) glcorewVertexAttrib4uiv = (PFNGLVERTEXATTRIB4UIVPROC) ptr;
    ptr = getprocaddress ("glVertexAttrib4usv");
    if (ptr) glcorewVertexAttrib4usv = (PFNGLVERTEXATTRIB4USVPROC) ptr;
    ptr = getprocaddress ("glVertexAttribPointer");
    if (ptr) glcorewVertexAttribPointer = (PFNGLVERTEXATTRIBPOINTERPROC) ptr;
    ptr = getprocaddress ("glUniformMatrix2x3fv");
    if (ptr) glcorewUniformMatrix2x3fv = (PFNGLUNIFORMMATRIX2X3FVPROC) ptr;
    ptr = getprocaddress ("glUniformMatrix3x2fv");
    if (ptr) glcorewUniformMatrix3x2fv = (PFNGLUNIFORMMATRIX3X2FVPROC) ptr;
    ptr = getprocaddress ("glUniformMatrix2x4fv");
    if (ptr) glcorewUniformMatrix2x4fv = (PFNGLUNIFORMMATRIX2X4FVPROC) ptr;
    ptr = getprocaddress ("glUniformMatrix4x2fv");
    if (ptr) glcorewUniformMatrix4x2fv = (PFNGLUNIFORMMATRIX4X2FVPROC) ptr;
    ptr = getprocaddress ("glUniformMatrix3x4fv");
    if (ptr) glcorewUniformMatrix3x4fv = (PFNGLUNIFORMMATRIX3X4FVPROC) ptr;
    ptr = getprocaddress ("glUniformMatrix4x3fv");
    if (ptr) glcorewUniformMatrix4x3fv = (PFNGLUNIFORMMATRIX4X3FVPROC) ptr;
    ptr = getprocaddress ("glColorMaski");
    if (ptr) glcorewColorMaski = (PFNGLCOLORMASKIPROC) ptr;
    ptr = getprocaddress ("glGetBooleani_v");
    if (ptr) glcorewGetBooleani_v = (PFNGLGETBOOLEANI_VPROC) ptr;
    ptr = getprocaddress ("glGetIntegeri_v");
    if (ptr) glcorewGetIntegeri_v = (PFNGLGETINTEGERI_VPROC) ptr;
    ptr = getprocaddress ("glEnablei");
    if (ptr) glcorewEnablei = (PFNGLENABLEIPROC) ptr;
    ptr = getprocaddress ("glDisablei");
    if (ptr) glcorewDisablei = (PFNGLDISABLEIPROC) ptr;
    ptr = getprocaddress ("glIsEnabledi");
    if (ptr) glcorewIsEnabledi = (PFNGLISENABLEDIPROC) ptr;
    ptr = getprocaddress ("glBeginTransformFeedback");
    if (ptr) glcorewBeginTransformFeedback = (PFNGLBEGINTRANSFORMFEEDBACKPROC) ptr;
    ptr = getprocaddress ("glEndTransformFeedback");
    if (ptr) glcorewEndTransformFeedback = (PFNGLENDTRANSFORMFEEDBACKPROC) ptr;
    ptr = getprocaddress ("glBindBufferRange");
    if (ptr) glcorewBindBufferRange = (PFNGLBINDBUFFERRANGEPROC) ptr;
    ptr = getprocaddress ("glBindBufferBase");
    if (ptr) glcorewBindBufferBase = (PFNGLBINDBUFFERBASEPROC) ptr;
    ptr = getprocaddress ("glTransformFeedbackVaryings");
    if (ptr) glcorewTransformFeedbackVaryings = (PFNGLTRANSFORMFEEDBACKVARYINGSPROC) ptr;
    ptr = getprocaddress ("glGetTransformFeedbackVarying");
    if (ptr) glcorewGetTransformFeedbackVarying = (PFNGLGETTRANSFORMFEEDBACKVARYINGPROC) ptr;
    ptr = getprocaddress ("glClampColor");
    if (ptr) glcorewClampColor = (PFNGLCLAMPCOLORPROC) ptr;
    ptr = getprocaddress ("glBeginConditionalRender");
    if (ptr) glcorewBeginConditionalRender = (PFNGLBEGINCONDITIONALRENDERPROC) ptr;
    ptr = getprocaddress ("glEndConditionalRender");
    if (ptr) glcorewEndConditionalRender = (PFNGLENDCONDITIONALRENDERPROC) ptr;
    ptr = getprocaddress ("glVertexAttribIPointer");
    if (ptr) glcorewVertexAttribIPointer = (PFNGLVERTEXATTRIBIPOINTERPROC) ptr;
    ptr = getprocaddress ("glGetVertexAttribIiv");
    if (ptr) glcorewGetVertexAttribIiv = (PFNGLGETVERTEXATTRIBIIVPROC) ptr;
    ptr = getprocaddress ("glGetVertexAttribIuiv");
    if (ptr) glcorewGetVertexAttribIuiv = (PFNGLGETVERTEXATTRIBIUIVPROC) ptr;
    ptr = getprocaddress ("glVertexAttribI1i");
    if (ptr) glcorewVertexAttribI1i = (PFNGLVERTEXATTRIBI1IPROC) ptr;
    ptr = getprocaddress ("glVertexAttribI2i");
    if (ptr) glcorewVertexAttribI2i = (PFNGLVERTEXATTRIBI2IPROC) ptr;
    ptr = getprocaddress ("glVertexAttribI3i");
    if (ptr) glcorewVertexAttribI3i = (PFNGLVERTEXATTRIBI3IPROC) ptr;
    ptr = getprocaddress ("glVertexAttribI4i");
    if (ptr) glcorewVertexAttribI4i = (PFNGLVERTEXATTRIBI4IPROC) ptr;
    ptr = getprocaddress ("glVertexAttribI1ui");
    if (ptr) glcorewVertexAttribI1ui = (PFNGLVERTEXATTRIBI1UIPROC) ptr;
    ptr = getprocaddress ("glVertexAttribI2ui");
    if (ptr) glcorewVertexAttribI2ui = (PFNGLVERTEXATTRIBI2UIPROC) ptr;
    ptr = getprocaddress ("glVertexAttribI3ui");
    if (ptr) glcorewVertexAttribI3ui = (PFNGLVERTEXATTRIBI3UIPROC) ptr;
    ptr = getprocaddress ("glVertexAttribI4ui");
    if (ptr) glcorewVertexAttribI4ui = (PFNGLVERTEXATTRIBI4UIPROC) ptr;
    ptr = getprocaddress ("glVertexAttribI1iv");
    if (ptr) glcorewVertexAttribI1iv = (PFNGLVERTEXATTRIBI1IVPROC) ptr;
    ptr = getprocaddress ("glVertexAttribI2iv");
    if (ptr) glcorewVertexAttribI2iv = (PFNGLVERTEXATTRIBI2IVPROC) ptr;
    ptr = getprocaddress ("glVertexAttribI3iv");
    if (ptr) glcorewVertexAttribI3iv = (PFNGLVERTEXATTRIBI3IVPROC) ptr;
    ptr = getprocaddress ("glVertexAttribI4iv");
    if (ptr) glcorewVertexAttribI4iv = (PFNGLVERTEXATTRIBI4IVPROC) ptr;
    ptr = getprocaddress ("glVertexAttribI1uiv");
    if (ptr) glcorewVertexAttribI1uiv = (PFNGLVERTEXATTRIBI1UIVPROC) ptr;
    ptr = getprocaddress ("glVertexAttribI2uiv");
    if (ptr) glcorewVertexAttribI2uiv = (PFNGLVERTEXATTRIBI2UIVPROC) ptr;
    ptr = getprocaddress ("glVertexAttribI3uiv");
    if (ptr) glcorewVertexAttribI3uiv = (PFNGLVERTEXATTRIBI3UIVPROC) ptr;
    ptr = getprocaddress ("glVertexAttribI4uiv");
    if (ptr) glcorewVertexAttribI4uiv = (PFNGLVERTEXATTRIBI4UIVPROC) ptr;
    ptr = getprocaddress ("glVertexAttribI4bv");
    if (ptr) glcorewVertexAttribI4bv = (PFNGLVERTEXATTRIBI4BVPROC) ptr;
    ptr = getprocaddress ("glVertexAttribI4sv");
    if (ptr) glcorewVertexAttribI4sv = (PFNGLVERTEXATTRIBI4SVPROC) ptr;
    ptr = getprocaddress ("glVertexAttribI4ubv");
    if (ptr) glcorewVertexAttribI4ubv = (PFNGLVERTEXATTRIBI4UBVPROC) ptr;
    ptr = getprocaddress ("glVertexAttribI4usv");
    if (ptr) glcorewVertexAttribI4usv = (PFNGLVERTEXATTRIBI4USVPROC) ptr;
    ptr = getprocaddress ("glGetUniformuiv");
    if (ptr) glcorewGetUniformuiv = (PFNGLGETUNIFORMUIVPROC) ptr;
    ptr = getprocaddress ("glBindFragDataLocation");
    if (ptr) glcorewBindFragDataLocation = (PFNGLBINDFRAGDATALOCATIONPROC) ptr;
    ptr = getprocaddress ("glGetFragDataLocation");
    if (ptr) glcorewGetFragDataLocation = (PFNGLGETFRAGDATALOCATIONPROC) ptr;
    ptr = getprocaddress ("glUniform1ui");
    if (ptr) glcorewUniform1ui = (PFNGLUNIFORM1UIPROC) ptr;
    ptr = getprocaddress ("glUniform2ui");
    if (ptr) glcorewUniform2ui = (PFNGLUNIFORM2UIPROC) ptr;
    ptr = getprocaddress ("glUniform3ui");
    if (ptr) glcorewUniform3ui = (PFNGLUNIFORM3UIPROC) ptr;
    ptr = getprocaddress ("glUniform4ui");
    if (ptr) glcorewUniform4ui = (PFNGLUNIFORM4UIPROC) ptr;
    ptr = getprocaddress ("glUniform1uiv");
    if (ptr) glcorewUniform1uiv = (PFNGLUNIFORM1UIVPROC) ptr;
    ptr = getprocaddress ("glUniform2uiv");
    if (ptr) glcorewUniform2uiv = (PFNGLUNIFORM2UIVPROC) ptr;
    ptr = getprocaddress ("glUniform3uiv");
    if (ptr) glcorewUniform3uiv = (PFNGLUNIFORM3UIVPROC) ptr;
    ptr = getprocaddress ("glUniform4uiv");
    if (ptr) glcorewUniform4uiv = (PFNGLUNIFORM4UIVPROC) ptr;
    ptr = getprocaddress ("glTexParameterIiv");
    if (ptr) glcorewTexParameterIiv = (PFNGLTEXPARAMETERIIVPROC) ptr;
    ptr = getprocaddress ("glTexParameterIuiv");
    if (ptr) glcorewTexParameterIuiv = (PFNGLTEXPARAMETERIUIVPROC) ptr;
    ptr = getprocaddress ("glGetTexParameterIiv");
    if (ptr) glcorewGetTexParameterIiv = (PFNGLGETTEXPARAMETERIIVPROC) ptr;
    ptr = getprocaddress ("glGetTexParameterIuiv");
    if (ptr) glcorewGetTexParameterIuiv = (PFNGLGETTEXPARAMETERIUIVPROC) ptr;
    ptr = getprocaddress ("glClearBufferiv");
    if (ptr) glcorewClearBufferiv = (PFNGLCLEARBUFFERIVPROC) ptr;
    ptr = getprocaddress ("glClearBufferuiv");
    if (ptr) glcorewClearBufferuiv = (PFNGLCLEARBUFFERUIVPROC) ptr;
    ptr = getprocaddress ("glClearBufferfv");
    if (ptr) glcorewClearBufferfv = (PFNGLCLEARBUFFERFVPROC) ptr;
    ptr = getprocaddress ("glClearBufferfi");
    if (ptr) glcorewClearBufferfi = (PFNGLCLEARBUFFERFIPROC) ptr;
    ptr = getprocaddress ("glGetStringi");
    if (ptr) glcorewGetStringi = (PFNGLGETSTRINGIPROC) ptr;
    ptr = getprocaddress ("glIsRenderbuffer");
    if (ptr) glcorewIsRenderbuffer = (PFNGLISRENDERBUFFERPROC) ptr;
    ptr = getprocaddress ("glBindRenderbuffer");
    if (ptr) glcorewBindRenderbuffer = (PFNGLBINDRENDERBUFFERPROC) ptr;
    ptr = getprocaddress ("glDeleteRenderbuffers");
    if (ptr) glcorewDeleteRenderbuffers = (PFNGLDELETERENDERBUFFERSPROC) ptr;
    ptr = getprocaddress ("glGenRenderbuffers");
    if (ptr) glcorewGenRenderbuffers = (PFNGLGENRENDERBUFFERSPROC) ptr;
    ptr = getprocaddress ("glRenderbufferStorage");
    if (ptr) glcorewRenderbufferStorage = (PFNGLRENDERBUFFERSTORAGEPROC) ptr;
    ptr = getprocaddress ("glGetRenderbufferParameteriv");
    if (ptr) glcorewGetRenderbufferParameteriv = (PFNGLGETRENDERBUFFERPARAMETERIVPROC) ptr;
    ptr = getprocaddress ("glIsFramebuffer");
    if (ptr) glcorewIsFramebuffer = (PFNGLISFRAMEBUFFERPROC) ptr;
    ptr = getprocaddress ("glBindFramebuffer");
    if (ptr) glcorewBindFramebuffer = (PFNGLBINDFRAMEBUFFERPROC) ptr;
    ptr = getprocaddress ("glDeleteFramebuffers");
    if (ptr) glcorewDeleteFramebuffers = (PFNGLDELETEFRAMEBUFFERSPROC) ptr;
    ptr = getprocaddress ("glGenFramebuffers");
    if (ptr) glcorewGenFramebuffers = (PFNGLGENFRAMEBUFFERSPROC) ptr;
    ptr = getprocaddress ("glCheckFramebufferStatus");
    if (ptr) glcorewCheckFramebufferStatus = (PFNGLCHECKFRAMEBUFFERSTATUSPROC) ptr;
    ptr = getprocaddress ("glFramebufferTexture1D");
    if (ptr) glcorewFramebufferTexture1D = (PFNGLFRAMEBUFFERTEXTURE1DPROC) ptr;
    ptr = getprocaddress ("glFramebufferTexture2D");
    if (ptr) glcorewFramebufferTexture2D = (PFNGLFRAMEBUFFERTEXTURE2DPROC) ptr;
    ptr = getprocaddress ("glFramebufferTexture3D");
    if (ptr) glcorewFramebufferTexture3D = (PFNGLFRAMEBUFFERTEXTURE3DPROC) ptr;
    ptr = getprocaddress ("glFramebufferRenderbuffer");
    if (ptr) glcorewFramebufferRenderbuffer = (PFNGLFRAMEBUFFERRENDERBUFFERPROC) ptr;
    ptr = getprocaddress ("glGetFramebufferAttachmentParameteriv");
    if (ptr) glcorewGetFramebufferAttachmentParameteriv = (PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC) ptr;
    ptr = getprocaddress ("glGenerateMipmap");
    if (ptr) glcorewGenerateMipmap = (PFNGLGENERATEMIPMAPPROC) ptr;
    ptr = getprocaddress ("glBlitFramebuffer");
    if (ptr) glcorewBlitFramebuffer = (PFNGLBLITFRAMEBUFFERPROC) ptr;
    ptr = getprocaddress ("glRenderbufferStorageMultisample");
    if (ptr) glcorewRenderbufferStorageMultisample = (PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC) ptr;
    ptr = getprocaddress ("glFramebufferTextureLayer");
    if (ptr) glcorewFramebufferTextureLayer = (PFNGLFRAMEBUFFERTEXTURELAYERPROC) ptr;
    ptr = getprocaddress ("glMapBufferRange");
    if (ptr) glcorewMapBufferRange = (PFNGLMAPBUFFERRANGEPROC) ptr;
    ptr = getprocaddress ("glFlushMappedBufferRange");
    if (ptr) glcorewFlushMappedBufferRange = (PFNGLFLUSHMAPPEDBUFFERRANGEPROC) ptr;
    ptr = getprocaddress ("glBindVertexArray");
    if (ptr) glcorewBindVertexArray = (PFNGLBINDVERTEXARRAYPROC) ptr;
    ptr = getprocaddress ("glDeleteVertexArrays");
    if (ptr) glcorewDeleteVertexArrays = (PFNGLDELETEVERTEXARRAYSPROC) ptr;
    ptr = getprocaddress ("glGenVertexArrays");
    if (ptr) glcorewGenVertexArrays = (PFNGLGENVERTEXARRAYSPROC) ptr;
    ptr = getprocaddress ("glIsVertexArray");
    if (ptr) glcorewIsVertexArray = (PFNGLISVERTEXARRAYPROC) ptr;
    ptr = getprocaddress ("glDrawArraysInstanced");
    if (ptr) glcorewDrawArraysInstanced = (PFNGLDRAWARRAYSINSTANCEDPROC) ptr;
    ptr = getprocaddress ("glDrawElementsInstanced");
    if (ptr) glcorewDrawElementsInstanced = (PFNGLDRAWELEMENTSINSTANCEDPROC) ptr;
    ptr = getprocaddress ("glTexBuffer");
    if (ptr) glcorewTexBuffer = (PFNGLTEXBUFFERPROC) ptr;
    ptr = getprocaddress ("glPrimitiveRestartIndex");
    if (ptr) glcorewPrimitiveRestartIndex = (PFNGLPRIMITIVERESTARTINDEXPROC) ptr;
    ptr = getprocaddress ("glCopyBufferSubData");
    if (ptr) glcorewCopyBufferSubData = (PFNGLCOPYBUFFERSUBDATAPROC) ptr;
    ptr = getprocaddress ("glGetUniformIndices");
    if (ptr) glcorewGetUniformIndices = (PFNGLGETUNIFORMINDICESPROC) ptr;
    ptr = getprocaddress ("glGetActiveUniformsiv");
    if (ptr) glcorewGetActiveUniformsiv = (PFNGLGETACTIVEUNIFORMSIVPROC) ptr;
    ptr = getprocaddress ("glGetActiveUniformName");
    if (ptr) glcorewGetActiveUniformName = (PFNGLGETACTIVEUNIFORMNAMEPROC) ptr;
    ptr = getprocaddress ("glGetUniformBlockIndex");
    if (ptr) glcorewGetUniformBlockIndex = (PFNGLGETUNIFORMBLOCKINDEXPROC) ptr;
    ptr = getprocaddress ("glGetActiveUniformBlockiv");
    if (ptr) glcorewGetActiveUniformBlockiv = (PFNGLGETACTIVEUNIFORMBLOCKIVPROC) ptr;
    ptr = getprocaddress ("glGetActiveUniformBlockName");
    if (ptr) glcorewGetActiveUniformBlockName = (PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC) ptr;
    ptr = getprocaddress ("glUniformBlockBinding");
    if (ptr) glcorewUniformBlockBinding = (PFNGLUNIFORMBLOCKBINDINGPROC) ptr;
    ptr = getprocaddress ("glDrawElementsBaseVertex");
    if (ptr) glcorewDrawElementsBaseVertex = (PFNGLDRAWELEMENTSBASEVERTEXPROC) ptr;
    ptr = getprocaddress ("glDrawRangeElementsBaseVertex");
    if (ptr) glcorewDrawRangeElementsBaseVertex = (PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC) ptr;
    ptr = getprocaddress ("glDrawElementsInstancedBaseVertex");
    if (ptr) glcorewDrawElementsInstancedBaseVertex = (PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC) ptr;
    ptr = getprocaddress ("glMultiDrawElementsBaseVertex");
    if (ptr) glcorewMultiDrawElementsBaseVertex = (PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC) ptr;
    ptr = getprocaddress ("glProvokingVertex");
    if (ptr) glcorewProvokingVertex = (PFNGLPROVOKINGVERTEXPROC) ptr;
    ptr = getprocaddress ("glFenceSync");
    if (ptr) glcorewFenceSync = (PFNGLFENCESYNCPROC) ptr;
    ptr = getprocaddress ("glIsSync");
    if (ptr) glcorewIsSync = (PFNGLISSYNCPROC) ptr;
    ptr = getprocaddress ("glDeleteSync");
    if (ptr) glcorewDeleteSync = (PFNGLDELETESYNCPROC) ptr;
    ptr = getprocaddress ("glClientWaitSync");
    if (ptr) glcorewClientWaitSync = (PFNGLCLIENTWAITSYNCPROC) ptr;
    ptr = getprocaddress ("glWaitSync");
    if (ptr) glcorewWaitSync = (PFNGLWAITSYNCPROC) ptr;
    ptr = getprocaddress ("glGetInteger64v");
    if (ptr) glcorewGetInteger64v = (PFNGLGETINTEGER64VPROC) ptr;
    ptr = getprocaddress ("glGetSynciv");
    if (ptr) glcorewGetSynciv = (PFNGLGETSYNCIVPROC) ptr;
    ptr = getprocaddress ("glGetInteger64i_v");
    if (ptr) glcorewGetInteger64i_v = (PFNGLGETINTEGER64I_VPROC) ptr;
    ptr = getprocaddress ("glGetBufferParameteri64v");
    if (ptr) glcorewGetBufferParameteri64v = (PFNGLGETBUFFERPARAMETERI64VPROC) ptr;
    ptr = getprocaddress ("glFramebufferTexture");
    if (ptr) glcorewFramebufferTexture = (PFNGLFRAMEBUFFERTEXTUREPROC) ptr;
    ptr = getprocaddress ("glTexImage2DMultisample");
    if (ptr) glcorewTexImage2DMultisample = (PFNGLTEXIMAGE2DMULTISAMPLEPROC) ptr;
    ptr = getprocaddress ("glTexImage3DMultisample");
    if (ptr) glcorewTexImage3DMultisample = (PFNGLTEXIMAGE3DMULTISAMPLEPROC) ptr;
    ptr = getprocaddress ("glGetMultisamplefv");
    if (ptr) glcorewGetMultisamplefv = (PFNGLGETMULTISAMPLEFVPROC) ptr;
    ptr = getprocaddress ("glSampleMaski");
    if (ptr) glcorewSampleMaski = (PFNGLSAMPLEMASKIPROC) ptr;
    ptr = getprocaddress ("glBindFragDataLocationIndexed");
    if (ptr) glcorewBindFragDataLocationIndexed = (PFNGLBINDFRAGDATALOCATIONINDEXEDPROC) ptr;
    ptr = getprocaddress ("glGetFragDataIndex");
    if (ptr) glcorewGetFragDataIndex = (PFNGLGETFRAGDATAINDEXPROC) ptr;
    ptr = getprocaddress ("glGenSamplers");
    if (ptr) glcorewGenSamplers = (PFNGLGENSAMPLERSPROC) ptr;
    ptr = getprocaddress ("glDeleteSamplers");
    if (ptr) glcorewDeleteSamplers = (PFNGLDELETESAMPLERSPROC) ptr;
    ptr = getprocaddress ("glIsSampler");
    if (ptr) glcorewIsSampler = (PFNGLISSAMPLERPROC) ptr;
    ptr = getprocaddress ("glBindSampler");
    if (ptr) glcorewBindSampler = (PFNGLBINDSAMPLERPROC) ptr;
    ptr = getprocaddress ("glSamplerParameteri");
    if (ptr) glcorewSamplerParameteri = (PFNGLSAMPLERPARAMETERIPROC) ptr;
    ptr = getprocaddress ("glSamplerParameteriv");
    if (ptr) glcorewSamplerParameteriv = (PFNGLSAMPLERPARAMETERIVPROC) ptr;
    ptr = getprocaddress ("glSamplerParameterf");
    if (ptr) glcorewSamplerParameterf = (PFNGLSAMPLERPARAMETERFPROC) ptr;
    ptr = getprocaddress ("glSamplerParameterfv");
    if (ptr) glcorewSamplerParameterfv = (PFNGLSAMPLERPARAMETERFVPROC) ptr;
    ptr = getprocaddress ("glSamplerParameterIiv");
    if (ptr) glcorewSamplerParameterIiv = (PFNGLSAMPLERPARAMETERIIVPROC) ptr;
    ptr = getprocaddress ("glSamplerParameterIuiv");
    if (ptr) glcorewSamplerParameterIuiv = (PFNGLSAMPLERPARAMETERIUIVPROC) ptr;
    ptr = getprocaddress ("glGetSamplerParameteriv");
    if (ptr) glcorewGetSamplerParameteriv = (PFNGLGETSAMPLERPARAMETERIVPROC) ptr;
    ptr = getprocaddress ("glGetSamplerParameterIiv");
    if (ptr) glcorewGetSamplerParameterIiv = (PFNGLGETSAMPLERPARAMETERIIVPROC) ptr;
    ptr = getprocaddress ("glGetSamplerParameterfv");
    if (ptr) glcorewGetSamplerParameterfv = (PFNGLGETSAMPLERPARAMETERFVPROC) ptr;
    ptr = getprocaddress ("glGetSamplerParameterIuiv");
    if (ptr) glcorewGetSamplerParameterIuiv = (PFNGLGETSAMPLERPARAMETERIUIVPROC) ptr;
    ptr = getprocaddress ("glQueryCounter");
    if (ptr) glcorewQueryCounter = (PFNGLQUERYCOUNTERPROC) ptr;
    ptr = getprocaddress ("glGetQueryObjecti64v");
    if (ptr) glcorewGetQueryObjecti64v = (PFNGLGETQUERYOBJECTI64VPROC) ptr;
    ptr = getprocaddress ("glGetQueryObjectui64v");
    if (ptr) glcorewGetQueryObjectui64v = (PFNGLGETQUERYOBJECTUI64VPROC) ptr;
    ptr = getprocaddress ("glVertexAttribDivisor");
    if (ptr) glcorewVertexAttribDivisor = (PFNGLVERTEXATTRIBDIVISORPROC) ptr;
    ptr = getprocaddress ("glVertexAttribP1ui");
    if (ptr) glcorewVertexAttribP1ui = (PFNGLVERTEXATTRIBP1UIPROC) ptr;
    ptr = getprocaddress ("glVertexAttribP1uiv");
    if (ptr) glcorewVertexAttribP1uiv = (PFNGLVERTEXATTRIBP1UIVPROC) ptr;
    ptr = getprocaddress ("glVertexAttribP2ui");
    if (ptr) glcorewVertexAttribP2ui = (PFNGLVERTEXATTRIBP2UIPROC) ptr;
    ptr = getprocaddress ("glVertexAttribP2uiv");
    if (ptr) glcorewVertexAttribP2uiv = (PFNGLVERTEXATTRIBP2UIVPROC) ptr;
    ptr = getprocaddress ("glVertexAttribP3ui");
    if (ptr) glcorewVertexAttribP3ui = (PFNGLVERTEXATTRIBP3UIPROC) ptr;
    ptr = getprocaddress ("glVertexAttribP3uiv");
    if (ptr) glcorewVertexAttribP3uiv = (PFNGLVERTEXATTRIBP3UIVPROC) ptr;
    ptr = getprocaddress ("glVertexAttribP4ui");
    if (ptr) glcorewVertexAttribP4ui = (PFNGLVERTEXATTRIBP4UIPROC) ptr;
    ptr = getprocaddress ("glVertexAttribP4uiv");
    if (ptr) glcorewVertexAttribP4uiv = (PFNGLVERTEXATTRIBP4UIVPROC) ptr;
    ptr = getprocaddress ("glMinSampleShading");
    if (ptr) glcorewMinSampleShading = (PFNGLMINSAMPLESHADINGPROC) ptr;
    ptr = getprocaddress ("glBlendEquationi");
    if (ptr) glcorewBlendEquationi = (PFNGLBLENDEQUATIONIPROC) ptr;
    ptr = getprocaddress ("glBlendEquationSeparatei");
    if (ptr) glcorewBlendEquationSeparatei = (PFNGLBLENDEQUATIONSEPARATEIPROC) ptr;
    ptr = getprocaddress ("glBlendFunci");
    if (ptr) glcorewBlendFunci = (PFNGLBLENDFUNCIPROC) ptr;
    ptr = getprocaddress ("glBlendFuncSeparatei");
    if (ptr) glcorewBlendFuncSeparatei = (PFNGLBLENDFUNCSEPARATEIPROC) ptr;
    ptr = getprocaddress ("glDrawArraysIndirect");
    if (ptr) glcorewDrawArraysIndirect = (PFNGLDRAWARRAYSINDIRECTPROC) ptr;
    ptr = getprocaddress ("glDrawElementsIndirect");
    if (ptr) glcorewDrawElementsIndirect = (PFNGLDRAWELEMENTSINDIRECTPROC) ptr;
    ptr = getprocaddress ("glUniform1d");
    if (ptr) glcorewUniform1d = (PFNGLUNIFORM1DPROC) ptr;
    ptr = getprocaddress ("glUniform2d");
    if (ptr) glcorewUniform2d = (PFNGLUNIFORM2DPROC) ptr;
    ptr = getprocaddress ("glUniform3d");
    if (ptr) glcorewUniform3d = (PFNGLUNIFORM3DPROC) ptr;
    ptr = getprocaddress ("glUniform4d");
    if (ptr) glcorewUniform4d = (PFNGLUNIFORM4DPROC) ptr;
    ptr = getprocaddress ("glUniform1dv");
    if (ptr) glcorewUniform1dv = (PFNGLUNIFORM1DVPROC) ptr;
    ptr = getprocaddress ("glUniform2dv");
    if (ptr) glcorewUniform2dv = (PFNGLUNIFORM2DVPROC) ptr;
    ptr = getprocaddress ("glUniform3dv");
    if (ptr) glcorewUniform3dv = (PFNGLUNIFORM3DVPROC) ptr;
    ptr = getprocaddress ("glUniform4dv");
    if (ptr) glcorewUniform4dv = (PFNGLUNIFORM4DVPROC) ptr;
    ptr = getprocaddress ("glUniformMatrix2dv");
    if (ptr) glcorewUniformMatrix2dv = (PFNGLUNIFORMMATRIX2DVPROC) ptr;
    ptr = getprocaddress ("glUniformMatrix3dv");
    if (ptr) glcorewUniformMatrix3dv = (PFNGLUNIFORMMATRIX3DVPROC) ptr;
    ptr = getprocaddress ("glUniformMatrix4dv");
    if (ptr) glcorewUniformMatrix4dv = (PFNGLUNIFORMMATRIX4DVPROC) ptr;
    ptr = getprocaddress ("glUniformMatrix2x3dv");
    if (ptr) glcorewUniformMatrix2x3dv = (PFNGLUNIFORMMATRIX2X3DVPROC) ptr;
    ptr = getprocaddress ("glUniformMatrix2x4dv");
    if (ptr) glcorewUniformMatrix2x4dv = (PFNGLUNIFORMMATRIX2X4DVPROC) ptr;
    ptr = getprocaddress ("glUniformMatrix3x2dv");
    if (ptr) glcorewUniformMatrix3x2dv = (PFNGLUNIFORMMATRIX3X2DVPROC) ptr;
    ptr = getprocaddress ("glUniformMatrix3x4dv");
    if (ptr) glcorewUniformMatrix3x4dv = (PFNGLUNIFORMMATRIX3X4DVPROC) ptr;
    ptr = getprocaddress ("glUniformMatrix4x2dv");
    if (ptr) glcorewUniformMatrix4x2dv = (PFNGLUNIFORMMATRIX4X2DVPROC) ptr;
    ptr = getprocaddress ("glUniformMatrix4x3dv");
    if (ptr) glcorewUniformMatrix4x3dv = (PFNGLUNIFORMMATRIX4X3DVPROC) ptr;
    ptr = getprocaddress ("glGetUniformdv");
    if (ptr) glcorewGetUniformdv = (PFNGLGETUNIFORMDVPROC) ptr;
    ptr = getprocaddress ("glGetSubroutineUniformLocation");
    if (ptr) glcorewGetSubroutineUniformLocation = (PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC) ptr;
    ptr = getprocaddress ("glGetSubroutineIndex");
    if (ptr) glcorewGetSubroutineIndex = (PFNGLGETSUBROUTINEINDEXPROC) ptr;
    ptr = getprocaddress ("glGetActiveSubroutineUniformiv");
    if (ptr) glcorewGetActiveSubroutineUniformiv = (PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC) ptr;
    ptr = getprocaddress ("glGetActiveSubroutineUniformName");
    if (ptr) glcorewGetActiveSubroutineUniformName = (PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC) ptr;
    ptr = getprocaddress ("glGetActiveSubroutineName");
    if (ptr) glcorewGetActiveSubroutineName = (PFNGLGETACTIVESUBROUTINENAMEPROC) ptr;
    ptr = getprocaddress ("glUniformSubroutinesuiv");
    if (ptr) glcorewUniformSubroutinesuiv = (PFNGLUNIFORMSUBROUTINESUIVPROC) ptr;
    ptr = getprocaddress ("glGetUniformSubroutineuiv");
    if (ptr) glcorewGetUniformSubroutineuiv = (PFNGLGETUNIFORMSUBROUTINEUIVPROC) ptr;
    ptr = getprocaddress ("glGetProgramStageiv");
    if (ptr) glcorewGetProgramStageiv = (PFNGLGETPROGRAMSTAGEIVPROC) ptr;
    ptr = getprocaddress ("glPatchParameteri");
    if (ptr) glcorewPatchParameteri = (PFNGLPATCHPARAMETERIPROC) ptr;
    ptr = getprocaddress ("glPatchParameterfv");
    if (ptr) glcorewPatchParameterfv = (PFNGLPATCHPARAMETERFVPROC) ptr;
    ptr = getprocaddress ("glBindTransformFeedback");
    if (ptr) glcorewBindTransformFeedback = (PFNGLBINDTRANSFORMFEEDBACKPROC) ptr;
    ptr = getprocaddress ("glDeleteTransformFeedbacks");
    if (ptr) glcorewDeleteTransformFeedbacks = (PFNGLDELETETRANSFORMFEEDBACKSPROC) ptr;
    ptr = getprocaddress ("glGenTransformFeedbacks");
    if (ptr) glcorewGenTransformFeedbacks = (PFNGLGENTRANSFORMFEEDBACKSPROC) ptr;
    ptr = getprocaddress ("glIsTransformFeedback");
    if (ptr) glcorewIsTransformFeedback = (PFNGLISTRANSFORMFEEDBACKPROC) ptr;
    ptr = getprocaddress ("glPauseTransformFeedback");
    if (ptr) glcorewPauseTransformFeedback = (PFNGLPAUSETRANSFORMFEEDBACKPROC) ptr;
    ptr = getprocaddress ("glResumeTransformFeedback");
    if (ptr) glcorewResumeTransformFeedback = (PFNGLRESUMETRANSFORMFEEDBACKPROC) ptr;
    ptr = getprocaddress ("glDrawTransformFeedback");
    if (ptr) glcorewDrawTransformFeedback = (PFNGLDRAWTRANSFORMFEEDBACKPROC) ptr;
    ptr = getprocaddress ("glDrawTransformFeedbackStream");
    if (ptr) glcorewDrawTransformFeedbackStream = (PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC) ptr;
    ptr = getprocaddress ("glBeginQueryIndexed");
    if (ptr) glcorewBeginQueryIndexed = (PFNGLBEGINQUERYINDEXEDPROC) ptr;
    ptr = getprocaddress ("glEndQueryIndexed");
    if (ptr) glcorewEndQueryIndexed = (PFNGLENDQUERYINDEXEDPROC) ptr;
    ptr = getprocaddress ("glGetQueryIndexediv");
    if (ptr) glcorewGetQueryIndexediv = (PFNGLGETQUERYINDEXEDIVPROC) ptr;
    ptr = getprocaddress ("glReleaseShaderCompiler");
    if (ptr) glcorewReleaseShaderCompiler = (PFNGLRELEASESHADERCOMPILERPROC) ptr;
    ptr = getprocaddress ("glShaderBinary");
    if (ptr) glcorewShaderBinary = (PFNGLSHADERBINARYPROC) ptr;
    ptr = getprocaddress ("glGetShaderPrecisionFormat");
    if (ptr) glcorewGetShaderPrecisionFormat = (PFNGLGETSHADERPRECISIONFORMATPROC) ptr;
    ptr = getprocaddress ("glDepthRangef");
    if (ptr) glcorewDepthRangef = (PFNGLDEPTHRANGEFPROC) ptr;
    ptr = getprocaddress ("glClearDepthf");
    if (ptr) glcorewClearDepthf = (PFNGLCLEARDEPTHFPROC) ptr;
    ptr = getprocaddress ("glGetProgramBinary");
    if (ptr) glcorewGetProgramBinary = (PFNGLGETPROGRAMBINARYPROC) ptr;
    ptr = getprocaddress ("glProgramBinary");
    if (ptr) glcorewProgramBinary = (PFNGLPROGRAMBINARYPROC) ptr;
    ptr = getprocaddress ("glProgramParameteri");
    if (ptr) glcorewProgramParameteri = (PFNGLPROGRAMPARAMETERIPROC) ptr;
    ptr = getprocaddress ("glUseProgramStages");
    if (ptr) glcorewUseProgramStages = (PFNGLUSEPROGRAMSTAGESPROC) ptr;
    ptr = getprocaddress ("glActiveShaderProgram");
    if (ptr) glcorewActiveShaderProgram = (PFNGLACTIVESHADERPROGRAMPROC) ptr;
    ptr = getprocaddress ("glCreateShaderProgramv");
    if (ptr) glcorewCreateShaderProgramv = (PFNGLCREATESHADERPROGRAMVPROC) ptr;
    ptr = getprocaddress ("glBindProgramPipeline");
    if (ptr) glcorewBindProgramPipeline = (PFNGLBINDPROGRAMPIPELINEPROC) ptr;
    ptr = getprocaddress ("glDeleteProgramPipelines");
    if (ptr) glcorewDeleteProgramPipelines = (PFNGLDELETEPROGRAMPIPELINESPROC) ptr;
    ptr = getprocaddress ("glGenProgramPipelines");
    if (ptr) glcorewGenProgramPipelines = (PFNGLGENPROGRAMPIPELINESPROC) ptr;
    ptr = getprocaddress ("glIsProgramPipeline");
    if (ptr) glcorewIsProgramPipeline = (PFNGLISPROGRAMPIPELINEPROC) ptr;
    ptr = getprocaddress ("glGetProgramPipelineiv");
    if (ptr) glcorewGetProgramPipelineiv = (PFNGLGETPROGRAMPIPELINEIVPROC) ptr;
    ptr = getprocaddress ("glProgramUniform1i");
    if (ptr) glcorewProgramUniform1i = (PFNGLPROGRAMUNIFORM1IPROC) ptr;
    ptr = getprocaddress ("glProgramUniform1iv");
    if (ptr) glcorewProgramUniform1iv = (PFNGLPROGRAMUNIFORM1IVPROC) ptr;
    ptr = getprocaddress ("glProgramUniform1f");
    if (ptr) glcorewProgramUniform1f = (PFNGLPROGRAMUNIFORM1FPROC) ptr;
    ptr = getprocaddress ("glProgramUniform1fv");
    if (ptr) glcorewProgramUniform1fv = (PFNGLPROGRAMUNIFORM1FVPROC) ptr;
    ptr = getprocaddress ("glProgramUniform1d");
    if (ptr) glcorewProgramUniform1d = (PFNGLPROGRAMUNIFORM1DPROC) ptr;
    ptr = getprocaddress ("glProgramUniform1dv");
    if (ptr) glcorewProgramUniform1dv = (PFNGLPROGRAMUNIFORM1DVPROC) ptr;
    ptr = getprocaddress ("glProgramUniform1ui");
    if (ptr) glcorewProgramUniform1ui = (PFNGLPROGRAMUNIFORM1UIPROC) ptr;
    ptr = getprocaddress ("glProgramUniform1uiv");
    if (ptr) glcorewProgramUniform1uiv = (PFNGLPROGRAMUNIFORM1UIVPROC) ptr;
    ptr = getprocaddress ("glProgramUniform2i");
    if (ptr) glcorewProgramUniform2i = (PFNGLPROGRAMUNIFORM2IPROC) ptr;
    ptr = getprocaddress ("glProgramUniform2iv");
    if (ptr) glcorewProgramUniform2iv = (PFNGLPROGRAMUNIFORM2IVPROC) ptr;
    ptr = getprocaddress ("glProgramUniform2f");
    if (ptr) glcorewProgramUniform2f = (PFNGLPROGRAMUNIFORM2FPROC) ptr;
    ptr = getprocaddress ("glProgramUniform2fv");
    if (ptr) glcorewProgramUniform2fv = (PFNGLPROGRAMUNIFORM2FVPROC) ptr;
    ptr = getprocaddress ("glProgramUniform2d");
    if (ptr) glcorewProgramUniform2d = (PFNGLPROGRAMUNIFORM2DPROC) ptr;
    ptr = getprocaddress ("glProgramUniform2dv");
    if (ptr) glcorewProgramUniform2dv = (PFNGLPROGRAMUNIFORM2DVPROC) ptr;
    ptr = getprocaddress ("glProgramUniform2ui");
    if (ptr) glcorewProgramUniform2ui = (PFNGLPROGRAMUNIFORM2UIPROC) ptr;
    ptr = getprocaddress ("glProgramUniform2uiv");
    if (ptr) glcorewProgramUniform2uiv = (PFNGLPROGRAMUNIFORM2UIVPROC) ptr;
    ptr = getprocaddress ("glProgramUniform3i");
    if (ptr) glcorewProgramUniform3i = (PFNGLPROGRAMUNIFORM3IPROC) ptr;
    ptr = getprocaddress ("glProgramUniform3iv");
    if (ptr) glcorewProgramUniform3iv = (PFNGLPROGRAMUNIFORM3IVPROC) ptr;
    ptr = getprocaddress ("glProgramUniform3f");
    if (ptr) glcorewProgramUniform3f = (PFNGLPROGRAMUNIFORM3FPROC) ptr;
    ptr = getprocaddress ("glProgramUniform3fv");
    if (ptr) glcorewProgramUniform3fv = (PFNGLPROGRAMUNIFORM3FVPROC) ptr;
    ptr = getprocaddress ("glProgramUniform3d");
    if (ptr) glcorewProgramUniform3d = (PFNGLPROGRAMUNIFORM3DPROC) ptr;
    ptr = getprocaddress ("glProgramUniform3dv");
    if (ptr) glcorewProgramUniform3dv = (PFNGLPROGRAMUNIFORM3DVPROC) ptr;
    ptr = getprocaddress ("glProgramUniform3ui");
    if (ptr) glcorewProgramUniform3ui = (PFNGLPROGRAMUNIFORM3UIPROC) ptr;
    ptr = getprocaddress ("glProgramUniform3uiv");
    if (ptr) glcorewProgramUniform3uiv = (PFNGLPROGRAMUNIFORM3UIVPROC) ptr;
    ptr = getprocaddress ("glProgramUniform4i");
    if (ptr) glcorewProgramUniform4i = (PFNGLPROGRAMUNIFORM4IPROC) ptr;
    ptr = getprocaddress ("glProgramUniform4iv");
    if (ptr) glcorewProgramUniform4iv = (PFNGLPROGRAMUNIFORM4IVPROC) ptr;
    ptr = getprocaddress ("glProgramUniform4f");
    if (ptr) glcorewProgramUniform4f = (PFNGLPROGRAMUNIFORM4FPROC) ptr;
    ptr = getprocaddress ("glProgramUniform4fv");
    if (ptr) glcorewProgramUniform4fv = (PFNGLPROGRAMUNIFORM4FVPROC) ptr;
    ptr = getprocaddress ("glProgramUniform4d");
    if (ptr) glcorewProgramUniform4d = (PFNGLPROGRAMUNIFORM4DPROC) ptr;
    ptr = getprocaddress ("glProgramUniform4dv");
    if (ptr) glcorewProgramUniform4dv = (PFNGLPROGRAMUNIFORM4DVPROC) ptr;
    ptr = getprocaddress ("glProgramUniform4ui");
    if (ptr) glcorewProgramUniform4ui = (PFNGLPROGRAMUNIFORM4UIPROC) ptr;
    ptr = getprocaddress ("glProgramUniform4uiv");
    if (ptr) glcorewProgramUniform4uiv = (PFNGLPROGRAMUNIFORM4UIVPROC) ptr;
    ptr = getprocaddress ("glProgramUniformMatrix2fv");
    if (ptr) glcorewProgramUniformMatrix2fv = (PFNGLPROGRAMUNIFORMMATRIX2FVPROC) ptr;
    ptr = getprocaddress ("glProgramUniformMatrix3fv");
    if (ptr) glcorewProgramUniformMatrix3fv = (PFNGLPROGRAMUNIFORMMATRIX3FVPROC) ptr;
    ptr = getprocaddress ("glProgramUniformMatrix4fv");
    if (ptr) glcorewProgramUniformMatrix4fv = (PFNGLPROGRAMUNIFORMMATRIX4FVPROC) ptr;
    ptr = getprocaddress ("glProgramUniformMatrix2dv");
    if (ptr) glcorewProgramUniformMatrix2dv = (PFNGLPROGRAMUNIFORMMATRIX2DVPROC) ptr;
    ptr = getprocaddress ("glProgramUniformMatrix3dv");
    if (ptr) glcorewProgramUniformMatrix3dv = (PFNGLPROGRAMUNIFORMMATRIX3DVPROC) ptr;
    ptr = getprocaddress ("glProgramUniformMatrix4dv");
    if (ptr) glcorewProgramUniformMatrix4dv = (PFNGLPROGRAMUNIFORMMATRIX4DVPROC) ptr;
    ptr = getprocaddress ("glProgramUniformMatrix2x3fv");
    if (ptr) glcorewProgramUniformMatrix2x3fv = (PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC) ptr;
    ptr = getprocaddress ("glProgramUniformMatrix3x2fv");
    if (ptr) glcorewProgramUniformMatrix3x2fv = (PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC) ptr;
    ptr = getprocaddress ("glProgramUniformMatrix2x4fv");
    if (ptr) glcorewProgramUniformMatrix2x4fv = (PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC) ptr;
    ptr = getprocaddress ("glProgramUniformMatrix4x2fv");
    if (ptr) glcorewProgramUniformMatrix4x2fv = (PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC) ptr;
    ptr = getprocaddress ("glProgramUniformMatrix3x4fv");
    if (ptr) glcorewProgramUniformMatrix3x4fv = (PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC) ptr;
    ptr = getprocaddress ("glProgramUniformMatrix4x3fv");
    if (ptr) glcorewProgramUniformMatrix4x3fv = (PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC) ptr;
    ptr = getprocaddress ("glProgramUniformMatrix2x3dv");
    if (ptr) glcorewProgramUniformMatrix2x3dv = (PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC) ptr;
    ptr = getprocaddress ("glProgramUniformMatrix3x2dv");
    if (ptr) glcorewProgramUniformMatrix3x2dv = (PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC) ptr;
    ptr = getprocaddress ("glProgramUniformMatrix2x4dv");
    if (ptr) glcorewProgramUniformMatrix2x4dv = (PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC) ptr;
    ptr = getprocaddress ("glProgramUniformMatrix4x2dv");
    if (ptr) glcorewProgramUniformMatrix4x2dv = (PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC) ptr;
    ptr = getprocaddress ("glProgramUniformMatrix3x4dv");
    if (ptr) glcorewProgramUniformMatrix3x4dv = (PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC) ptr;
    ptr = getprocaddress ("glProgramUniformMatrix4x3dv");
    if (ptr) glcorewProgramUniformMatrix4x3dv = (PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC) ptr;
    ptr = getprocaddress ("glValidateProgramPipeline");
    if (ptr) glcorewValidateProgramPipeline = (PFNGLVALIDATEPROGRAMPIPELINEPROC) ptr;
    ptr = getprocaddress ("glGetProgramPipelineInfoLog");
    if (ptr) glcorewGetProgramPipelineInfoLog = (PFNGLGETPROGRAMPIPELINEINFOLOGPROC) ptr;
    ptr = getprocaddress ("glVertexAttribL1d");
    if (ptr) glcorewVertexAttribL1d = (PFNGLVERTEXATTRIBL1DPROC) ptr;
    ptr = getprocaddress ("glVertexAttribL2d");
    if (ptr) glcorewVertexAttribL2d = (PFNGLVERTEXATTRIBL2DPROC) ptr;
    ptr = getprocaddress ("glVertexAttribL3d");
    if (ptr) glcorewVertexAttribL3d = (PFNGLVERTEXATTRIBL3DPROC) ptr;
    ptr = getprocaddress ("glVertexAttribL4d");
    if (ptr) glcorewVertexAttribL4d = (PFNGLVERTEXATTRIBL4DPROC) ptr;
    ptr = getprocaddress ("glVertexAttribL1dv");
    if (ptr) glcorewVertexAttribL1dv = (PFNGLVERTEXATTRIBL1DVPROC) ptr;
    ptr = getprocaddress ("glVertexAttribL2dv");
    if (ptr) glcorewVertexAttribL2dv = (PFNGLVERTEXATTRIBL2DVPROC) ptr;
    ptr = getprocaddress ("glVertexAttribL3dv");
    if (ptr) glcorewVertexAttribL3dv = (PFNGLVERTEXATTRIBL3DVPROC) ptr;
    ptr = getprocaddress ("glVertexAttribL4dv");
    if (ptr) glcorewVertexAttribL4dv = (PFNGLVERTEXATTRIBL4DVPROC) ptr;
    ptr = getprocaddress ("glVertexAttribLPointer");
    if (ptr) glcorewVertexAttribLPointer = (PFNGLVERTEXATTRIBLPOINTERPROC) ptr;
    ptr = getprocaddress ("glGetVertexAttribLdv");
    if (ptr) glcorewGetVertexAttribLdv = (PFNGLGETVERTEXATTRIBLDVPROC) ptr;
    ptr = getprocaddress ("glViewportArrayv");
    if (ptr) glcorewViewportArrayv = (PFNGLVIEWPORTARRAYVPROC) ptr;
    ptr = getprocaddress ("glViewportIndexedf");
    if (ptr) glcorewViewportIndexedf = (PFNGLVIEWPORTINDEXEDFPROC) ptr;
    ptr = getprocaddress ("glViewportIndexedfv");
    if (ptr) glcorewViewportIndexedfv = (PFNGLVIEWPORTINDEXEDFVPROC) ptr;
    ptr = getprocaddress ("glScissorArrayv");
    if (ptr) glcorewScissorArrayv = (PFNGLSCISSORARRAYVPROC) ptr;
    ptr = getprocaddress ("glScissorIndexed");
    if (ptr) glcorewScissorIndexed = (PFNGLSCISSORINDEXEDPROC) ptr;
    ptr = getprocaddress ("glScissorIndexedv");
    if (ptr) glcorewScissorIndexedv = (PFNGLSCISSORINDEXEDVPROC) ptr;
    ptr = getprocaddress ("glDepthRangeArrayv");
    if (ptr) glcorewDepthRangeArrayv = (PFNGLDEPTHRANGEARRAYVPROC) ptr;
    ptr = getprocaddress ("glDepthRangeIndexed");
    if (ptr) glcorewDepthRangeIndexed = (PFNGLDEPTHRANGEINDEXEDPROC) ptr;
    ptr = getprocaddress ("glGetFloati_v");
    if (ptr) glcorewGetFloati_v = (PFNGLGETFLOATI_VPROC) ptr;
    ptr = getprocaddress ("glGetDoublei_v");
    if (ptr) glcorewGetDoublei_v = (PFNGLGETDOUBLEI_VPROC) ptr;
    ptr = getprocaddress ("glDrawArraysInstancedBaseInstance");
    if (ptr) glcorewDrawArraysInstancedBaseInstance = (PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC) ptr;
    ptr = getprocaddress ("glDrawElementsInstancedBaseInstance");
    if (ptr) glcorewDrawElementsInstancedBaseInstance = (PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC) ptr;
    ptr = getprocaddress ("glDrawElementsInstancedBaseVertexBaseInstance");
    if (ptr) glcorewDrawElementsInstancedBaseVertexBaseInstance = (PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC) ptr;
    ptr = getprocaddress ("glGetInternalformativ");
    if (ptr) glcorewGetInternalformativ = (PFNGLGETINTERNALFORMATIVPROC) ptr;
    ptr = getprocaddress ("glGetActiveAtomicCounterBufferiv");
    if (ptr) glcorewGetActiveAtomicCounterBufferiv = (PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC) ptr;
    ptr = getprocaddress ("glBindImageTexture");
    if (ptr) glcorewBindImageTexture = (PFNGLBINDIMAGETEXTUREPROC) ptr;
    ptr = getprocaddress ("glMemoryBarrier");
    if (ptr) glcorewMemoryBarrier = (PFNGLMEMORYBARRIERPROC) ptr;
    ptr = getprocaddress ("glTexStorage1D");
    if (ptr) glcorewTexStorage1D = (PFNGLTEXSTORAGE1DPROC) ptr;
    ptr = getprocaddress ("glTexStorage2D");
    if (ptr) glcorewTexStorage2D = (PFNGLTEXSTORAGE2DPROC) ptr;
    ptr = getprocaddress ("glTexStorage3D");
    if (ptr) glcorewTexStorage3D = (PFNGLTEXSTORAGE3DPROC) ptr;
    ptr = getprocaddress ("glDrawTransformFeedbackInstanced");
    if (ptr) glcorewDrawTransformFeedbackInstanced = (PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC) ptr;
    ptr = getprocaddress ("glDrawTransformFeedbackStreamInstanced");
    if (ptr) glcorewDrawTransformFeedbackStreamInstanced = (PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC) ptr;
    ptr = getprocaddress ("glClearBufferData");
    if (ptr) glcorewClearBufferData = (PFNGLCLEARBUFFERDATAPROC) ptr;
    ptr = getprocaddress ("glClearBufferSubData");
    if (ptr) glcorewClearBufferSubData = (PFNGLCLEARBUFFERSUBDATAPROC) ptr;
    ptr = getprocaddress ("glDispatchCompute");
    if (ptr) glcorewDispatchCompute = (PFNGLDISPATCHCOMPUTEPROC) ptr;
    ptr = getprocaddress ("glDispatchComputeIndirect");
    if (ptr) glcorewDispatchComputeIndirect = (PFNGLDISPATCHCOMPUTEINDIRECTPROC) ptr;
    ptr = getprocaddress ("glCopyImageSubData");
    if (ptr) glcorewCopyImageSubData = (PFNGLCOPYIMAGESUBDATAPROC) ptr;
    ptr = getprocaddress ("glFramebufferParameteri");
    if (ptr) glcorewFramebufferParameteri = (PFNGLFRAMEBUFFERPARAMETERIPROC) ptr;
    ptr = getprocaddress ("glGetFramebufferParameteriv");
    if (ptr) glcorewGetFramebufferParameteriv = (PFNGLGETFRAMEBUFFERPARAMETERIVPROC) ptr;
    ptr = getprocaddress ("glGetInternalformati64v");
    if (ptr) glcorewGetInternalformati64v = (PFNGLGETINTERNALFORMATI64VPROC) ptr;
    ptr = getprocaddress ("glInvalidateTexSubImage");
    if (ptr) glcorewInvalidateTexSubImage = (PFNGLINVALIDATETEXSUBIMAGEPROC) ptr;
    ptr = getprocaddress ("glInvalidateTexImage");
    if (ptr) glcorewInvalidateTexImage = (PFNGLINVALIDATETEXIMAGEPROC) ptr;
    ptr = getprocaddress ("glInvalidateBufferSubData");
    if (ptr) glcorewInvalidateBufferSubData = (PFNGLINVALIDATEBUFFERSUBDATAPROC) ptr;
    ptr = getprocaddress ("glInvalidateBufferData");
    if (ptr) glcorewInvalidateBufferData = (PFNGLINVALIDATEBUFFERDATAPROC) ptr;
    ptr = getprocaddress ("glInvalidateFramebuffer");
    if (ptr) glcorewInvalidateFramebuffer = (PFNGLINVALIDATEFRAMEBUFFERPROC) ptr;
    ptr = getprocaddress ("glInvalidateSubFramebuffer");
    if (ptr) glcorewInvalidateSubFramebuffer = (PFNGLINVALIDATESUBFRAMEBUFFERPROC) ptr;
    ptr = getprocaddress ("glMultiDrawArraysIndirect");
    if (ptr) glcorewMultiDrawArraysIndirect = (PFNGLMULTIDRAWARRAYSINDIRECTPROC) ptr;
    ptr = getprocaddress ("glMultiDrawElementsIndirect");
    if (ptr) glcorewMultiDrawElementsIndirect = (PFNGLMULTIDRAWELEMENTSINDIRECTPROC) ptr;
    ptr = getprocaddress ("glGetProgramInterfaceiv");
    if (ptr) glcorewGetProgramInterfaceiv = (PFNGLGETPROGRAMINTERFACEIVPROC) ptr;
    ptr = getprocaddress ("glGetProgramResourceIndex");
    if (ptr) glcorewGetProgramResourceIndex = (PFNGLGETPROGRAMRESOURCEINDEXPROC) ptr;
    ptr = getprocaddress ("glGetProgramResourceName");
    if (ptr) glcorewGetProgramResourceName = (PFNGLGETPROGRAMRESOURCENAMEPROC) ptr;
    ptr = getprocaddress ("glGetProgramResourceiv");
    if (ptr) glcorewGetProgramResourceiv = (PFNGLGETPROGRAMRESOURCEIVPROC) ptr;
    ptr = getprocaddress ("glGetProgramResourceLocation");
    if (ptr) glcorewGetProgramResourceLocation = (PFNGLGETPROGRAMRESOURCELOCATIONPROC) ptr;
    ptr = getprocaddress ("glGetProgramResourceLocationIndex");
    if (ptr) glcorewGetProgramResourceLocationIndex = (PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC) ptr;
    ptr = getprocaddress ("glShaderStorageBlockBinding");
    if (ptr) glcorewShaderStorageBlockBinding = (PFNGLSHADERSTORAGEBLOCKBINDINGPROC) ptr;
    ptr = getprocaddress ("glTexBufferRange");
    if (ptr) glcorewTexBufferRange = (PFNGLTEXBUFFERRANGEPROC) ptr;
    ptr = getprocaddress ("glTexStorage2DMultisample");
    if (ptr) glcorewTexStorage2DMultisample = (PFNGLTEXSTORAGE2DMULTISAMPLEPROC) ptr;
    ptr = getprocaddress ("glTexStorage3DMultisample");
    if (ptr) glcorewTexStorage3DMultisample = (PFNGLTEXSTORAGE3DMULTISAMPLEPROC) ptr;
    ptr = getprocaddress ("glTextureView");
    if (ptr) glcorewTextureView = (PFNGLTEXTUREVIEWPROC) ptr;
    ptr = getprocaddress ("glBindVertexBuffer");
    if (ptr) glcorewBindVertexBuffer = (PFNGLBINDVERTEXBUFFERPROC) ptr;
    ptr = getprocaddress ("glVertexAttribFormat");
    if (ptr) glcorewVertexAttribFormat = (PFNGLVERTEXATTRIBFORMATPROC) ptr;
    ptr = getprocaddress ("glVertexAttribIFormat");
    if (ptr) glcorewVertexAttribIFormat = (PFNGLVERTEXATTRIBIFORMATPROC) ptr;
    ptr = getprocaddress ("glVertexAttribLFormat");
    if (ptr) glcorewVertexAttribLFormat = (PFNGLVERTEXATTRIBLFORMATPROC) ptr;
    ptr = getprocaddress ("glVertexAttribBinding");
    if (ptr) glcorewVertexAttribBinding = (PFNGLVERTEXATTRIBBINDINGPROC) ptr;
    ptr = getprocaddress ("glVertexBindingDivisor");
    if (ptr) glcorewVertexBindingDivisor = (PFNGLVERTEXBINDINGDIVISORPROC) ptr;
    ptr = getprocaddress ("glDebugMessageControl");
    if (ptr) glcorewDebugMessageControl = (PFNGLDEBUGMESSAGECONTROLPROC) ptr;
    ptr = getprocaddress ("glDebugMessageInsert");
    if (ptr) glcorewDebugMessageInsert = (PFNGLDEBUGMESSAGEINSERTPROC) ptr;
    ptr = getprocaddress ("glDebugMessageCallback");
    if (ptr) glcorewDebugMessageCallback = (PFNGLDEBUGMESSAGECALLBACKPROC) ptr;
    ptr = getprocaddress ("glGetDebugMessageLog");
    if (ptr) glcorewGetDebugMessageLog = (PFNGLGETDEBUGMESSAGELOGPROC) ptr;
    ptr = getprocaddress ("glPushDebugGroup");
    if (ptr) glcorewPushDebugGroup = (PFNGLPUSHDEBUGGROUPPROC) ptr;
    ptr = getprocaddress ("glPopDebugGroup");
    if (ptr) glcorewPopDebugGroup = (PFNGLPOPDEBUGGROUPPROC) ptr;
    ptr = getprocaddress ("glObjectLabel");
    if (ptr) glcorewObjectLabel = (PFNGLOBJECTLABELPROC) ptr;
    ptr = getprocaddress ("glGetObjectLabel");
    if (ptr) glcorewGetObjectLabel = (PFNGLGETOBJECTLABELPROC) ptr;
    ptr = getprocaddress ("glObjectPtrLabel");
    if (ptr) glcorewObjectPtrLabel = (PFNGLOBJECTPTRLABELPROC) ptr;
    ptr = getprocaddress ("glGetObjectPtrLabel");
    if (ptr) glcorewGetObjectPtrLabel = (PFNGLGETOBJECTPTRLABELPROC) ptr;
    ptr = getprocaddress ("glBufferStorage");
    if (ptr) glcorewBufferStorage = (PFNGLBUFFERSTORAGEPROC) ptr;
    ptr = getprocaddress ("glClearTexImage");
    if (ptr) glcorewClearTexImage = (PFNGLCLEARTEXIMAGEPROC) ptr;
    ptr = getprocaddress ("glClearTexSubImage");
    if (ptr) glcorewClearTexSubImage = (PFNGLCLEARTEXSUBIMAGEPROC) ptr;
    ptr = getprocaddress ("glBindBuffersBase");
    if (ptr) glcorewBindBuffersBase = (PFNGLBINDBUFFERSBASEPROC) ptr;
    ptr = getprocaddress ("glBindBuffersRange");
    if (ptr) glcorewBindBuffersRange = (PFNGLBINDBUFFERSRANGEPROC) ptr;
    ptr = getprocaddress ("glBindTextures");
    if (ptr) glcorewBindTextures = (PFNGLBINDTEXTURESPROC) ptr;
    ptr = getprocaddress ("glBindSamplers");
    if (ptr) glcorewBindSamplers = (PFNGLBINDSAMPLERSPROC) ptr;
    ptr = getprocaddress ("glBindImageTextures");
    if (ptr) glcorewBindImageTextures = (PFNGLBINDIMAGETEXTURESPROC) ptr;
    ptr = getprocaddress ("glBindVertexBuffers");
    if (ptr) glcorewBindVertexBuffers = (PFNGLBINDVERTEXBUFFERSPROC) ptr;
    ptr = getprocaddress ("glGetTextureHandleARB");
    if (ptr) glcorewGetTextureHandleARB = (PFNGLGETTEXTUREHANDLEARBPROC) ptr;
    ptr = getprocaddress ("glGetTextureSamplerHandleARB");
    if (ptr) glcorewGetTextureSamplerHandleARB = (PFNGLGETTEXTURESAMPLERHANDLEARBPROC) ptr;
    ptr = getprocaddress ("glMakeTextureHandleResidentARB");
    if (ptr) glcorewMakeTextureHandleResidentARB = (PFNGLMAKETEXTUREHANDLERESIDENTARBPROC) ptr;
    ptr = getprocaddress ("glMakeTextureHandleNonResidentARB");
    if (ptr) glcorewMakeTextureHandleNonResidentARB = (PFNGLMAKETEXTUREHANDLENONRESIDENTARBPROC) ptr;
    ptr = getprocaddress ("glGetImageHandleARB");
    if (ptr) glcorewGetImageHandleARB = (PFNGLGETIMAGEHANDLEARBPROC) ptr;
    ptr = getprocaddress ("glMakeImageHandleResidentARB");
    if (ptr) glcorewMakeImageHandleResidentARB = (PFNGLMAKEIMAGEHANDLERESIDENTARBPROC) ptr;
    ptr = getprocaddress ("glMakeImageHandleNonResidentARB");
    if (ptr) glcorewMakeImageHandleNonResidentARB = (PFNGLMAKEIMAGEHANDLENONRESIDENTARBPROC) ptr;
    ptr = getprocaddress ("glUniformHandleui64ARB");
    if (ptr) glcorewUniformHandleui64ARB = (PFNGLUNIFORMHANDLEUI64ARBPROC) ptr;
    ptr = getprocaddress ("glUniformHandleui64vARB");
    if (ptr) glcorewUniformHandleui64vARB = (PFNGLUNIFORMHANDLEUI64VARBPROC) ptr;
    ptr = getprocaddress ("glProgramUniformHandleui64ARB");
    if (ptr) glcorewProgramUniformHandleui64ARB = (PFNGLPROGRAMUNIFORMHANDLEUI64ARBPROC) ptr;
    ptr = getprocaddress ("glProgramUniformHandleui64vARB");
    if (ptr) glcorewProgramUniformHandleui64vARB = (PFNGLPROGRAMUNIFORMHANDLEUI64VARBPROC) ptr;
    ptr = getprocaddress ("glIsTextureHandleResidentARB");
    if (ptr) glcorewIsTextureHandleResidentARB = (PFNGLISTEXTUREHANDLERESIDENTARBPROC) ptr;
    ptr = getprocaddress ("glIsImageHandleResidentARB");
    if (ptr) glcorewIsImageHandleResidentARB = (PFNGLISIMAGEHANDLERESIDENTARBPROC) ptr;
    ptr = getprocaddress ("glVertexAttribL1ui64ARB");
    if (ptr) glcorewVertexAttribL1ui64ARB = (PFNGLVERTEXATTRIBL1UI64ARBPROC) ptr;
    ptr = getprocaddress ("glVertexAttribL1ui64vARB");
    if (ptr) glcorewVertexAttribL1ui64vARB = (PFNGLVERTEXATTRIBL1UI64VARBPROC) ptr;
    ptr = getprocaddress ("glGetVertexAttribLui64vARB");
    if (ptr) glcorewGetVertexAttribLui64vARB = (PFNGLGETVERTEXATTRIBLUI64VARBPROC) ptr;
    ptr = getprocaddress ("glCreateSyncFromCLeventARB");
    if (ptr) glcorewCreateSyncFromCLeventARB = (PFNGLCREATESYNCFROMCLEVENTARBPROC) ptr;
    ptr = getprocaddress ("glDispatchComputeGroupSizeARB");
    if (ptr) glcorewDispatchComputeGroupSizeARB = (PFNGLDISPATCHCOMPUTEGROUPSIZEARBPROC) ptr;
    ptr = getprocaddress ("glDebugMessageControlARB");
    if (ptr) glcorewDebugMessageControlARB = (PFNGLDEBUGMESSAGECONTROLARBPROC) ptr;
    ptr = getprocaddress ("glDebugMessageInsertARB");
    if (ptr) glcorewDebugMessageInsertARB = (PFNGLDEBUGMESSAGEINSERTARBPROC) ptr;
    ptr = getprocaddress ("glDebugMessageCallbackARB");
    if (ptr) glcorewDebugMessageCallbackARB = (PFNGLDEBUGMESSAGECALLBACKARBPROC) ptr;
    ptr = getprocaddress ("glGetDebugMessageLogARB");
    if (ptr) glcorewGetDebugMessageLogARB = (PFNGLGETDEBUGMESSAGELOGARBPROC) ptr;
    ptr = getprocaddress ("glBlendEquationiARB");
    if (ptr) glcorewBlendEquationiARB = (PFNGLBLENDEQUATIONIARBPROC) ptr;
    ptr = getprocaddress ("glBlendEquationSeparateiARB");
    if (ptr) glcorewBlendEquationSeparateiARB = (PFNGLBLENDEQUATIONSEPARATEIARBPROC) ptr;
    ptr = getprocaddress ("glBlendFunciARB");
    if (ptr) glcorewBlendFunciARB = (PFNGLBLENDFUNCIARBPROC) ptr;
    ptr = getprocaddress ("glBlendFuncSeparateiARB");
    if (ptr) glcorewBlendFuncSeparateiARB = (PFNGLBLENDFUNCSEPARATEIARBPROC) ptr;
    ptr = getprocaddress ("glMultiDrawArraysIndirectCountARB");
    if (ptr) glcorewMultiDrawArraysIndirectCountARB = (PFNGLMULTIDRAWARRAYSINDIRECTCOUNTARBPROC) ptr;
    ptr = getprocaddress ("glMultiDrawElementsIndirectCountARB");
    if (ptr) glcorewMultiDrawElementsIndirectCountARB = (PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTARBPROC) ptr;
    ptr = getprocaddress ("glGetGraphicsResetStatusARB");
    if (ptr) glcorewGetGraphicsResetStatusARB = (PFNGLGETGRAPHICSRESETSTATUSARBPROC) ptr;
    ptr = getprocaddress ("glGetnTexImageARB");
    if (ptr) glcorewGetnTexImageARB = (PFNGLGETNTEXIMAGEARBPROC) ptr;
    ptr = getprocaddress ("glReadnPixelsARB");
    if (ptr) glcorewReadnPixelsARB = (PFNGLREADNPIXELSARBPROC) ptr;
    ptr = getprocaddress ("glGetnCompressedTexImageARB");
    if (ptr) glcorewGetnCompressedTexImageARB = (PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC) ptr;
    ptr = getprocaddress ("glGetnUniformfvARB");
    if (ptr) glcorewGetnUniformfvARB = (PFNGLGETNUNIFORMFVARBPROC) ptr;
    ptr = getprocaddress ("glGetnUniformivARB");
    if (ptr) glcorewGetnUniformivARB = (PFNGLGETNUNIFORMIVARBPROC) ptr;
    ptr = getprocaddress ("glGetnUniformuivARB");
    if (ptr) glcorewGetnUniformuivARB = (PFNGLGETNUNIFORMUIVARBPROC) ptr;
    ptr = getprocaddress ("glGetnUniformdvARB");
    if (ptr) glcorewGetnUniformdvARB = (PFNGLGETNUNIFORMDVARBPROC) ptr;
    ptr = getprocaddress ("glMinSampleShadingARB");
    if (ptr) glcorewMinSampleShadingARB = (PFNGLMINSAMPLESHADINGARBPROC) ptr;
    ptr = getprocaddress ("glNamedStringARB");
    if (ptr) glcorewNamedStringARB = (PFNGLNAMEDSTRINGARBPROC) ptr;
    ptr = getprocaddress ("glDeleteNamedStringARB");
    if (ptr) glcorewDeleteNamedStringARB = (PFNGLDELETENAMEDSTRINGARBPROC) ptr;
    ptr = getprocaddress ("glCompileShaderIncludeARB");
    if (ptr) glcorewCompileShaderIncludeARB = (PFNGLCOMPILESHADERINCLUDEARBPROC) ptr;
    ptr = getprocaddress ("glIsNamedStringARB");
    if (ptr) glcorewIsNamedStringARB = (PFNGLISNAMEDSTRINGARBPROC) ptr;
    ptr = getprocaddress ("glGetNamedStringARB");
    if (ptr) glcorewGetNamedStringARB = (PFNGLGETNAMEDSTRINGARBPROC) ptr;
    ptr = getprocaddress ("glGetNamedStringivARB");
    if (ptr) glcorewGetNamedStringivARB = (PFNGLGETNAMEDSTRINGIVARBPROC) ptr;
    ptr = getprocaddress ("glTexPageCommitmentARB");
    if (ptr) glcorewTexPageCommitmentARB = (PFNGLTEXPAGECOMMITMENTARBPROC) ptr;

}

#ifdef _WIN32
/* This workaround falls back to loading symbols
 * directly from OpenGL32.dll, as wglGetProcAddress
 * may return NULL for legacy opengl entry points. */
static HMODULE __glcorewOpengl32DllHandle = NULL;
static glcorewGetProcAddressCallback __glcorewUserGetProcAddressCallback = NULL;
inline void *__glcorewGetProcAddress (const char *name)
{
    void *ptr = NULL;
    if (__glcorewUserGetProcAddressCallback)
         ptr = __glcorewUserGetProcAddressCallback (name);
    if (!ptr && __glcorewOpengl32DllHandle)
         ptr = (void*) GetProcAddress (__glcorewOpengl32DllHandle, name);
    return ptr;
}
#endif

void glcorewInit (glcorewGetProcAddressCallback callback) {
    std::stringstream version;
    int major, minor;

#ifdef _WIN32
    __glcorewOpengl32DllHandle = LoadLibrary ("OPENGL32.DLL");
    __glcorewUserGetProcAddressCallback = callback;
    _glcorewInit (__glcorewGetProcAddress);
#else
    _glcorewInit (callback);
#endif
    if (!glcorewGetString || glcorewGetString == (PFNGLGETSTRINGPROC) glcorewUnsupported)
         throw std::runtime_error ("No entry point for glGetString found.");

    version << glcorewGetString (GL_VERSION);
    if (glGetError () != GL_NO_ERROR)
        throw std::runtime_error ("Cannot determine OpenGL version.");
    version >> major;
    version.ignore (1);
    version >> minor;

    if (major < 4 || minor < 3)
         throw std::runtime_error ("OpenGL version 4.3 or higher is required.");
}
