#ifndef BLUR_H
#define BLUR_H

#include "common.h"
#include "ShaderProgram.h"
#include "FullscreenQuad.h"

/** Blur class.
 * This class performs a Gaussian blur on a texture.
 */
class Blur
{
public:
	/** Constructor.
	 */
	Blur (void);
	/** Destructor.
	 */
	~Blur (void);

	/** Compute weights.
	 * Computes blur weights for a given sigma and stores them in the
	 * buffer object currently bound to target.
	 * \param target target of the buffer object to use
	 * \param sigma blur sigma
	 */
	static void ComputeWeights (const GLuint &target, float sigma);

	/** Apply blur.
	 * Applies the blur to the currently bound texture and renders
	 * the result as a fullscreen quad (i.e. an appropriate framebuffer
	 * object must be bound by the caller).
	 * \param offsetscale Scale factor for the texture fetch offsets.
	 *                    For a horizontal blur use (1/inputWidth,0)
	 *                    and for a vertical blur use (0,1/inputHeight).
	 * \param weights Weight buffer for the blur. A weight buffer
	 *                can be generated by ComputeWeights.
	 */
	void Apply (const glm::vec2 &offsetscale, const GLuint &weights);
private:
	/** Shader program.
	 * Shader program that performs the blur.
	 */
	ShaderProgram program;

	/** Offset scale uniform location.
	 * Uniform location of the offset scale uniform variable.
	 */
    GLuint offsetscaleloc;

    /** Fullscreen quad.
     * Fullscreen quad used to output the blur.
     */
    FullscreenQuad fsquad;
};

#endif /* BLUR_H */
